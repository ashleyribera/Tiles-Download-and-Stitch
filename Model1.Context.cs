//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RoadsEntities : DbContext
    {
        public RoadsEntities()
            : base("name=RoadsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AddressRanx> AddressRanges { get; set; }
        public virtual DbSet<AppErrorLog> AppErrorLogs { get; set; }
        public virtual DbSet<AssocCommZA> AssocCommZAs { get; set; }
        public virtual DbSet<AssociatedRoad> AssociatedRoads { get; set; }
        public virtual DbSet<BondComment> BondComments { get; set; }
        public virtual DbSet<CommercialSite> CommercialSites { get; set; }
        public virtual DbSet<CommercialSitesAudit> CommercialSitesAudits { get; set; }
        public virtual DbSet<CSAlias> CSAliases { get; set; }
        public virtual DbSet<CSAsBuilt> CSAsBuilts { get; set; }
        public virtual DbSet<CSComment> CSComments { get; set; }
        public virtual DbSet<CulDeSac> CulDeSacs { get; set; }
        public virtual DbSet<EngSubComment> EngSubComments { get; set; }
        public virtual DbSet<EngSubmittal> EngSubmittals { get; set; }
        public virtual DbSet<LUBOCDistrict> LUBOCDistricts { get; set; }
        public virtual DbSet<LUBOCMember> LUBOCMembers { get; set; }
        public virtual DbSet<LUConsolTable> LUConsolTables { get; set; }
        public virtual DbSet<LUConstInspector> LUConstInspectors { get; set; }
        public virtual DbSet<LUContractor> LUContractors { get; set; }
        public virtual DbSet<LUContractorsAudit> LUContractorsAudits { get; set; }
        public virtual DbSet<LUDeveloper> LUDevelopers { get; set; }
        public virtual DbSet<LUDevelopersAudit> LUDevelopersAudits { get; set; }
        public virtual DbSet<LUEngFirm> LUEngFirms { get; set; }
        public virtual DbSet<LURefType> LURefTypes { get; set; }
        public virtual DbSet<LURoadDirection> LURoadDirections { get; set; }
        public virtual DbSet<LURoadNameType> LURoadNameTypes { get; set; }
        public virtual DbSet<LUSWInspector> LUSWInspectors { get; set; }
        public virtual DbSet<LUTableList> LUTableLists { get; set; }
        public virtual DbSet<MasterBond> MasterBonds { get; set; }
        public virtual DbSet<MasterBondsAudit> MasterBondsAudits { get; set; }
        public virtual DbSet<MasterRoad> MasterRoads { get; set; }
        public virtual DbSet<MasterRoadsAudit> MasterRoadsAudits { get; set; }
        public virtual DbSet<MasterSubAlias> MasterSubAliases { get; set; }
        public virtual DbSet<MasterSubComment> MasterSubComments { get; set; }
        public virtual DbSet<MasterSubdiv> MasterSubdivs { get; set; }
        public virtual DbSet<MasterSubdivAudit> MasterSubdivAudits { get; set; }
        public virtual DbSet<MasterSubdivZA> MasterSubdivZAs { get; set; }
        public virtual DbSet<MiscValue> MiscValues { get; set; }
        public virtual DbSet<PlatAlias> PlatAliases { get; set; }
        public virtual DbSet<PlatComment> PlatComments { get; set; }
        public virtual DbSet<Rating> Ratings { get; set; }
        public virtual DbSet<RespondingAgency> RespondingAgencies { get; set; }
        public virtual DbSet<Resurfacing> Resurfacings { get; set; }
        public virtual DbSet<RightOfWay> RightOfWays { get; set; }
        public virtual DbSet<RoadAlias> RoadAliases { get; set; }
        public virtual DbSet<RoadComment> RoadComments { get; set; }
        public virtual DbSet<RoadDistrict> RoadDistricts { get; set; }
        public virtual DbSet<SpeedLimit> SpeedLimits { get; set; }
        public virtual DbSet<StorageRequest> StorageRequests { get; set; }
        public virtual DbSet<Striping> Stripings { get; set; }
        public virtual DbSet<SubdivFee> SubdivFees { get; set; }
        public virtual DbSet<SubdivisionPlat> SubdivisionPlats { get; set; }
        public virtual DbSet<SubdivisionPlatsAudit> SubdivisionPlatsAudits { get; set; }
        public virtual DbSet<SubdivPermit> SubdivPermits { get; set; }
        public virtual DbSet<SubDivZA> SubDivZAs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<xp_print_EngSubComments_EngSubmitID_Result> xp_print_EngSubComments_EngSubmitID(Nullable<int> engSubmitID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var engSubmitIDParameter = engSubmitID.HasValue ?
                new ObjectParameter("engSubmitID", engSubmitID) :
                new ObjectParameter("engSubmitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_print_EngSubComments_EngSubmitID_Result>("xp_print_EngSubComments_EngSubmitID", engSubmitIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_print_EngSubmittals_EngSubmitID(Nullable<int> submitID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var submitIDParameter = submitID.HasValue ?
                new ObjectParameter("submitID", submitID) :
                new ObjectParameter("submitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_print_EngSubmittals_EngSubmitID", submitIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_print_SubdivFees_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_print_SubdivFees_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_AddressRanges_AddrRangeID(Nullable<int> addrRangeID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var addrRangeIDParameter = addrRangeID.HasValue ?
                new ObjectParameter("addrRangeID", addrRangeID) :
                new ObjectParameter("addrRangeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_AddressRanges_AddrRangeID", addrRangeIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_AssocCommZA_AssocZAID(Nullable<int> assocZaID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var assocZaIDParameter = assocZaID.HasValue ?
                new ObjectParameter("assocZaID", assocZaID) :
                new ObjectParameter("assocZaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_AssocCommZA_AssocZAID", assocZaIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_AssociatedRoads_AssocRoadID(Nullable<int> assocRoadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var assocRoadIDParameter = assocRoadID.HasValue ?
                new ObjectParameter("assocRoadID", assocRoadID) :
                new ObjectParameter("assocRoadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_AssociatedRoads_AssocRoadID", assocRoadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_BondComments_BondCommentID(Nullable<int> commentID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commentIDParameter = commentID.HasValue ?
                new ObjectParameter("commentID", commentID) :
                new ObjectParameter("commentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_BondComments_BondCommentID", commentIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_CommercialSites_CommSiteID(Nullable<int> commSiteID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commSiteIDParameter = commSiteID.HasValue ?
                new ObjectParameter("commSiteID", commSiteID) :
                new ObjectParameter("commSiteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_CommercialSites_CommSiteID", commSiteIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_CommercialSites_Developer_CommSiteID(Nullable<int> commSiteID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commSiteIDParameter = commSiteID.HasValue ?
                new ObjectParameter("commSiteID", commSiteID) :
                new ObjectParameter("commSiteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_CommercialSites_Developer_CommSiteID", commSiteIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_CommercialSites_Road_CommSiteID(Nullable<int> commSiteID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commSiteIDParameter = commSiteID.HasValue ?
                new ObjectParameter("commSiteID", commSiteID) :
                new ObjectParameter("commSiteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_CommercialSites_Road_CommSiteID", commSiteIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_CSAliases_CSAliasID(Nullable<int> aliasID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var aliasIDParameter = aliasID.HasValue ?
                new ObjectParameter("aliasID", aliasID) :
                new ObjectParameter("aliasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_CSAliases_CSAliasID", aliasIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_CSAsBuilts_CSABID(Nullable<int> csabID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var csabIDParameter = csabID.HasValue ?
                new ObjectParameter("csabID", csabID) :
                new ObjectParameter("csabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_CSAsBuilts_CSABID", csabIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_CSComments_CSCommID(Nullable<int> commID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commIDParameter = commID.HasValue ?
                new ObjectParameter("commID", commID) :
                new ObjectParameter("commID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_CSComments_CSCommID", commIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_CulDeSacs_CulDeSacID(Nullable<int> culDeSacID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var culDeSacIDParameter = culDeSacID.HasValue ?
                new ObjectParameter("culDeSacID", culDeSacID) :
                new ObjectParameter("culDeSacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_CulDeSacs_CulDeSacID", culDeSacIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<string> xp_rtrv_DeleteEMail(ObjectParameter miscvalue, ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xp_rtrv_DeleteEMail", miscvalue, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_EngSubComments_EngSubCommID(Nullable<int> commentID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commentIDParameter = commentID.HasValue ?
                new ObjectParameter("commentID", commentID) :
                new ObjectParameter("commentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_EngSubComments_EngSubCommID", commentIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_EngSubmittals_EngSubmitID(Nullable<int> submitID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var submitIDParameter = submitID.HasValue ?
                new ObjectParameter("submitID", submitID) :
                new ObjectParameter("submitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_EngSubmittals_EngSubmitID", submitIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUBOCDistricts_Result> xp_rtrv_LUBOCDistricts(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUBOCDistricts_Result>("xp_rtrv_LUBOCDistricts", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUBOCMembers_Result> xp_rtrv_LUBOCMembers(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUBOCMembers_Result>("xp_rtrv_LUBOCMembers", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUConsolTable_TableCatNo_Result> xp_rtrv_LUConsolTable_TableCatNo(Nullable<int> tableCatNo, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var tableCatNoParameter = tableCatNo.HasValue ?
                new ObjectParameter("tableCatNo", tableCatNo) :
                new ObjectParameter("tableCatNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUConsolTable_TableCatNo_Result>("xp_rtrv_LUConsolTable_TableCatNo", tableCatNoParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUConstInspectors_Result> xp_rtrv_LUConstInspectors(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUConstInspectors_Result>("xp_rtrv_LUConstInspectors", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUContractors_Result> xp_rtrv_LUContractors(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUContractors_Result>("xp_rtrv_LUContractors", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUDevelopers_Result> xp_rtrv_LUDevelopers(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUDevelopers_Result>("xp_rtrv_LUDevelopers", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUDevelopers_CSDev_Result> xp_rtrv_LUDevelopers_CSDev(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUDevelopers_CSDev_Result>("xp_rtrv_LUDevelopers_CSDev", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUDevelopers_PDev_Result> xp_rtrv_LUDevelopers_PDev(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUDevelopers_PDev_Result>("xp_rtrv_LUDevelopers_PDev", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUEngFirms_Result> xp_rtrv_LUEngFirms(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUEngFirms_Result>("xp_rtrv_LUEngFirms", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LURoadDirections_Result> xp_rtrv_LURoadDirections(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LURoadDirections_Result>("xp_rtrv_LURoadDirections", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LURoadNameTypes_Result> xp_rtrv_LURoadNameTypes(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LURoadNameTypes_Result>("xp_rtrv_LURoadNameTypes", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUSWInspectors_Result> xp_rtrv_LUSWInspectors(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUSWInspectors_Result>("xp_rtrv_LUSWInspectors", spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_LUTableList_Result> xp_rtrv_LUTableList(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_LUTableList_Result>("xp_rtrv_LUTableList", spstat, errmsg);
        }
    
        public virtual int xp_rtrv_MasterBonds_BondID(Nullable<int> bondID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var bondIDParameter = bondID.HasValue ?
                new ObjectParameter("bondID", bondID) :
                new ObjectParameter("bondID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_MasterBonds_BondID", bondIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_MasterBonds_Developer_BondID(Nullable<int> bondID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var bondIDParameter = bondID.HasValue ?
                new ObjectParameter("bondID", bondID) :
                new ObjectParameter("bondID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_MasterBonds_Developer_BondID", bondIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_MasterRoads_RoadID_Result> xp_rtrv_MasterRoads_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_MasterRoads_RoadID_Result>("xp_rtrv_MasterRoads_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_MasterSubAliases_SubAliasID(Nullable<int> subAliasID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var subAliasIDParameter = subAliasID.HasValue ?
                new ObjectParameter("subAliasID", subAliasID) :
                new ObjectParameter("subAliasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_MasterSubAliases_SubAliasID", subAliasIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_MasterSubComments_MasterSubCommID(Nullable<int> subCommID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var subCommIDParameter = subCommID.HasValue ?
                new ObjectParameter("subCommID", subCommID) :
                new ObjectParameter("subCommID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_MasterSubComments_MasterSubCommID", subCommIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_MasterSubdivision_MasterSubID(Nullable<int> masterSubID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterSubIDParameter = masterSubID.HasValue ?
                new ObjectParameter("masterSubID", masterSubID) :
                new ObjectParameter("masterSubID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_MasterSubdivision_MasterSubID", masterSubIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_rtrv_MasterSubdivZA_All_Result> xp_rtrv_MasterSubdivZA_All(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_rtrv_MasterSubdivZA_All_Result>("xp_rtrv_MasterSubdivZA_All", spstat, errmsg);
        }
    
        public virtual int xp_rtrv_MasterSubdivZA_MasterSubdivZAID(Nullable<int> subdivZaID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var subdivZaIDParameter = subdivZaID.HasValue ?
                new ObjectParameter("subdivZaID", subdivZaID) :
                new ObjectParameter("subdivZaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_MasterSubdivZA_MasterSubdivZAID", subdivZaIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_PlatAliases_PlatAliasID(Nullable<int> aliasID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var aliasIDParameter = aliasID.HasValue ?
                new ObjectParameter("aliasID", aliasID) :
                new ObjectParameter("aliasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_PlatAliases_PlatAliasID", aliasIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_PlatComments_PlatCommID(Nullable<int> commID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commIDParameter = commID.HasValue ?
                new ObjectParameter("commID", commID) :
                new ObjectParameter("commID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_PlatComments_PlatCommID", commIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_Ratings_RatingID(Nullable<int> ratingID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var ratingIDParameter = ratingID.HasValue ?
                new ObjectParameter("ratingID", ratingID) :
                new ObjectParameter("ratingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_Ratings_RatingID", ratingIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_RespondingAgency_RespAgencyID(Nullable<int> agencyID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("agencyID", agencyID) :
                new ObjectParameter("agencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_RespondingAgency_RespAgencyID", agencyIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_Resurfacing_ResurfID(Nullable<int> resurfID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var resurfIDParameter = resurfID.HasValue ?
                new ObjectParameter("resurfID", resurfID) :
                new ObjectParameter("resurfID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_Resurfacing_ResurfID", resurfIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_RightOfWay_RightOfWayID(Nullable<int> rowID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("rowID", rowID) :
                new ObjectParameter("rowID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_RightOfWay_RightOfWayID", rowIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_RoadAliases_AliasID(Nullable<int> aliasID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var aliasIDParameter = aliasID.HasValue ?
                new ObjectParameter("aliasID", aliasID) :
                new ObjectParameter("aliasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_RoadAliases_AliasID", aliasIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_RoadComments_CommentID(Nullable<int> commentID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commentIDParameter = commentID.HasValue ?
                new ObjectParameter("commentID", commentID) :
                new ObjectParameter("commentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_RoadComments_CommentID", commentIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_RoadDistricts_RoadDistID(Nullable<int> roadDistID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadDistIDParameter = roadDistID.HasValue ?
                new ObjectParameter("roadDistID", roadDistID) :
                new ObjectParameter("roadDistID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_RoadDistricts_RoadDistID", roadDistIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SpeedLimits_SpeedLimitID(Nullable<int> speedID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var speedIDParameter = speedID.HasValue ?
                new ObjectParameter("speedID", speedID) :
                new ObjectParameter("speedID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SpeedLimits_SpeedLimitID", speedIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_StorageRequests_StorReqID(Nullable<int> reqID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var reqIDParameter = reqID.HasValue ?
                new ObjectParameter("reqID", reqID) :
                new ObjectParameter("reqID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_StorageRequests_StorReqID", reqIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_Striping_StripeID(Nullable<int> stripeID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var stripeIDParameter = stripeID.HasValue ?
                new ObjectParameter("stripeID", stripeID) :
                new ObjectParameter("stripeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_Striping_StripeID", stripeIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SubdivFees_SubdivFeeID(Nullable<int> feeID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var feeIDParameter = feeID.HasValue ?
                new ObjectParameter("feeID", feeID) :
                new ObjectParameter("feeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SubdivFees_SubdivFeeID", feeIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SubdivisionPlats_Developer_MasterPlatID(Nullable<int> masterPlatID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterPlatIDParameter = masterPlatID.HasValue ?
                new ObjectParameter("masterPlatID", masterPlatID) :
                new ObjectParameter("masterPlatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SubdivisionPlats_Developer_MasterPlatID", masterPlatIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SubdivisionPlats_MasterPlatID(Nullable<int> masterPlatID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterPlatIDParameter = masterPlatID.HasValue ?
                new ObjectParameter("masterPlatID", masterPlatID) :
                new ObjectParameter("masterPlatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SubdivisionPlats_MasterPlatID", masterPlatIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SubdivisionPlats_Road_MasterPlatID(Nullable<int> masterPlatID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterPlatIDParameter = masterPlatID.HasValue ?
                new ObjectParameter("masterPlatID", masterPlatID) :
                new ObjectParameter("masterPlatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SubdivisionPlats_Road_MasterPlatID", masterPlatIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SubdivPermits_PermitNo(string permitNo, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var permitNoParameter = permitNo != null ?
                new ObjectParameter("permitNo", permitNo) :
                new ObjectParameter("permitNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SubdivPermits_PermitNo", permitNoParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SubdivPermits_SubdivPermitID(Nullable<int> permitID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var permitIDParameter = permitID.HasValue ?
                new ObjectParameter("permitID", permitID) :
                new ObjectParameter("permitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SubdivPermits_SubdivPermitID", permitIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SubDivZA_SubdivZAID(Nullable<int> subdivZaID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var subdivZaIDParameter = subdivZaID.HasValue ?
                new ObjectParameter("subdivZaID", subdivZaID) :
                new ObjectParameter("subdivZaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SubDivZA_SubdivZAID", subdivZaIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_rtrv_SumAssocPhaseLength(Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter sumAssocPhaseLength)
        {
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_rtrv_SumAssocPhaseLength", refIDParameter, spstat, errmsg, sumAssocPhaseLength);
        }
    
        public virtual ObjectResult<string> xp_rtrv_UserRole(string userid, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xp_rtrv_UserRole", useridParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_AddressRanges_AssocRoadID(Nullable<int> assocRoadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var assocRoadIDParameter = assocRoadID.HasValue ?
                new ObjectParameter("assocRoadID", assocRoadID) :
                new ObjectParameter("assocRoadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_AddressRanges_AssocRoadID", assocRoadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_AssocCommZA_CommSiteID(Nullable<int> commSiteID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commSiteIDParameter = commSiteID.HasValue ?
                new ObjectParameter("commSiteID", commSiteID) :
                new ObjectParameter("commSiteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_AssocCommZA_CommSiteID", commSiteIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_AssociatedRoads_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_AssociatedRoads_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_AssociatedRoads_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_AssociatedRoads_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_BondComments_BondID(Nullable<int> bondID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var bondIDParameter = bondID.HasValue ?
                new ObjectParameter("bondID", bondID) :
                new ObjectParameter("bondID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_BondComments_BondID", bondIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CommercialSites_DeveloperID(Nullable<int> developerID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var developerIDParameter = developerID.HasValue ?
                new ObjectParameter("developerID", developerID) :
                new ObjectParameter("developerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CommercialSites_DeveloperID", developerIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CommercialSites_EntranceRoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CommercialSites_EntranceRoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CommercialSites_MasterSubID(Nullable<int> masterSubID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterSubIDParameter = masterSubID.HasValue ?
                new ObjectParameter("masterSubID", masterSubID) :
                new ObjectParameter("masterSubID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CommercialSites_MasterSubID", masterSubIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CommercialSites_MatchName(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CommercialSites_MatchName", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CommercialSites_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CommercialSites_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_CommercialSites_NameStartsWith_Result> xp_srch_CommercialSites_NameStartsWith(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_CommercialSites_NameStartsWith_Result>("xp_srch_CommercialSites_NameStartsWith", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CSAliases_CommSiteID(Nullable<int> commSiteID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commSiteIDParameter = commSiteID.HasValue ?
                new ObjectParameter("commSiteID", commSiteID) :
                new ObjectParameter("commSiteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CSAliases_CommSiteID", commSiteIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CSAliases_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CSAliases_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CSAsBuilts_CommSiteID(Nullable<int> commSiteID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commSiteIDParameter = commSiteID.HasValue ?
                new ObjectParameter("commSiteID", commSiteID) :
                new ObjectParameter("commSiteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CSAsBuilts_CommSiteID", commSiteIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CSComments_CommSiteID(Nullable<int> commSiteID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var commSiteIDParameter = commSiteID.HasValue ?
                new ObjectParameter("commSiteID", commSiteID) :
                new ObjectParameter("commSiteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CSComments_CommSiteID", commSiteIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_CulDeSacs_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_CulDeSacs_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_EngSubComments_EngSubmitID(Nullable<int> engSubmitID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var engSubmitIDParameter = engSubmitID.HasValue ?
                new ObjectParameter("engSubmitID", engSubmitID) :
                new ObjectParameter("engSubmitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_EngSubComments_EngSubmitID", engSubmitIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_EngSubmittals_EngFirmID(Nullable<int> firmID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var firmIDParameter = firmID.HasValue ?
                new ObjectParameter("firmID", firmID) :
                new ObjectParameter("firmID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_EngSubmittals_EngFirmID", firmIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_EngSubmittals_RefType(ObjectParameter spstat, ObjectParameter errmsg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_EngSubmittals_RefType", spstat, errmsg);
        }
    
        public virtual int xp_srch_EngSubmittals_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_EngSubmittals_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_LUContractors_ContractorID_Result> xp_srch_LUContractors_ContractorID(Nullable<int> contractorID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var contractorIDParameter = contractorID.HasValue ?
                new ObjectParameter("contractorID", contractorID) :
                new ObjectParameter("contractorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_LUContractors_ContractorID_Result>("xp_srch_LUContractors_ContractorID", contractorIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_LUDevelopers_DeveloperID_Result> xp_srch_LUDevelopers_DeveloperID(Nullable<int> developerID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var developerIDParameter = developerID.HasValue ?
                new ObjectParameter("developerID", developerID) :
                new ObjectParameter("developerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_LUDevelopers_DeveloperID_Result>("xp_srch_LUDevelopers_DeveloperID", developerIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_LUEngFirms_EngFirmID_Result> xp_srch_LUEngFirms_EngFirmID(Nullable<int> engFirmID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var engFirmIDParameter = engFirmID.HasValue ?
                new ObjectParameter("engFirmID", engFirmID) :
                new ObjectParameter("engFirmID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_LUEngFirms_EngFirmID_Result>("xp_srch_LUEngFirms_EngFirmID", engFirmIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterBonds_BondNo(string bondNo, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var bondNoParameter = bondNo != null ?
                new ObjectParameter("bondNo", bondNo) :
                new ObjectParameter("bondNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterBonds_BondNo", bondNoParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterBonds_DeveloperID(Nullable<int> developerID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var developerIDParameter = developerID.HasValue ?
                new ObjectParameter("developerID", developerID) :
                new ObjectParameter("developerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterBonds_DeveloperID", developerIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterBonds_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterBonds_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_MasterRoads_MatchName_Result> xp_srch_MasterRoads_MatchName(string loc, string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_MasterRoads_MatchName_Result>("xp_srch_MasterRoads_MatchName", locParameter, nameParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_MasterRoads_Name_Result> xp_srch_MasterRoads_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_MasterRoads_Name_Result>("xp_srch_MasterRoads_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_MasterRoads_NameStartsWith_Result> xp_srch_MasterRoads_NameStartsWith(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_MasterRoads_NameStartsWith_Result>("xp_srch_MasterRoads_NameStartsWith", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterSubAliases_MasterSubID(Nullable<int> masterSubID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterSubIDParameter = masterSubID.HasValue ?
                new ObjectParameter("masterSubID", masterSubID) :
                new ObjectParameter("masterSubID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterSubAliases_MasterSubID", masterSubIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterSubAliases_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterSubAliases_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterSubComments_MasterSubID(Nullable<int> masterSubID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterSubIDParameter = masterSubID.HasValue ?
                new ObjectParameter("masterSubID", masterSubID) :
                new ObjectParameter("masterSubID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterSubComments_MasterSubID", masterSubIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterSubdivision_EntranceRoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterSubdivision_EntranceRoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterSubdivision_MatchName(string loc, string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterSubdivision_MatchName", locParameter, nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterSubdivision_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterSubdivision_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_MasterSubdivision_NameStartsWith_Result> xp_srch_MasterSubdivision_NameStartsWith(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_MasterSubdivision_NameStartsWith_Result>("xp_srch_MasterSubdivision_NameStartsWith", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_MasterSubdivZA_MasterSubID(Nullable<int> masterSubID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterSubIDParameter = masterSubID.HasValue ?
                new ObjectParameter("masterSubID", masterSubID) :
                new ObjectParameter("masterSubID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_MasterSubdivZA_MasterSubID", masterSubIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_PlatAliases_MasterPlatID(Nullable<int> platID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var platIDParameter = platID.HasValue ?
                new ObjectParameter("platID", platID) :
                new ObjectParameter("platID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_PlatAliases_MasterPlatID", platIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_PlatAliases_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_PlatAliases_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_PlatComments_MasterPlatID(Nullable<int> platID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var platIDParameter = platID.HasValue ?
                new ObjectParameter("platID", platID) :
                new ObjectParameter("platID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_PlatComments_MasterPlatID", platIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_Ratings_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_Ratings_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_Ratings_RouteID(Nullable<int> routeID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var routeIDParameter = routeID.HasValue ?
                new ObjectParameter("routeID", routeID) :
                new ObjectParameter("routeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_Ratings_RouteID", routeIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_RespondingAgency_AgencyID(Nullable<int> agencyID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("agencyID", agencyID) :
                new ObjectParameter("agencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_RespondingAgency_AgencyID", agencyIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_RespondingAgency_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_RespondingAgency_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_Resurfacing_ContractorID(Nullable<int> contractorID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var contractorIDParameter = contractorID.HasValue ?
                new ObjectParameter("contractorID", contractorID) :
                new ObjectParameter("contractorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_Resurfacing_ContractorID", contractorIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_Resurfacing_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_Resurfacing_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_RightOfWay_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_RightOfWay_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_RoadAliases_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_RoadAliases_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_RoadAliases_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_RoadAliases_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_RoadComments_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_RoadComments_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_RoadDistricts_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_RoadDistricts_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SpeedLimits_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SpeedLimits_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_StorageRequests_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_StorageRequests_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_Striping_ContractorID(Nullable<int> contractorID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var contractorIDParameter = contractorID.HasValue ?
                new ObjectParameter("contractorID", contractorID) :
                new ObjectParameter("contractorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_Striping_ContractorID", contractorIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_Striping_RoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_Striping_RoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubdivFees_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubdivFees_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubdivisionPlats_DeveloperID(Nullable<int> developerID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var developerIDParameter = developerID.HasValue ?
                new ObjectParameter("developerID", developerID) :
                new ObjectParameter("developerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubdivisionPlats_DeveloperID", developerIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubdivisionPlats_EntranceRoadID(Nullable<int> roadID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var roadIDParameter = roadID.HasValue ?
                new ObjectParameter("roadID", roadID) :
                new ObjectParameter("roadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubdivisionPlats_EntranceRoadID", roadIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubdivisionPlats_MasterSubID(Nullable<int> masterSubID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var masterSubIDParameter = masterSubID.HasValue ?
                new ObjectParameter("masterSubID", masterSubID) :
                new ObjectParameter("masterSubID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubdivisionPlats_MasterSubID", masterSubIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubdivisionPlats_MatchName(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubdivisionPlats_MatchName", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubdivisionPlats_Name(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubdivisionPlats_Name", nameParameter, spstat, errmsg);
        }
    
        public virtual ObjectResult<xp_srch_SubdivisionPlats_NameStartsWith_Result> xp_srch_SubdivisionPlats_NameStartsWith(string name, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_srch_SubdivisionPlats_NameStartsWith_Result>("xp_srch_SubdivisionPlats_NameStartsWith", nameParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubdivPermits_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubdivPermits_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubDivZA_RefType_RefID(string refType, Nullable<int> refID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubDivZA_RefType_RefID", refTypeParameter, refIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_srch_SubDivZA_RefType_RefID_RezoneID(string refType, Nullable<int> refID, Nullable<int> rezoneID, ObjectParameter spstat, ObjectParameter errmsg)
        {
            var refTypeParameter = refType != null ?
                new ObjectParameter("refType", refType) :
                new ObjectParameter("refType", typeof(string));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("refID", refID) :
                new ObjectParameter("refID", typeof(int));
    
            var rezoneIDParameter = rezoneID.HasValue ?
                new ObjectParameter("rezoneID", rezoneID) :
                new ObjectParameter("rezoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_srch_SubDivZA_RefType_RefID_RezoneID", refTypeParameter, refIDParameter, rezoneIDParameter, spstat, errmsg);
        }
    
        public virtual int xp_upd_LUBOCDistricts_Order(Nullable<int> bocdistrictid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUBOCDistricts_Order", bocdistrictidParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LUBOCMembers_Order(Nullable<int> bocmemberid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocmemberidParameter = bocmemberid.HasValue ?
                new ObjectParameter("bocmemberid", bocmemberid) :
                new ObjectParameter("bocmemberid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUBOCMembers_Order", bocmemberidParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LUConsolTable_Order(Nullable<int> consolid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var consolidParameter = consolid.HasValue ?
                new ObjectParameter("consolid", consolid) :
                new ObjectParameter("consolid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUConsolTable_Order", consolidParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LUConstInspectors_Order(Nullable<int> constinspid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUConstInspectors_Order", constinspidParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LUContractors_Order(Nullable<int> contractorid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("contractorid", contractorid) :
                new ObjectParameter("contractorid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUContractors_Order", contractoridParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LUDevelopers_Order(Nullable<int> developerid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUDevelopers_Order", developeridParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LUEngFirms_Order(Nullable<int> engfirmid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engfirmidParameter = engfirmid.HasValue ?
                new ObjectParameter("engfirmid", engfirmid) :
                new ObjectParameter("engfirmid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUEngFirms_Order", engfirmidParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LURoadDirections_Order(Nullable<int> roaddirid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roaddiridParameter = roaddirid.HasValue ?
                new ObjectParameter("roaddirid", roaddirid) :
                new ObjectParameter("roaddirid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LURoadDirections_Order", roaddiridParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LURoadNameTypes_Order(Nullable<int> roadnametypeid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadnametypeidParameter = roadnametypeid.HasValue ?
                new ObjectParameter("roadnametypeid", roadnametypeid) :
                new ObjectParameter("roadnametypeid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LURoadNameTypes_Order", roadnametypeidParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_upd_LUSWInspectors_Order(Nullable<int> swinspid, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var swinspidParameter = swinspid.HasValue ?
                new ObjectParameter("swinspid", swinspid) :
                new ObjectParameter("swinspid", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_upd_LUSWInspectors_Order", swinspidParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Check_Child_AssociatedRoads(Nullable<int> recid, ObjectParameter criteriastat, ObjectParameter childstat, ObjectParameter childrenfound, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Check_Child_AssociatedRoads", recidParameter, criteriastat, childstat, childrenfound, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Check_Child_CommercialSites(Nullable<int> recid, ObjectParameter criteriastat, ObjectParameter childstat, ObjectParameter childrenfound, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Check_Child_CommercialSites", recidParameter, criteriastat, childstat, childrenfound, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Check_Child_MasterRoads(Nullable<int> recid, ObjectParameter criteriastat, ObjectParameter childstat, ObjectParameter childrenfound, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Check_Child_MasterRoads", recidParameter, criteriastat, childstat, childrenfound, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Check_Child_MasterSubdiv(Nullable<int> recid, ObjectParameter criteriastat, ObjectParameter childstat, ObjectParameter childrenfound, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Check_Child_MasterSubdiv", recidParameter, criteriastat, childstat, childrenfound, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Check_Child_SubdivisionPlats(Nullable<int> recid, ObjectParameter criteriastat, ObjectParameter childstat, ObjectParameter childrenfound, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Check_Child_SubdivisionPlats", recidParameter, criteriastat, childstat, childrenfound, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_AddressRanges_Rec(Nullable<int> assocroadid, Nullable<int> lowerlimit, Nullable<int> upperlimit, string addrrngcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var assocroadidParameter = assocroadid.HasValue ?
                new ObjectParameter("assocroadid", assocroadid) :
                new ObjectParameter("assocroadid", typeof(int));
    
            var lowerlimitParameter = lowerlimit.HasValue ?
                new ObjectParameter("lowerlimit", lowerlimit) :
                new ObjectParameter("lowerlimit", typeof(int));
    
            var upperlimitParameter = upperlimit.HasValue ?
                new ObjectParameter("upperlimit", upperlimit) :
                new ObjectParameter("upperlimit", typeof(int));
    
            var addrrngcommentParameter = addrrngcomment != null ?
                new ObjectParameter("addrrngcomment", addrrngcomment) :
                new ObjectParameter("addrrngcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_AddressRanges_Rec", assocroadidParameter, lowerlimitParameter, upperlimitParameter, addrrngcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_AssocCommZA_Rec(Nullable<int> commsiteid, string zoningappno, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var zoningappnoParameter = zoningappno != null ?
                new ObjectParameter("zoningappno", zoningappno) :
                new ObjectParameter("zoningappno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_AssocCommZA_Rec", commsiteidParameter, zoningappnoParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_AssociatedRoads_Rec(string reftype, Nullable<int> refid, Nullable<int> roadid, Nullable<decimal> measurefrom, Nullable<decimal> measureto, Nullable<decimal> measurelength, Nullable<decimal> assocphaselength, Nullable<decimal> gislength, string fromtodesc, Nullable<int> mainttypeid, Nullable<System.DateTime> origsurfdate, Nullable<int> surftypeid, string surfcomment, Nullable<bool> curbgutter, Nullable<int> watersourceid, Nullable<int> sewerproviderid, string assocroadscomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var measurefromParameter = measurefrom.HasValue ?
                new ObjectParameter("measurefrom", measurefrom) :
                new ObjectParameter("measurefrom", typeof(decimal));
    
            var measuretoParameter = measureto.HasValue ?
                new ObjectParameter("measureto", measureto) :
                new ObjectParameter("measureto", typeof(decimal));
    
            var measurelengthParameter = measurelength.HasValue ?
                new ObjectParameter("measurelength", measurelength) :
                new ObjectParameter("measurelength", typeof(decimal));
    
            var assocphaselengthParameter = assocphaselength.HasValue ?
                new ObjectParameter("assocphaselength", assocphaselength) :
                new ObjectParameter("assocphaselength", typeof(decimal));
    
            var gislengthParameter = gislength.HasValue ?
                new ObjectParameter("gislength", gislength) :
                new ObjectParameter("gislength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var mainttypeidParameter = mainttypeid.HasValue ?
                new ObjectParameter("mainttypeid", mainttypeid) :
                new ObjectParameter("mainttypeid", typeof(int));
    
            var origsurfdateParameter = origsurfdate.HasValue ?
                new ObjectParameter("origsurfdate", origsurfdate) :
                new ObjectParameter("origsurfdate", typeof(System.DateTime));
    
            var surftypeidParameter = surftypeid.HasValue ?
                new ObjectParameter("surftypeid", surftypeid) :
                new ObjectParameter("surftypeid", typeof(int));
    
            var surfcommentParameter = surfcomment != null ?
                new ObjectParameter("surfcomment", surfcomment) :
                new ObjectParameter("surfcomment", typeof(string));
    
            var curbgutterParameter = curbgutter.HasValue ?
                new ObjectParameter("curbgutter", curbgutter) :
                new ObjectParameter("curbgutter", typeof(bool));
    
            var watersourceidParameter = watersourceid.HasValue ?
                new ObjectParameter("watersourceid", watersourceid) :
                new ObjectParameter("watersourceid", typeof(int));
    
            var sewerprovideridParameter = sewerproviderid.HasValue ?
                new ObjectParameter("sewerproviderid", sewerproviderid) :
                new ObjectParameter("sewerproviderid", typeof(int));
    
            var assocroadscommentParameter = assocroadscomment != null ?
                new ObjectParameter("assocroadscomment", assocroadscomment) :
                new ObjectParameter("assocroadscomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_AssociatedRoads_Rec", reftypeParameter, refidParameter, roadidParameter, measurefromParameter, measuretoParameter, measurelengthParameter, assocphaselengthParameter, gislengthParameter, fromtodescParameter, mainttypeidParameter, origsurfdateParameter, surftypeidParameter, surfcommentParameter, curbgutterParameter, watersourceidParameter, sewerprovideridParameter, assocroadscommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_BondComments_Rec(Nullable<int> bondid, string bondcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bondidParameter = bondid.HasValue ?
                new ObjectParameter("bondid", bondid) :
                new ObjectParameter("bondid", typeof(int));
    
            var bondcommentParameter = bondcomment != null ?
                new ObjectParameter("bondcomment", bondcomment) :
                new ObjectParameter("bondcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_BondComments_Rec", bondidParameter, bondcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_CommercialSites_Rec(Nullable<int> mastersubid, string sitename, Nullable<int> entranceroadid, Nullable<int> constinspid, Nullable<int> swinspid, Nullable<int> bocdistrictid, Nullable<System.DateTime> storagedate, string storageloc, Nullable<bool> swfacinspmaintcov, Nullable<decimal> acreage, Nullable<int> developerid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var sitenameParameter = sitename != null ?
                new ObjectParameter("sitename", sitename) :
                new ObjectParameter("sitename", typeof(string));
    
            var entranceroadidParameter = entranceroadid.HasValue ?
                new ObjectParameter("entranceroadid", entranceroadid) :
                new ObjectParameter("entranceroadid", typeof(int));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var swinspidParameter = swinspid.HasValue ?
                new ObjectParameter("swinspid", swinspid) :
                new ObjectParameter("swinspid", typeof(int));
    
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            var storagedateParameter = storagedate.HasValue ?
                new ObjectParameter("storagedate", storagedate) :
                new ObjectParameter("storagedate", typeof(System.DateTime));
    
            var storagelocParameter = storageloc != null ?
                new ObjectParameter("storageloc", storageloc) :
                new ObjectParameter("storageloc", typeof(string));
    
            var swfacinspmaintcovParameter = swfacinspmaintcov.HasValue ?
                new ObjectParameter("swfacinspmaintcov", swfacinspmaintcov) :
                new ObjectParameter("swfacinspmaintcov", typeof(bool));
    
            var acreageParameter = acreage.HasValue ?
                new ObjectParameter("acreage", acreage) :
                new ObjectParameter("acreage", typeof(decimal));
    
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_CommercialSites_Rec", mastersubidParameter, sitenameParameter, entranceroadidParameter, constinspidParameter, swinspidParameter, bocdistrictidParameter, storagedateParameter, storagelocParameter, swfacinspmaintcovParameter, acreageParameter, developeridParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_CSAliases_Rec(Nullable<int> commsiteid, string csaliasname, string csaliascomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var csaliasnameParameter = csaliasname != null ?
                new ObjectParameter("csaliasname", csaliasname) :
                new ObjectParameter("csaliasname", typeof(string));
    
            var csaliascommentParameter = csaliascomment != null ?
                new ObjectParameter("csaliascomment", csaliascomment) :
                new ObjectParameter("csaliascomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_CSAliases_Rec", commsiteidParameter, csaliasnameParameter, csaliascommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_CSAsBuilts_Rec(Nullable<int> commsiteid, Nullable<System.DateTime> asbuiltrecvddate, Nullable<System.DateTime> asbuiltcommdate, Nullable<System.DateTime> asbuiltfinappvldate, string structuredesc, Nullable<System.DateTime> storagedate, string storageloc, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var asbuiltrecvddateParameter = asbuiltrecvddate.HasValue ?
                new ObjectParameter("asbuiltrecvddate", asbuiltrecvddate) :
                new ObjectParameter("asbuiltrecvddate", typeof(System.DateTime));
    
            var asbuiltcommdateParameter = asbuiltcommdate.HasValue ?
                new ObjectParameter("asbuiltcommdate", asbuiltcommdate) :
                new ObjectParameter("asbuiltcommdate", typeof(System.DateTime));
    
            var asbuiltfinappvldateParameter = asbuiltfinappvldate.HasValue ?
                new ObjectParameter("asbuiltfinappvldate", asbuiltfinappvldate) :
                new ObjectParameter("asbuiltfinappvldate", typeof(System.DateTime));
    
            var structuredescParameter = structuredesc != null ?
                new ObjectParameter("structuredesc", structuredesc) :
                new ObjectParameter("structuredesc", typeof(string));
    
            var storagedateParameter = storagedate.HasValue ?
                new ObjectParameter("storagedate", storagedate) :
                new ObjectParameter("storagedate", typeof(System.DateTime));
    
            var storagelocParameter = storageloc != null ?
                new ObjectParameter("storageloc", storageloc) :
                new ObjectParameter("storageloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_CSAsBuilts_Rec", commsiteidParameter, asbuiltrecvddateParameter, asbuiltcommdateParameter, asbuiltfinappvldateParameter, structuredescParameter, storagedateParameter, storagelocParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_CSComments_Rec(Nullable<int> commsiteid, string cscomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var cscommentParameter = cscomment != null ?
                new ObjectParameter("cscomment", cscomment) :
                new ObjectParameter("cscomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_CSComments_Rec", commsiteidParameter, cscommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_CulDeSacs_Rec(Nullable<int> roadid, Nullable<int> radiusdimft, string culdesaccomm, Nullable<decimal> markpoint, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var radiusdimftParameter = radiusdimft.HasValue ?
                new ObjectParameter("radiusdimft", radiusdimft) :
                new ObjectParameter("radiusdimft", typeof(int));
    
            var culdesaccommParameter = culdesaccomm != null ?
                new ObjectParameter("culdesaccomm", culdesaccomm) :
                new ObjectParameter("culdesaccomm", typeof(string));
    
            var markpointParameter = markpoint.HasValue ?
                new ObjectParameter("markpoint", markpoint) :
                new ObjectParameter("markpoint", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_CulDeSacs_Rec", roadidParameter, radiusdimftParameter, culdesaccommParameter, markpointParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_EngSubComments_Rec(Nullable<int> engsubmitid, string engsubcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engsubmitidParameter = engsubmitid.HasValue ?
                new ObjectParameter("engsubmitid", engsubmitid) :
                new ObjectParameter("engsubmitid", typeof(int));
    
            var engsubcommentParameter = engsubcomment != null ?
                new ObjectParameter("engsubcomment", engsubcomment) :
                new ObjectParameter("engsubcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_EngSubComments_Rec", engsubmitidParameter, engsubcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_EngSubmittals_Rec(string reftype, Nullable<int> refid, string recvdby, string receivedfrom, Nullable<System.DateTime> recvddate, Nullable<int> submittaltypeid, string routedto, Nullable<System.DateTime> finalapprvdate, Nullable<int> engfirmid, string engcontactname, string engcontactphone, string engcontactfax, string engcontactemail, string projectname, string subaddr, string subcity, string subst, string subzip, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var recvdbyParameter = recvdby != null ?
                new ObjectParameter("recvdby", recvdby) :
                new ObjectParameter("recvdby", typeof(string));
    
            var receivedfromParameter = receivedfrom != null ?
                new ObjectParameter("receivedfrom", receivedfrom) :
                new ObjectParameter("receivedfrom", typeof(string));
    
            var recvddateParameter = recvddate.HasValue ?
                new ObjectParameter("recvddate", recvddate) :
                new ObjectParameter("recvddate", typeof(System.DateTime));
    
            var submittaltypeidParameter = submittaltypeid.HasValue ?
                new ObjectParameter("submittaltypeid", submittaltypeid) :
                new ObjectParameter("submittaltypeid", typeof(int));
    
            var routedtoParameter = routedto != null ?
                new ObjectParameter("routedto", routedto) :
                new ObjectParameter("routedto", typeof(string));
    
            var finalapprvdateParameter = finalapprvdate.HasValue ?
                new ObjectParameter("finalapprvdate", finalapprvdate) :
                new ObjectParameter("finalapprvdate", typeof(System.DateTime));
    
            var engfirmidParameter = engfirmid.HasValue ?
                new ObjectParameter("engfirmid", engfirmid) :
                new ObjectParameter("engfirmid", typeof(int));
    
            var engcontactnameParameter = engcontactname != null ?
                new ObjectParameter("engcontactname", engcontactname) :
                new ObjectParameter("engcontactname", typeof(string));
    
            var engcontactphoneParameter = engcontactphone != null ?
                new ObjectParameter("engcontactphone", engcontactphone) :
                new ObjectParameter("engcontactphone", typeof(string));
    
            var engcontactfaxParameter = engcontactfax != null ?
                new ObjectParameter("engcontactfax", engcontactfax) :
                new ObjectParameter("engcontactfax", typeof(string));
    
            var engcontactemailParameter = engcontactemail != null ?
                new ObjectParameter("engcontactemail", engcontactemail) :
                new ObjectParameter("engcontactemail", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subaddrParameter = subaddr != null ?
                new ObjectParameter("subaddr", subaddr) :
                new ObjectParameter("subaddr", typeof(string));
    
            var subcityParameter = subcity != null ?
                new ObjectParameter("subcity", subcity) :
                new ObjectParameter("subcity", typeof(string));
    
            var substParameter = subst != null ?
                new ObjectParameter("subst", subst) :
                new ObjectParameter("subst", typeof(string));
    
            var subzipParameter = subzip != null ?
                new ObjectParameter("subzip", subzip) :
                new ObjectParameter("subzip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_EngSubmittals_Rec", reftypeParameter, refidParameter, recvdbyParameter, receivedfromParameter, recvddateParameter, submittaltypeidParameter, routedtoParameter, finalapprvdateParameter, engfirmidParameter, engcontactnameParameter, engcontactphoneParameter, engcontactfaxParameter, engcontactemailParameter, projectnameParameter, subaddrParameter, subcityParameter, substParameter, subzipParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUBOCDistricts_Rec(string bocdistrictname, string bocdistrictdesc, Nullable<int> bocmemberid, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocdistrictnameParameter = bocdistrictname != null ?
                new ObjectParameter("bocdistrictname", bocdistrictname) :
                new ObjectParameter("bocdistrictname", typeof(string));
    
            var bocdistrictdescParameter = bocdistrictdesc != null ?
                new ObjectParameter("bocdistrictdesc", bocdistrictdesc) :
                new ObjectParameter("bocdistrictdesc", typeof(string));
    
            var bocmemberidParameter = bocmemberid.HasValue ?
                new ObjectParameter("bocmemberid", bocmemberid) :
                new ObjectParameter("bocmemberid", typeof(int));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUBOCDistricts_Rec", bocdistrictnameParameter, bocdistrictdescParameter, bocmemberidParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUBOCMembers_Rec(string bocmembername, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocmembernameParameter = bocmembername != null ?
                new ObjectParameter("bocmembername", bocmembername) :
                new ObjectParameter("bocmembername", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUBOCMembers_Rec", bocmembernameParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUConsolTable_Rec(Nullable<int> tablecatno, string consolname, string consoldesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var tablecatnoParameter = tablecatno.HasValue ?
                new ObjectParameter("tablecatno", tablecatno) :
                new ObjectParameter("tablecatno", typeof(int));
    
            var consolnameParameter = consolname != null ?
                new ObjectParameter("consolname", consolname) :
                new ObjectParameter("consolname", typeof(string));
    
            var consoldescParameter = consoldesc != null ?
                new ObjectParameter("consoldesc", consoldesc) :
                new ObjectParameter("consoldesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUConsolTable_Rec", tablecatnoParameter, consolnameParameter, consoldescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUConstInspectors_Rec(string constinspfirstname, string constinspmidname, string constinsplastname, string constinspcode, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var constinspfirstnameParameter = constinspfirstname != null ?
                new ObjectParameter("constinspfirstname", constinspfirstname) :
                new ObjectParameter("constinspfirstname", typeof(string));
    
            var constinspmidnameParameter = constinspmidname != null ?
                new ObjectParameter("constinspmidname", constinspmidname) :
                new ObjectParameter("constinspmidname", typeof(string));
    
            var constinsplastnameParameter = constinsplastname != null ?
                new ObjectParameter("constinsplastname", constinsplastname) :
                new ObjectParameter("constinsplastname", typeof(string));
    
            var constinspcodeParameter = constinspcode != null ?
                new ObjectParameter("constinspcode", constinspcode) :
                new ObjectParameter("constinspcode", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUConstInspectors_Rec", constinspfirstnameParameter, constinspmidnameParameter, constinsplastnameParameter, constinspcodeParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUContractors_Rec(Nullable<int> contstatusid, string contractorname, string contractoraddr, string contractorcity, string contractorst, string contractorzip, string contractorphone, Nullable<int> contractorext, string contractorfax, string contractoremail, string contractorcomment, string contactname, string contactaddr, string contactcity, string contactst, string contactzip, string contactphone, Nullable<int> contactext, string contactfax, string contactcell, string contactemail, string contactcomment, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var contstatusidParameter = contstatusid.HasValue ?
                new ObjectParameter("contstatusid", contstatusid) :
                new ObjectParameter("contstatusid", typeof(int));
    
            var contractornameParameter = contractorname != null ?
                new ObjectParameter("contractorname", contractorname) :
                new ObjectParameter("contractorname", typeof(string));
    
            var contractoraddrParameter = contractoraddr != null ?
                new ObjectParameter("contractoraddr", contractoraddr) :
                new ObjectParameter("contractoraddr", typeof(string));
    
            var contractorcityParameter = contractorcity != null ?
                new ObjectParameter("contractorcity", contractorcity) :
                new ObjectParameter("contractorcity", typeof(string));
    
            var contractorstParameter = contractorst != null ?
                new ObjectParameter("contractorst", contractorst) :
                new ObjectParameter("contractorst", typeof(string));
    
            var contractorzipParameter = contractorzip != null ?
                new ObjectParameter("contractorzip", contractorzip) :
                new ObjectParameter("contractorzip", typeof(string));
    
            var contractorphoneParameter = contractorphone != null ?
                new ObjectParameter("contractorphone", contractorphone) :
                new ObjectParameter("contractorphone", typeof(string));
    
            var contractorextParameter = contractorext.HasValue ?
                new ObjectParameter("contractorext", contractorext) :
                new ObjectParameter("contractorext", typeof(int));
    
            var contractorfaxParameter = contractorfax != null ?
                new ObjectParameter("contractorfax", contractorfax) :
                new ObjectParameter("contractorfax", typeof(string));
    
            var contractoremailParameter = contractoremail != null ?
                new ObjectParameter("contractoremail", contractoremail) :
                new ObjectParameter("contractoremail", typeof(string));
    
            var contractorcommentParameter = contractorcomment != null ?
                new ObjectParameter("contractorcomment", contractorcomment) :
                new ObjectParameter("contractorcomment", typeof(string));
    
            var contactnameParameter = contactname != null ?
                new ObjectParameter("contactname", contactname) :
                new ObjectParameter("contactname", typeof(string));
    
            var contactaddrParameter = contactaddr != null ?
                new ObjectParameter("contactaddr", contactaddr) :
                new ObjectParameter("contactaddr", typeof(string));
    
            var contactcityParameter = contactcity != null ?
                new ObjectParameter("contactcity", contactcity) :
                new ObjectParameter("contactcity", typeof(string));
    
            var contactstParameter = contactst != null ?
                new ObjectParameter("contactst", contactst) :
                new ObjectParameter("contactst", typeof(string));
    
            var contactzipParameter = contactzip != null ?
                new ObjectParameter("contactzip", contactzip) :
                new ObjectParameter("contactzip", typeof(string));
    
            var contactphoneParameter = contactphone != null ?
                new ObjectParameter("contactphone", contactphone) :
                new ObjectParameter("contactphone", typeof(string));
    
            var contactextParameter = contactext.HasValue ?
                new ObjectParameter("contactext", contactext) :
                new ObjectParameter("contactext", typeof(int));
    
            var contactfaxParameter = contactfax != null ?
                new ObjectParameter("contactfax", contactfax) :
                new ObjectParameter("contactfax", typeof(string));
    
            var contactcellParameter = contactcell != null ?
                new ObjectParameter("contactcell", contactcell) :
                new ObjectParameter("contactcell", typeof(string));
    
            var contactemailParameter = contactemail != null ?
                new ObjectParameter("contactemail", contactemail) :
                new ObjectParameter("contactemail", typeof(string));
    
            var contactcommentParameter = contactcomment != null ?
                new ObjectParameter("contactcomment", contactcomment) :
                new ObjectParameter("contactcomment", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUContractors_Rec", contstatusidParameter, contractornameParameter, contractoraddrParameter, contractorcityParameter, contractorstParameter, contractorzipParameter, contractorphoneParameter, contractorextParameter, contractorfaxParameter, contractoremailParameter, contractorcommentParameter, contactnameParameter, contactaddrParameter, contactcityParameter, contactstParameter, contactzipParameter, contactphoneParameter, contactextParameter, contactfaxParameter, contactcellParameter, contactemailParameter, contactcommentParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUDevelopers_Rec(Nullable<int> devstatusid, string devname, string devaddr, string devcity, string devst, string devzip, string devfax, string devphone, Nullable<int> devext, string devemail, string devcomment, string devcontname, string devcontaddr, string devcontcity, string devcontst, string devcontzip, string devcontfax, string devcontphone, Nullable<int> devcontext, string devcontcell, string devcontemail, string devcontcomment, Nullable<bool> csdev, Nullable<bool> pdev, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var devstatusidParameter = devstatusid.HasValue ?
                new ObjectParameter("devstatusid", devstatusid) :
                new ObjectParameter("devstatusid", typeof(int));
    
            var devnameParameter = devname != null ?
                new ObjectParameter("devname", devname) :
                new ObjectParameter("devname", typeof(string));
    
            var devaddrParameter = devaddr != null ?
                new ObjectParameter("devaddr", devaddr) :
                new ObjectParameter("devaddr", typeof(string));
    
            var devcityParameter = devcity != null ?
                new ObjectParameter("devcity", devcity) :
                new ObjectParameter("devcity", typeof(string));
    
            var devstParameter = devst != null ?
                new ObjectParameter("devst", devst) :
                new ObjectParameter("devst", typeof(string));
    
            var devzipParameter = devzip != null ?
                new ObjectParameter("devzip", devzip) :
                new ObjectParameter("devzip", typeof(string));
    
            var devfaxParameter = devfax != null ?
                new ObjectParameter("devfax", devfax) :
                new ObjectParameter("devfax", typeof(string));
    
            var devphoneParameter = devphone != null ?
                new ObjectParameter("devphone", devphone) :
                new ObjectParameter("devphone", typeof(string));
    
            var devextParameter = devext.HasValue ?
                new ObjectParameter("devext", devext) :
                new ObjectParameter("devext", typeof(int));
    
            var devemailParameter = devemail != null ?
                new ObjectParameter("devemail", devemail) :
                new ObjectParameter("devemail", typeof(string));
    
            var devcommentParameter = devcomment != null ?
                new ObjectParameter("devcomment", devcomment) :
                new ObjectParameter("devcomment", typeof(string));
    
            var devcontnameParameter = devcontname != null ?
                new ObjectParameter("devcontname", devcontname) :
                new ObjectParameter("devcontname", typeof(string));
    
            var devcontaddrParameter = devcontaddr != null ?
                new ObjectParameter("devcontaddr", devcontaddr) :
                new ObjectParameter("devcontaddr", typeof(string));
    
            var devcontcityParameter = devcontcity != null ?
                new ObjectParameter("devcontcity", devcontcity) :
                new ObjectParameter("devcontcity", typeof(string));
    
            var devcontstParameter = devcontst != null ?
                new ObjectParameter("devcontst", devcontst) :
                new ObjectParameter("devcontst", typeof(string));
    
            var devcontzipParameter = devcontzip != null ?
                new ObjectParameter("devcontzip", devcontzip) :
                new ObjectParameter("devcontzip", typeof(string));
    
            var devcontfaxParameter = devcontfax != null ?
                new ObjectParameter("devcontfax", devcontfax) :
                new ObjectParameter("devcontfax", typeof(string));
    
            var devcontphoneParameter = devcontphone != null ?
                new ObjectParameter("devcontphone", devcontphone) :
                new ObjectParameter("devcontphone", typeof(string));
    
            var devcontextParameter = devcontext.HasValue ?
                new ObjectParameter("devcontext", devcontext) :
                new ObjectParameter("devcontext", typeof(int));
    
            var devcontcellParameter = devcontcell != null ?
                new ObjectParameter("devcontcell", devcontcell) :
                new ObjectParameter("devcontcell", typeof(string));
    
            var devcontemailParameter = devcontemail != null ?
                new ObjectParameter("devcontemail", devcontemail) :
                new ObjectParameter("devcontemail", typeof(string));
    
            var devcontcommentParameter = devcontcomment != null ?
                new ObjectParameter("devcontcomment", devcontcomment) :
                new ObjectParameter("devcontcomment", typeof(string));
    
            var csdevParameter = csdev.HasValue ?
                new ObjectParameter("csdev", csdev) :
                new ObjectParameter("csdev", typeof(bool));
    
            var pdevParameter = pdev.HasValue ?
                new ObjectParameter("pdev", pdev) :
                new ObjectParameter("pdev", typeof(bool));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUDevelopers_Rec", devstatusidParameter, devnameParameter, devaddrParameter, devcityParameter, devstParameter, devzipParameter, devfaxParameter, devphoneParameter, devextParameter, devemailParameter, devcommentParameter, devcontnameParameter, devcontaddrParameter, devcontcityParameter, devcontstParameter, devcontzipParameter, devcontfaxParameter, devcontphoneParameter, devcontextParameter, devcontcellParameter, devcontemailParameter, devcontcommentParameter, csdevParameter, pdevParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUEngFirms_Rec(string engfirmname, string engfirmaddr1, string engfirmaddr2, string engfirmcity, string engfirmst, string engfirmzip, string engfirmphone, string engfirmfax, string engfirmwebsite, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engfirmnameParameter = engfirmname != null ?
                new ObjectParameter("engfirmname", engfirmname) :
                new ObjectParameter("engfirmname", typeof(string));
    
            var engfirmaddr1Parameter = engfirmaddr1 != null ?
                new ObjectParameter("engfirmaddr1", engfirmaddr1) :
                new ObjectParameter("engfirmaddr1", typeof(string));
    
            var engfirmaddr2Parameter = engfirmaddr2 != null ?
                new ObjectParameter("engfirmaddr2", engfirmaddr2) :
                new ObjectParameter("engfirmaddr2", typeof(string));
    
            var engfirmcityParameter = engfirmcity != null ?
                new ObjectParameter("engfirmcity", engfirmcity) :
                new ObjectParameter("engfirmcity", typeof(string));
    
            var engfirmstParameter = engfirmst != null ?
                new ObjectParameter("engfirmst", engfirmst) :
                new ObjectParameter("engfirmst", typeof(string));
    
            var engfirmzipParameter = engfirmzip != null ?
                new ObjectParameter("engfirmzip", engfirmzip) :
                new ObjectParameter("engfirmzip", typeof(string));
    
            var engfirmphoneParameter = engfirmphone != null ?
                new ObjectParameter("engfirmphone", engfirmphone) :
                new ObjectParameter("engfirmphone", typeof(string));
    
            var engfirmfaxParameter = engfirmfax != null ?
                new ObjectParameter("engfirmfax", engfirmfax) :
                new ObjectParameter("engfirmfax", typeof(string));
    
            var engfirmwebsiteParameter = engfirmwebsite != null ?
                new ObjectParameter("engfirmwebsite", engfirmwebsite) :
                new ObjectParameter("engfirmwebsite", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUEngFirms_Rec", engfirmnameParameter, engfirmaddr1Parameter, engfirmaddr2Parameter, engfirmcityParameter, engfirmstParameter, engfirmzipParameter, engfirmphoneParameter, engfirmfaxParameter, engfirmwebsiteParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LURefTypes_Rec(string reftypename, string reftypedesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypenameParameter = reftypename != null ?
                new ObjectParameter("reftypename", reftypename) :
                new ObjectParameter("reftypename", typeof(string));
    
            var reftypedescParameter = reftypedesc != null ?
                new ObjectParameter("reftypedesc", reftypedesc) :
                new ObjectParameter("reftypedesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LURefTypes_Rec", reftypenameParameter, reftypedescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LURoadDirections_Rec(string roaddirname, string roaddirdesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roaddirnameParameter = roaddirname != null ?
                new ObjectParameter("roaddirname", roaddirname) :
                new ObjectParameter("roaddirname", typeof(string));
    
            var roaddirdescParameter = roaddirdesc != null ?
                new ObjectParameter("roaddirdesc", roaddirdesc) :
                new ObjectParameter("roaddirdesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LURoadDirections_Rec", roaddirnameParameter, roaddirdescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LURoadNameTypes_Rec(string roadtypename, string roadtypedesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadtypenameParameter = roadtypename != null ?
                new ObjectParameter("roadtypename", roadtypename) :
                new ObjectParameter("roadtypename", typeof(string));
    
            var roadtypedescParameter = roadtypedesc != null ?
                new ObjectParameter("roadtypedesc", roadtypedesc) :
                new ObjectParameter("roadtypedesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LURoadNameTypes_Rec", roadtypenameParameter, roadtypedescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUSWInspectors_Rec(string swinspfirstname, string swinspmidname, string swinsplastname, string swinspcode, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var swinspfirstnameParameter = swinspfirstname != null ?
                new ObjectParameter("swinspfirstname", swinspfirstname) :
                new ObjectParameter("swinspfirstname", typeof(string));
    
            var swinspmidnameParameter = swinspmidname != null ?
                new ObjectParameter("swinspmidname", swinspmidname) :
                new ObjectParameter("swinspmidname", typeof(string));
    
            var swinsplastnameParameter = swinsplastname != null ?
                new ObjectParameter("swinsplastname", swinsplastname) :
                new ObjectParameter("swinsplastname", typeof(string));
    
            var swinspcodeParameter = swinspcode != null ?
                new ObjectParameter("swinspcode", swinspcode) :
                new ObjectParameter("swinspcode", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUSWInspectors_Rec", swinspfirstnameParameter, swinspmidnameParameter, swinsplastnameParameter, swinspcodeParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_LUTableList_Rec(string tablename, Nullable<int> tablecatno, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            var tablecatnoParameter = tablecatno.HasValue ?
                new ObjectParameter("tablecatno", tablecatno) :
                new ObjectParameter("tablecatno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_LUTableList_Rec", tablenameParameter, tablecatnoParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MasterBonds_Rec(string reftype, Nullable<int> refid, string bondno, Nullable<int> bondtypeid, Nullable<int> constinspid, Nullable<int> bonddescid, Nullable<decimal> bondamt, Nullable<System.DateTime> bondbegdate, Nullable<System.DateTime> bondexpiredate, Nullable<int> bondstatusid, Nullable<System.DateTime> bondstatusdate, Nullable<int> developerid, Nullable<System.DateTime> punchlistdate90, Nullable<System.DateTime> punchlistdate60, Nullable<System.DateTime> punchlistdate30, Nullable<System.DateTime> punchlistdate10, Nullable<System.DateTime> releaseddate, Nullable<System.DateTime> coreapprdate, Nullable<bool> addtopreq, Nullable<System.DateTime> topletterdate, string bankname, string bankaddr1, string bankaddr2, string bankcity, string bankst, string bankzip, string bankphone, string bankcontact, string bankcontactph, Nullable<int> bankcontactext, string bankcontactfax, string bankcontactemail, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var bondnoParameter = bondno != null ?
                new ObjectParameter("bondno", bondno) :
                new ObjectParameter("bondno", typeof(string));
    
            var bondtypeidParameter = bondtypeid.HasValue ?
                new ObjectParameter("bondtypeid", bondtypeid) :
                new ObjectParameter("bondtypeid", typeof(int));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var bonddescidParameter = bonddescid.HasValue ?
                new ObjectParameter("bonddescid", bonddescid) :
                new ObjectParameter("bonddescid", typeof(int));
    
            var bondamtParameter = bondamt.HasValue ?
                new ObjectParameter("bondamt", bondamt) :
                new ObjectParameter("bondamt", typeof(decimal));
    
            var bondbegdateParameter = bondbegdate.HasValue ?
                new ObjectParameter("bondbegdate", bondbegdate) :
                new ObjectParameter("bondbegdate", typeof(System.DateTime));
    
            var bondexpiredateParameter = bondexpiredate.HasValue ?
                new ObjectParameter("bondexpiredate", bondexpiredate) :
                new ObjectParameter("bondexpiredate", typeof(System.DateTime));
    
            var bondstatusidParameter = bondstatusid.HasValue ?
                new ObjectParameter("bondstatusid", bondstatusid) :
                new ObjectParameter("bondstatusid", typeof(int));
    
            var bondstatusdateParameter = bondstatusdate.HasValue ?
                new ObjectParameter("bondstatusdate", bondstatusdate) :
                new ObjectParameter("bondstatusdate", typeof(System.DateTime));
    
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            var punchlistdate90Parameter = punchlistdate90.HasValue ?
                new ObjectParameter("punchlistdate90", punchlistdate90) :
                new ObjectParameter("punchlistdate90", typeof(System.DateTime));
    
            var punchlistdate60Parameter = punchlistdate60.HasValue ?
                new ObjectParameter("punchlistdate60", punchlistdate60) :
                new ObjectParameter("punchlistdate60", typeof(System.DateTime));
    
            var punchlistdate30Parameter = punchlistdate30.HasValue ?
                new ObjectParameter("punchlistdate30", punchlistdate30) :
                new ObjectParameter("punchlistdate30", typeof(System.DateTime));
    
            var punchlistdate10Parameter = punchlistdate10.HasValue ?
                new ObjectParameter("punchlistdate10", punchlistdate10) :
                new ObjectParameter("punchlistdate10", typeof(System.DateTime));
    
            var releaseddateParameter = releaseddate.HasValue ?
                new ObjectParameter("releaseddate", releaseddate) :
                new ObjectParameter("releaseddate", typeof(System.DateTime));
    
            var coreapprdateParameter = coreapprdate.HasValue ?
                new ObjectParameter("coreapprdate", coreapprdate) :
                new ObjectParameter("coreapprdate", typeof(System.DateTime));
    
            var addtopreqParameter = addtopreq.HasValue ?
                new ObjectParameter("addtopreq", addtopreq) :
                new ObjectParameter("addtopreq", typeof(bool));
    
            var topletterdateParameter = topletterdate.HasValue ?
                new ObjectParameter("topletterdate", topletterdate) :
                new ObjectParameter("topletterdate", typeof(System.DateTime));
    
            var banknameParameter = bankname != null ?
                new ObjectParameter("bankname", bankname) :
                new ObjectParameter("bankname", typeof(string));
    
            var bankaddr1Parameter = bankaddr1 != null ?
                new ObjectParameter("bankaddr1", bankaddr1) :
                new ObjectParameter("bankaddr1", typeof(string));
    
            var bankaddr2Parameter = bankaddr2 != null ?
                new ObjectParameter("bankaddr2", bankaddr2) :
                new ObjectParameter("bankaddr2", typeof(string));
    
            var bankcityParameter = bankcity != null ?
                new ObjectParameter("bankcity", bankcity) :
                new ObjectParameter("bankcity", typeof(string));
    
            var bankstParameter = bankst != null ?
                new ObjectParameter("bankst", bankst) :
                new ObjectParameter("bankst", typeof(string));
    
            var bankzipParameter = bankzip != null ?
                new ObjectParameter("bankzip", bankzip) :
                new ObjectParameter("bankzip", typeof(string));
    
            var bankphoneParameter = bankphone != null ?
                new ObjectParameter("bankphone", bankphone) :
                new ObjectParameter("bankphone", typeof(string));
    
            var bankcontactParameter = bankcontact != null ?
                new ObjectParameter("bankcontact", bankcontact) :
                new ObjectParameter("bankcontact", typeof(string));
    
            var bankcontactphParameter = bankcontactph != null ?
                new ObjectParameter("bankcontactph", bankcontactph) :
                new ObjectParameter("bankcontactph", typeof(string));
    
            var bankcontactextParameter = bankcontactext.HasValue ?
                new ObjectParameter("bankcontactext", bankcontactext) :
                new ObjectParameter("bankcontactext", typeof(int));
    
            var bankcontactfaxParameter = bankcontactfax != null ?
                new ObjectParameter("bankcontactfax", bankcontactfax) :
                new ObjectParameter("bankcontactfax", typeof(string));
    
            var bankcontactemailParameter = bankcontactemail != null ?
                new ObjectParameter("bankcontactemail", bankcontactemail) :
                new ObjectParameter("bankcontactemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MasterBonds_Rec", reftypeParameter, refidParameter, bondnoParameter, bondtypeidParameter, constinspidParameter, bonddescidParameter, bondamtParameter, bondbegdateParameter, bondexpiredateParameter, bondstatusidParameter, bondstatusdateParameter, developeridParameter, punchlistdate90Parameter, punchlistdate60Parameter, punchlistdate30Parameter, punchlistdate10Parameter, releaseddateParameter, coreapprdateParameter, addtopreqParameter, topletterdateParameter, banknameParameter, bankaddr1Parameter, bankaddr2Parameter, bankcityParameter, bankstParameter, bankzipParameter, bankphoneParameter, bankcontactParameter, bankcontactphParameter, bankcontactextParameter, bankcontactfaxParameter, bankcontactemailParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MasterRoads_Rec(string locindicator, Nullable<int> roadprefixtypeid, Nullable<int> roadprefixid, string roadname, Nullable<int> roadsuffixtypeid, Nullable<int> roadsuffixid, string fullroadname, Nullable<int> roadstatusid, Nullable<System.DateTime> roadstatusdate, Nullable<System.DateTime> complaintdate, string dotroadno, Nullable<int> avgwidthft, Nullable<System.DateTime> lradate, Nullable<bool> gas, Nullable<bool> telephone, Nullable<bool> cable, Nullable<bool> upower, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var locindicatorParameter = locindicator != null ?
                new ObjectParameter("locindicator", locindicator) :
                new ObjectParameter("locindicator", typeof(string));
    
            var roadprefixtypeidParameter = roadprefixtypeid.HasValue ?
                new ObjectParameter("roadprefixtypeid", roadprefixtypeid) :
                new ObjectParameter("roadprefixtypeid", typeof(int));
    
            var roadprefixidParameter = roadprefixid.HasValue ?
                new ObjectParameter("roadprefixid", roadprefixid) :
                new ObjectParameter("roadprefixid", typeof(int));
    
            var roadnameParameter = roadname != null ?
                new ObjectParameter("roadname", roadname) :
                new ObjectParameter("roadname", typeof(string));
    
            var roadsuffixtypeidParameter = roadsuffixtypeid.HasValue ?
                new ObjectParameter("roadsuffixtypeid", roadsuffixtypeid) :
                new ObjectParameter("roadsuffixtypeid", typeof(int));
    
            var roadsuffixidParameter = roadsuffixid.HasValue ?
                new ObjectParameter("roadsuffixid", roadsuffixid) :
                new ObjectParameter("roadsuffixid", typeof(int));
    
            var fullroadnameParameter = fullroadname != null ?
                new ObjectParameter("fullroadname", fullroadname) :
                new ObjectParameter("fullroadname", typeof(string));
    
            var roadstatusidParameter = roadstatusid.HasValue ?
                new ObjectParameter("roadstatusid", roadstatusid) :
                new ObjectParameter("roadstatusid", typeof(int));
    
            var roadstatusdateParameter = roadstatusdate.HasValue ?
                new ObjectParameter("roadstatusdate", roadstatusdate) :
                new ObjectParameter("roadstatusdate", typeof(System.DateTime));
    
            var complaintdateParameter = complaintdate.HasValue ?
                new ObjectParameter("complaintdate", complaintdate) :
                new ObjectParameter("complaintdate", typeof(System.DateTime));
    
            var dotroadnoParameter = dotroadno != null ?
                new ObjectParameter("dotroadno", dotroadno) :
                new ObjectParameter("dotroadno", typeof(string));
    
            var avgwidthftParameter = avgwidthft.HasValue ?
                new ObjectParameter("avgwidthft", avgwidthft) :
                new ObjectParameter("avgwidthft", typeof(int));
    
            var lradateParameter = lradate.HasValue ?
                new ObjectParameter("lradate", lradate) :
                new ObjectParameter("lradate", typeof(System.DateTime));
    
            var gasParameter = gas.HasValue ?
                new ObjectParameter("gas", gas) :
                new ObjectParameter("gas", typeof(bool));
    
            var telephoneParameter = telephone.HasValue ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(bool));
    
            var cableParameter = cable.HasValue ?
                new ObjectParameter("cable", cable) :
                new ObjectParameter("cable", typeof(bool));
    
            var upowerParameter = upower.HasValue ?
                new ObjectParameter("upower", upower) :
                new ObjectParameter("upower", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MasterRoads_Rec", locindicatorParameter, roadprefixtypeidParameter, roadprefixidParameter, roadnameParameter, roadsuffixtypeidParameter, roadsuffixidParameter, fullroadnameParameter, roadstatusidParameter, roadstatusdateParameter, complaintdateParameter, dotroadnoParameter, avgwidthftParameter, lradateParameter, gasParameter, telephoneParameter, cableParameter, upowerParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MasterRoads_Rec_Conversion(Nullable<int> recid, string locindicator, Nullable<int> roadprefixtypeid, Nullable<int> roadprefixid, string roadname, Nullable<int> roadsuffixtypeid, Nullable<int> roadsuffixid, string fullroadname, Nullable<int> roadstatusid, Nullable<System.DateTime> roadstatusdate, Nullable<System.DateTime> complaintdate, string dotroadno, Nullable<int> avgwidthft, Nullable<System.DateTime> lradate, Nullable<bool> gas, Nullable<bool> telephone, Nullable<bool> cable, Nullable<bool> upower, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            var locindicatorParameter = locindicator != null ?
                new ObjectParameter("locindicator", locindicator) :
                new ObjectParameter("locindicator", typeof(string));
    
            var roadprefixtypeidParameter = roadprefixtypeid.HasValue ?
                new ObjectParameter("roadprefixtypeid", roadprefixtypeid) :
                new ObjectParameter("roadprefixtypeid", typeof(int));
    
            var roadprefixidParameter = roadprefixid.HasValue ?
                new ObjectParameter("roadprefixid", roadprefixid) :
                new ObjectParameter("roadprefixid", typeof(int));
    
            var roadnameParameter = roadname != null ?
                new ObjectParameter("roadname", roadname) :
                new ObjectParameter("roadname", typeof(string));
    
            var roadsuffixtypeidParameter = roadsuffixtypeid.HasValue ?
                new ObjectParameter("roadsuffixtypeid", roadsuffixtypeid) :
                new ObjectParameter("roadsuffixtypeid", typeof(int));
    
            var roadsuffixidParameter = roadsuffixid.HasValue ?
                new ObjectParameter("roadsuffixid", roadsuffixid) :
                new ObjectParameter("roadsuffixid", typeof(int));
    
            var fullroadnameParameter = fullroadname != null ?
                new ObjectParameter("fullroadname", fullroadname) :
                new ObjectParameter("fullroadname", typeof(string));
    
            var roadstatusidParameter = roadstatusid.HasValue ?
                new ObjectParameter("roadstatusid", roadstatusid) :
                new ObjectParameter("roadstatusid", typeof(int));
    
            var roadstatusdateParameter = roadstatusdate.HasValue ?
                new ObjectParameter("roadstatusdate", roadstatusdate) :
                new ObjectParameter("roadstatusdate", typeof(System.DateTime));
    
            var complaintdateParameter = complaintdate.HasValue ?
                new ObjectParameter("complaintdate", complaintdate) :
                new ObjectParameter("complaintdate", typeof(System.DateTime));
    
            var dotroadnoParameter = dotroadno != null ?
                new ObjectParameter("dotroadno", dotroadno) :
                new ObjectParameter("dotroadno", typeof(string));
    
            var avgwidthftParameter = avgwidthft.HasValue ?
                new ObjectParameter("avgwidthft", avgwidthft) :
                new ObjectParameter("avgwidthft", typeof(int));
    
            var lradateParameter = lradate.HasValue ?
                new ObjectParameter("lradate", lradate) :
                new ObjectParameter("lradate", typeof(System.DateTime));
    
            var gasParameter = gas.HasValue ?
                new ObjectParameter("gas", gas) :
                new ObjectParameter("gas", typeof(bool));
    
            var telephoneParameter = telephone.HasValue ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(bool));
    
            var cableParameter = cable.HasValue ?
                new ObjectParameter("cable", cable) :
                new ObjectParameter("cable", typeof(bool));
    
            var upowerParameter = upower.HasValue ?
                new ObjectParameter("upower", upower) :
                new ObjectParameter("upower", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MasterRoads_Rec_Conversion", recidParameter, locindicatorParameter, roadprefixtypeidParameter, roadprefixidParameter, roadnameParameter, roadsuffixtypeidParameter, roadsuffixidParameter, fullroadnameParameter, roadstatusidParameter, roadstatusdateParameter, complaintdateParameter, dotroadnoParameter, avgwidthftParameter, lradateParameter, gasParameter, telephoneParameter, cableParameter, upowerParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MasterSubAliases_Rec(Nullable<int> mastersubid, string subaliasname, string subaliascomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var subaliasnameParameter = subaliasname != null ?
                new ObjectParameter("subaliasname", subaliasname) :
                new ObjectParameter("subaliasname", typeof(string));
    
            var subaliascommentParameter = subaliascomment != null ?
                new ObjectParameter("subaliascomment", subaliascomment) :
                new ObjectParameter("subaliascomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MasterSubAliases_Rec", mastersubidParameter, subaliasnameParameter, subaliascommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MasterSubComments_Rec(Nullable<int> mastersubid, string subcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var subcommentParameter = subcomment != null ?
                new ObjectParameter("subcomment", subcomment) :
                new ObjectParameter("subcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MasterSubComments_Rec", mastersubidParameter, subcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MasterSubdiv_Rec(string locindicator, string mastersubname, Nullable<int> entranceroadid, Nullable<int> substatusid, Nullable<System.DateTime> substatusdate, string landdistpermno, Nullable<int> constinspid, Nullable<bool> sidewalksreq, Nullable<System.DateTime> cleargradpermdate, Nullable<decimal> totpropacreage, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var locindicatorParameter = locindicator != null ?
                new ObjectParameter("locindicator", locindicator) :
                new ObjectParameter("locindicator", typeof(string));
    
            var mastersubnameParameter = mastersubname != null ?
                new ObjectParameter("mastersubname", mastersubname) :
                new ObjectParameter("mastersubname", typeof(string));
    
            var entranceroadidParameter = entranceroadid.HasValue ?
                new ObjectParameter("entranceroadid", entranceroadid) :
                new ObjectParameter("entranceroadid", typeof(int));
    
            var substatusidParameter = substatusid.HasValue ?
                new ObjectParameter("substatusid", substatusid) :
                new ObjectParameter("substatusid", typeof(int));
    
            var substatusdateParameter = substatusdate.HasValue ?
                new ObjectParameter("substatusdate", substatusdate) :
                new ObjectParameter("substatusdate", typeof(System.DateTime));
    
            var landdistpermnoParameter = landdistpermno != null ?
                new ObjectParameter("landdistpermno", landdistpermno) :
                new ObjectParameter("landdistpermno", typeof(string));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var sidewalksreqParameter = sidewalksreq.HasValue ?
                new ObjectParameter("sidewalksreq", sidewalksreq) :
                new ObjectParameter("sidewalksreq", typeof(bool));
    
            var cleargradpermdateParameter = cleargradpermdate.HasValue ?
                new ObjectParameter("cleargradpermdate", cleargradpermdate) :
                new ObjectParameter("cleargradpermdate", typeof(System.DateTime));
    
            var totpropacreageParameter = totpropacreage.HasValue ?
                new ObjectParameter("totpropacreage", totpropacreage) :
                new ObjectParameter("totpropacreage", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MasterSubdiv_Rec", locindicatorParameter, mastersubnameParameter, entranceroadidParameter, substatusidParameter, substatusdateParameter, landdistpermnoParameter, constinspidParameter, sidewalksreqParameter, cleargradpermdateParameter, totpropacreageParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MasterSubdivZA_Rec(Nullable<int> mastersubid, string zoningappno, Nullable<System.DateTime> zoningappdate, string zoningappcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var zoningappnoParameter = zoningappno != null ?
                new ObjectParameter("zoningappno", zoningappno) :
                new ObjectParameter("zoningappno", typeof(string));
    
            var zoningappdateParameter = zoningappdate.HasValue ?
                new ObjectParameter("zoningappdate", zoningappdate) :
                new ObjectParameter("zoningappdate", typeof(System.DateTime));
    
            var zoningappcommentParameter = zoningappcomment != null ?
                new ObjectParameter("zoningappcomment", zoningappcomment) :
                new ObjectParameter("zoningappcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MasterSubdivZA_Rec", mastersubidParameter, zoningappnoParameter, zoningappdateParameter, zoningappcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_MiscValues_Rec(string miscdesc, string miscvalue, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var miscdescParameter = miscdesc != null ?
                new ObjectParameter("miscdesc", miscdesc) :
                new ObjectParameter("miscdesc", typeof(string));
    
            var miscvalueParameter = miscvalue != null ?
                new ObjectParameter("miscvalue", miscvalue) :
                new ObjectParameter("miscvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_MiscValues_Rec", miscdescParameter, miscvalueParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_PlatAliases_Rec(Nullable<int> masterplatid, string plataliasname, string plataliascomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var masterplatidParameter = masterplatid.HasValue ?
                new ObjectParameter("masterplatid", masterplatid) :
                new ObjectParameter("masterplatid", typeof(int));
    
            var plataliasnameParameter = plataliasname != null ?
                new ObjectParameter("plataliasname", plataliasname) :
                new ObjectParameter("plataliasname", typeof(string));
    
            var plataliascommentParameter = plataliascomment != null ?
                new ObjectParameter("plataliascomment", plataliascomment) :
                new ObjectParameter("plataliascomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_PlatAliases_Rec", masterplatidParameter, plataliasnameParameter, plataliascommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_PlatComments_Rec(Nullable<int> masterplatid, string platcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var masterplatidParameter = masterplatid.HasValue ?
                new ObjectParameter("masterplatid", masterplatid) :
                new ObjectParameter("masterplatid", typeof(int));
    
            var platcommentParameter = platcomment != null ?
                new ObjectParameter("platcomment", platcomment) :
                new ObjectParameter("platcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_PlatComments_Rec", masterplatidParameter, platcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_Ratings_Rec(Nullable<int> roadid, Nullable<decimal> ratefrom, Nullable<decimal> rateto, Nullable<decimal> ratelength, string fromtodesc, Nullable<int> rating, Nullable<System.DateTime> ratingdate, string ratingcomment, Nullable<int> routeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var ratefromParameter = ratefrom.HasValue ?
                new ObjectParameter("ratefrom", ratefrom) :
                new ObjectParameter("ratefrom", typeof(decimal));
    
            var ratetoParameter = rateto.HasValue ?
                new ObjectParameter("rateto", rateto) :
                new ObjectParameter("rateto", typeof(decimal));
    
            var ratelengthParameter = ratelength.HasValue ?
                new ObjectParameter("ratelength", ratelength) :
                new ObjectParameter("ratelength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            var ratingdateParameter = ratingdate.HasValue ?
                new ObjectParameter("ratingdate", ratingdate) :
                new ObjectParameter("ratingdate", typeof(System.DateTime));
    
            var ratingcommentParameter = ratingcomment != null ?
                new ObjectParameter("ratingcomment", ratingcomment) :
                new ObjectParameter("ratingcomment", typeof(string));
    
            var routeidParameter = routeid.HasValue ?
                new ObjectParameter("routeid", routeid) :
                new ObjectParameter("routeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_Ratings_Rec", roadidParameter, ratefromParameter, ratetoParameter, ratelengthParameter, fromtodescParameter, ratingParameter, ratingdateParameter, ratingcommentParameter, routeidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_RespondingAgency_Rec(Nullable<int> roadid, Nullable<decimal> respfrom, Nullable<decimal> respto, Nullable<decimal> resplength, string fromtodesc, Nullable<int> agencyid, string respcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var respfromParameter = respfrom.HasValue ?
                new ObjectParameter("respfrom", respfrom) :
                new ObjectParameter("respfrom", typeof(decimal));
    
            var resptoParameter = respto.HasValue ?
                new ObjectParameter("respto", respto) :
                new ObjectParameter("respto", typeof(decimal));
    
            var resplengthParameter = resplength.HasValue ?
                new ObjectParameter("resplength", resplength) :
                new ObjectParameter("resplength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var agencyidParameter = agencyid.HasValue ?
                new ObjectParameter("agencyid", agencyid) :
                new ObjectParameter("agencyid", typeof(int));
    
            var respcommentParameter = respcomment != null ?
                new ObjectParameter("respcomment", respcomment) :
                new ObjectParameter("respcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_RespondingAgency_Rec", roadidParameter, respfromParameter, resptoParameter, resplengthParameter, fromtodescParameter, agencyidParameter, respcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_Resurfacing_Rec(Nullable<int> roadid, Nullable<decimal> resurffrom, Nullable<decimal> resurfto, Nullable<decimal> resurflength, string fromtodesc, Nullable<int> resurfstatusid, Nullable<int> resurffundbyid, Nullable<int> contractorid, Nullable<System.DateTime> resurfdatecomp, string resurfcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var resurffromParameter = resurffrom.HasValue ?
                new ObjectParameter("resurffrom", resurffrom) :
                new ObjectParameter("resurffrom", typeof(decimal));
    
            var resurftoParameter = resurfto.HasValue ?
                new ObjectParameter("resurfto", resurfto) :
                new ObjectParameter("resurfto", typeof(decimal));
    
            var resurflengthParameter = resurflength.HasValue ?
                new ObjectParameter("resurflength", resurflength) :
                new ObjectParameter("resurflength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var resurfstatusidParameter = resurfstatusid.HasValue ?
                new ObjectParameter("resurfstatusid", resurfstatusid) :
                new ObjectParameter("resurfstatusid", typeof(int));
    
            var resurffundbyidParameter = resurffundbyid.HasValue ?
                new ObjectParameter("resurffundbyid", resurffundbyid) :
                new ObjectParameter("resurffundbyid", typeof(int));
    
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("contractorid", contractorid) :
                new ObjectParameter("contractorid", typeof(int));
    
            var resurfdatecompParameter = resurfdatecomp.HasValue ?
                new ObjectParameter("resurfdatecomp", resurfdatecomp) :
                new ObjectParameter("resurfdatecomp", typeof(System.DateTime));
    
            var resurfcommentParameter = resurfcomment != null ?
                new ObjectParameter("resurfcomment", resurfcomment) :
                new ObjectParameter("resurfcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_Resurfacing_Rec", roadidParameter, resurffromParameter, resurftoParameter, resurflengthParameter, fromtodescParameter, resurfstatusidParameter, resurffundbyidParameter, contractoridParameter, resurfdatecompParameter, resurfcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_RightOfWay_Rec(string reftype, Nullable<int> refid, Nullable<int> rowtypeid, Nullable<int> rowwidth, Nullable<decimal> rowfrom, Nullable<decimal> rowto, Nullable<decimal> rowlength, string fromtodesc, string rowcomment, Nullable<System.DateTime> deedrecorddate, string deedbook, string deedpage, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var rowtypeidParameter = rowtypeid.HasValue ?
                new ObjectParameter("rowtypeid", rowtypeid) :
                new ObjectParameter("rowtypeid", typeof(int));
    
            var rowwidthParameter = rowwidth.HasValue ?
                new ObjectParameter("rowwidth", rowwidth) :
                new ObjectParameter("rowwidth", typeof(int));
    
            var rowfromParameter = rowfrom.HasValue ?
                new ObjectParameter("rowfrom", rowfrom) :
                new ObjectParameter("rowfrom", typeof(decimal));
    
            var rowtoParameter = rowto.HasValue ?
                new ObjectParameter("rowto", rowto) :
                new ObjectParameter("rowto", typeof(decimal));
    
            var rowlengthParameter = rowlength.HasValue ?
                new ObjectParameter("rowlength", rowlength) :
                new ObjectParameter("rowlength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var rowcommentParameter = rowcomment != null ?
                new ObjectParameter("rowcomment", rowcomment) :
                new ObjectParameter("rowcomment", typeof(string));
    
            var deedrecorddateParameter = deedrecorddate.HasValue ?
                new ObjectParameter("deedrecorddate", deedrecorddate) :
                new ObjectParameter("deedrecorddate", typeof(System.DateTime));
    
            var deedbookParameter = deedbook != null ?
                new ObjectParameter("deedbook", deedbook) :
                new ObjectParameter("deedbook", typeof(string));
    
            var deedpageParameter = deedpage != null ?
                new ObjectParameter("deedpage", deedpage) :
                new ObjectParameter("deedpage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_RightOfWay_Rec", reftypeParameter, refidParameter, rowtypeidParameter, rowwidthParameter, rowfromParameter, rowtoParameter, rowlengthParameter, fromtodescParameter, rowcommentParameter, deedrecorddateParameter, deedbookParameter, deedpageParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_RoadAliases_Rec(Nullable<int> roadid, string aliasname, Nullable<int> aliastypeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var aliasnameParameter = aliasname != null ?
                new ObjectParameter("aliasname", aliasname) :
                new ObjectParameter("aliasname", typeof(string));
    
            var aliastypeidParameter = aliastypeid.HasValue ?
                new ObjectParameter("aliastypeid", aliastypeid) :
                new ObjectParameter("aliastypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_RoadAliases_Rec", roadidParameter, aliasnameParameter, aliastypeidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_RoadComments_Rec(Nullable<int> roadid, Nullable<System.DateTime> roadcommdate, string roadcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var roadcommdateParameter = roadcommdate.HasValue ?
                new ObjectParameter("roadcommdate", roadcommdate) :
                new ObjectParameter("roadcommdate", typeof(System.DateTime));
    
            var roadcommentParameter = roadcomment != null ?
                new ObjectParameter("roadcomment", roadcomment) :
                new ObjectParameter("roadcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_RoadComments_Rec", roadidParameter, roadcommdateParameter, roadcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_RoadDistricts_Rec(Nullable<int> roadid, Nullable<int> bocdistrictid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_RoadDistricts_Rec", roadidParameter, bocdistrictidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_SpeedLimits_Rec(Nullable<int> roadid, Nullable<decimal> slfrom, Nullable<decimal> slto, Nullable<decimal> sllength, string fromtodesc, Nullable<int> mph, string slcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var slfromParameter = slfrom.HasValue ?
                new ObjectParameter("slfrom", slfrom) :
                new ObjectParameter("slfrom", typeof(decimal));
    
            var sltoParameter = slto.HasValue ?
                new ObjectParameter("slto", slto) :
                new ObjectParameter("slto", typeof(decimal));
    
            var sllengthParameter = sllength.HasValue ?
                new ObjectParameter("sllength", sllength) :
                new ObjectParameter("sllength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var mphParameter = mph.HasValue ?
                new ObjectParameter("mph", mph) :
                new ObjectParameter("mph", typeof(int));
    
            var slcommentParameter = slcomment != null ?
                new ObjectParameter("slcomment", slcomment) :
                new ObjectParameter("slcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_SpeedLimits_Rec", roadidParameter, slfromParameter, sltoParameter, sllengthParameter, fromtodescParameter, mphParameter, slcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_StorageRequests_Rec(string reftype, Nullable<int> refid, string storereqby, Nullable<System.DateTime> storereqdate, string storetaketoloc, string storerecvfromloc, string storecomment, string storecompletedby, Nullable<System.DateTime> storecompleteddate, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var storereqbyParameter = storereqby != null ?
                new ObjectParameter("storereqby", storereqby) :
                new ObjectParameter("storereqby", typeof(string));
    
            var storereqdateParameter = storereqdate.HasValue ?
                new ObjectParameter("storereqdate", storereqdate) :
                new ObjectParameter("storereqdate", typeof(System.DateTime));
    
            var storetaketolocParameter = storetaketoloc != null ?
                new ObjectParameter("storetaketoloc", storetaketoloc) :
                new ObjectParameter("storetaketoloc", typeof(string));
    
            var storerecvfromlocParameter = storerecvfromloc != null ?
                new ObjectParameter("storerecvfromloc", storerecvfromloc) :
                new ObjectParameter("storerecvfromloc", typeof(string));
    
            var storecommentParameter = storecomment != null ?
                new ObjectParameter("storecomment", storecomment) :
                new ObjectParameter("storecomment", typeof(string));
    
            var storecompletedbyParameter = storecompletedby != null ?
                new ObjectParameter("storecompletedby", storecompletedby) :
                new ObjectParameter("storecompletedby", typeof(string));
    
            var storecompleteddateParameter = storecompleteddate.HasValue ?
                new ObjectParameter("storecompleteddate", storecompleteddate) :
                new ObjectParameter("storecompleteddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_StorageRequests_Rec", reftypeParameter, refidParameter, storereqbyParameter, storereqdateParameter, storetaketolocParameter, storerecvfromlocParameter, storecommentParameter, storecompletedbyParameter, storecompleteddateParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_Striping_Rec(Nullable<int> roadid, Nullable<decimal> stripefrom, Nullable<decimal> stripeto, Nullable<decimal> stripelength, string fromtodesc, Nullable<int> stripestatusid, Nullable<int> contractorid, Nullable<System.DateTime> stripedatecomp, Nullable<int> stripematerialid, Nullable<int> stripetypeid, string stripecomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var stripefromParameter = stripefrom.HasValue ?
                new ObjectParameter("stripefrom", stripefrom) :
                new ObjectParameter("stripefrom", typeof(decimal));
    
            var stripetoParameter = stripeto.HasValue ?
                new ObjectParameter("stripeto", stripeto) :
                new ObjectParameter("stripeto", typeof(decimal));
    
            var stripelengthParameter = stripelength.HasValue ?
                new ObjectParameter("stripelength", stripelength) :
                new ObjectParameter("stripelength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var stripestatusidParameter = stripestatusid.HasValue ?
                new ObjectParameter("stripestatusid", stripestatusid) :
                new ObjectParameter("stripestatusid", typeof(int));
    
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("contractorid", contractorid) :
                new ObjectParameter("contractorid", typeof(int));
    
            var stripedatecompParameter = stripedatecomp.HasValue ?
                new ObjectParameter("stripedatecomp", stripedatecomp) :
                new ObjectParameter("stripedatecomp", typeof(System.DateTime));
    
            var stripematerialidParameter = stripematerialid.HasValue ?
                new ObjectParameter("stripematerialid", stripematerialid) :
                new ObjectParameter("stripematerialid", typeof(int));
    
            var stripetypeidParameter = stripetypeid.HasValue ?
                new ObjectParameter("stripetypeid", stripetypeid) :
                new ObjectParameter("stripetypeid", typeof(int));
    
            var stripecommentParameter = stripecomment != null ?
                new ObjectParameter("stripecomment", stripecomment) :
                new ObjectParameter("stripecomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_Striping_Rec", roadidParameter, stripefromParameter, stripetoParameter, stripelengthParameter, fromtodescParameter, stripestatusidParameter, contractoridParameter, stripedatecompParameter, stripematerialidParameter, stripetypeidParameter, stripecommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_SubdivFees_Rec(string reftype, Nullable<int> refid, Nullable<int> feetypeid, Nullable<decimal> feeamt, Nullable<System.DateTime> feecollecteddate, string feecollectedby, Nullable<int> checkno, string feecomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var feetypeidParameter = feetypeid.HasValue ?
                new ObjectParameter("feetypeid", feetypeid) :
                new ObjectParameter("feetypeid", typeof(int));
    
            var feeamtParameter = feeamt.HasValue ?
                new ObjectParameter("feeamt", feeamt) :
                new ObjectParameter("feeamt", typeof(decimal));
    
            var feecollecteddateParameter = feecollecteddate.HasValue ?
                new ObjectParameter("feecollecteddate", feecollecteddate) :
                new ObjectParameter("feecollecteddate", typeof(System.DateTime));
    
            var feecollectedbyParameter = feecollectedby != null ?
                new ObjectParameter("feecollectedby", feecollectedby) :
                new ObjectParameter("feecollectedby", typeof(string));
    
            var checknoParameter = checkno.HasValue ?
                new ObjectParameter("checkno", checkno) :
                new ObjectParameter("checkno", typeof(int));
    
            var feecommentParameter = feecomment != null ?
                new ObjectParameter("feecomment", feecomment) :
                new ObjectParameter("feecomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_SubdivFees_Rec", reftypeParameter, refidParameter, feetypeidParameter, feeamtParameter, feecollecteddateParameter, feecollectedbyParameter, checknoParameter, feecommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_SubdivisionPlats_Rec(Nullable<int> mastersubid, string subdivplatname, Nullable<int> mainttypeid, Nullable<int> entranceroadid, Nullable<int> constinspid, Nullable<int> swinspid, Nullable<decimal> acreage, Nullable<int> bocdistrictid, Nullable<decimal> platlength, Nullable<System.DateTime> rdconstpermitdate, Nullable<int> planlocid, Nullable<System.DateTime> finalplatdate, Nullable<System.DateTime> bocacceptdate, string clerkofctbook, string clerkofctpage, Nullable<int> platstatusid, Nullable<bool> rowwarrdeed, Nullable<bool> quitclaimdeed, Nullable<bool> attorneystitle, Nullable<bool> performancebond, Nullable<bool> maintenancebond, Nullable<bool> powercoletter, Nullable<bool> streetsignpurchverif, Nullable<bool> proptaxpmtverif, Nullable<bool> indemnmaintagreement, Nullable<bool> swfacinspmaintcov, Nullable<bool> pt61, Nullable<bool> setsofplans10, Nullable<bool> fcroutesheet, Nullable<bool> hydrostudyneeded, Nullable<bool> bondcalcreq, Nullable<bool> coreresults, Nullable<System.DateTime> legalsentdate, Nullable<System.DateTime> devsentdate, Nullable<System.DateTime> storagedate, string storageloc, string subnumid, Nullable<int> developerid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var subdivplatnameParameter = subdivplatname != null ?
                new ObjectParameter("subdivplatname", subdivplatname) :
                new ObjectParameter("subdivplatname", typeof(string));
    
            var mainttypeidParameter = mainttypeid.HasValue ?
                new ObjectParameter("mainttypeid", mainttypeid) :
                new ObjectParameter("mainttypeid", typeof(int));
    
            var entranceroadidParameter = entranceroadid.HasValue ?
                new ObjectParameter("entranceroadid", entranceroadid) :
                new ObjectParameter("entranceroadid", typeof(int));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var swinspidParameter = swinspid.HasValue ?
                new ObjectParameter("swinspid", swinspid) :
                new ObjectParameter("swinspid", typeof(int));
    
            var acreageParameter = acreage.HasValue ?
                new ObjectParameter("acreage", acreage) :
                new ObjectParameter("acreage", typeof(decimal));
    
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            var platlengthParameter = platlength.HasValue ?
                new ObjectParameter("platlength", platlength) :
                new ObjectParameter("platlength", typeof(decimal));
    
            var rdconstpermitdateParameter = rdconstpermitdate.HasValue ?
                new ObjectParameter("rdconstpermitdate", rdconstpermitdate) :
                new ObjectParameter("rdconstpermitdate", typeof(System.DateTime));
    
            var planlocidParameter = planlocid.HasValue ?
                new ObjectParameter("planlocid", planlocid) :
                new ObjectParameter("planlocid", typeof(int));
    
            var finalplatdateParameter = finalplatdate.HasValue ?
                new ObjectParameter("finalplatdate", finalplatdate) :
                new ObjectParameter("finalplatdate", typeof(System.DateTime));
    
            var bocacceptdateParameter = bocacceptdate.HasValue ?
                new ObjectParameter("bocacceptdate", bocacceptdate) :
                new ObjectParameter("bocacceptdate", typeof(System.DateTime));
    
            var clerkofctbookParameter = clerkofctbook != null ?
                new ObjectParameter("clerkofctbook", clerkofctbook) :
                new ObjectParameter("clerkofctbook", typeof(string));
    
            var clerkofctpageParameter = clerkofctpage != null ?
                new ObjectParameter("clerkofctpage", clerkofctpage) :
                new ObjectParameter("clerkofctpage", typeof(string));
    
            var platstatusidParameter = platstatusid.HasValue ?
                new ObjectParameter("platstatusid", platstatusid) :
                new ObjectParameter("platstatusid", typeof(int));
    
            var rowwarrdeedParameter = rowwarrdeed.HasValue ?
                new ObjectParameter("rowwarrdeed", rowwarrdeed) :
                new ObjectParameter("rowwarrdeed", typeof(bool));
    
            var quitclaimdeedParameter = quitclaimdeed.HasValue ?
                new ObjectParameter("quitclaimdeed", quitclaimdeed) :
                new ObjectParameter("quitclaimdeed", typeof(bool));
    
            var attorneystitleParameter = attorneystitle.HasValue ?
                new ObjectParameter("attorneystitle", attorneystitle) :
                new ObjectParameter("attorneystitle", typeof(bool));
    
            var performancebondParameter = performancebond.HasValue ?
                new ObjectParameter("performancebond", performancebond) :
                new ObjectParameter("performancebond", typeof(bool));
    
            var maintenancebondParameter = maintenancebond.HasValue ?
                new ObjectParameter("maintenancebond", maintenancebond) :
                new ObjectParameter("maintenancebond", typeof(bool));
    
            var powercoletterParameter = powercoletter.HasValue ?
                new ObjectParameter("powercoletter", powercoletter) :
                new ObjectParameter("powercoletter", typeof(bool));
    
            var streetsignpurchverifParameter = streetsignpurchverif.HasValue ?
                new ObjectParameter("streetsignpurchverif", streetsignpurchverif) :
                new ObjectParameter("streetsignpurchverif", typeof(bool));
    
            var proptaxpmtverifParameter = proptaxpmtverif.HasValue ?
                new ObjectParameter("proptaxpmtverif", proptaxpmtverif) :
                new ObjectParameter("proptaxpmtverif", typeof(bool));
    
            var indemnmaintagreementParameter = indemnmaintagreement.HasValue ?
                new ObjectParameter("indemnmaintagreement", indemnmaintagreement) :
                new ObjectParameter("indemnmaintagreement", typeof(bool));
    
            var swfacinspmaintcovParameter = swfacinspmaintcov.HasValue ?
                new ObjectParameter("swfacinspmaintcov", swfacinspmaintcov) :
                new ObjectParameter("swfacinspmaintcov", typeof(bool));
    
            var pt61Parameter = pt61.HasValue ?
                new ObjectParameter("pt61", pt61) :
                new ObjectParameter("pt61", typeof(bool));
    
            var setsofplans10Parameter = setsofplans10.HasValue ?
                new ObjectParameter("setsofplans10", setsofplans10) :
                new ObjectParameter("setsofplans10", typeof(bool));
    
            var fcroutesheetParameter = fcroutesheet.HasValue ?
                new ObjectParameter("fcroutesheet", fcroutesheet) :
                new ObjectParameter("fcroutesheet", typeof(bool));
    
            var hydrostudyneededParameter = hydrostudyneeded.HasValue ?
                new ObjectParameter("hydrostudyneeded", hydrostudyneeded) :
                new ObjectParameter("hydrostudyneeded", typeof(bool));
    
            var bondcalcreqParameter = bondcalcreq.HasValue ?
                new ObjectParameter("bondcalcreq", bondcalcreq) :
                new ObjectParameter("bondcalcreq", typeof(bool));
    
            var coreresultsParameter = coreresults.HasValue ?
                new ObjectParameter("coreresults", coreresults) :
                new ObjectParameter("coreresults", typeof(bool));
    
            var legalsentdateParameter = legalsentdate.HasValue ?
                new ObjectParameter("legalsentdate", legalsentdate) :
                new ObjectParameter("legalsentdate", typeof(System.DateTime));
    
            var devsentdateParameter = devsentdate.HasValue ?
                new ObjectParameter("devsentdate", devsentdate) :
                new ObjectParameter("devsentdate", typeof(System.DateTime));
    
            var storagedateParameter = storagedate.HasValue ?
                new ObjectParameter("storagedate", storagedate) :
                new ObjectParameter("storagedate", typeof(System.DateTime));
    
            var storagelocParameter = storageloc != null ?
                new ObjectParameter("storageloc", storageloc) :
                new ObjectParameter("storageloc", typeof(string));
    
            var subnumidParameter = subnumid != null ?
                new ObjectParameter("subnumid", subnumid) :
                new ObjectParameter("subnumid", typeof(string));
    
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_SubdivisionPlats_Rec", mastersubidParameter, subdivplatnameParameter, mainttypeidParameter, entranceroadidParameter, constinspidParameter, swinspidParameter, acreageParameter, bocdistrictidParameter, platlengthParameter, rdconstpermitdateParameter, planlocidParameter, finalplatdateParameter, bocacceptdateParameter, clerkofctbookParameter, clerkofctpageParameter, platstatusidParameter, rowwarrdeedParameter, quitclaimdeedParameter, attorneystitleParameter, performancebondParameter, maintenancebondParameter, powercoletterParameter, streetsignpurchverifParameter, proptaxpmtverifParameter, indemnmaintagreementParameter, swfacinspmaintcovParameter, pt61Parameter, setsofplans10Parameter, fcroutesheetParameter, hydrostudyneededParameter, bondcalcreqParameter, coreresultsParameter, legalsentdateParameter, devsentdateParameter, storagedateParameter, storagelocParameter, subnumidParameter, developeridParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_SubdivPermits_Rec(string reftype, Nullable<int> refid, string permitno, Nullable<int> pmttypeid, Nullable<System.DateTime> permitdate, Nullable<System.DateTime> permitexpiredate, string permitcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var permitnoParameter = permitno != null ?
                new ObjectParameter("permitno", permitno) :
                new ObjectParameter("permitno", typeof(string));
    
            var pmttypeidParameter = pmttypeid.HasValue ?
                new ObjectParameter("pmttypeid", pmttypeid) :
                new ObjectParameter("pmttypeid", typeof(int));
    
            var permitdateParameter = permitdate.HasValue ?
                new ObjectParameter("permitdate", permitdate) :
                new ObjectParameter("permitdate", typeof(System.DateTime));
    
            var permitexpiredateParameter = permitexpiredate.HasValue ?
                new ObjectParameter("permitexpiredate", permitexpiredate) :
                new ObjectParameter("permitexpiredate", typeof(System.DateTime));
    
            var permitcommentParameter = permitcomment != null ?
                new ObjectParameter("permitcomment", permitcomment) :
                new ObjectParameter("permitcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_SubdivPermits_Rec", reftypeParameter, refidParameter, permitnoParameter, pmttypeidParameter, permitdateParameter, permitexpiredateParameter, permitcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Create_SubDivZA_Rec(string reftype, Nullable<int> refid, Nullable<int> mastersubdivzaid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var mastersubdivzaidParameter = mastersubdivzaid.HasValue ?
                new ObjectParameter("mastersubdivzaid", mastersubdivzaid) :
                new ObjectParameter("mastersubdivzaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Create_SubDivZA_Rec", reftypeParameter, refidParameter, mastersubdivzaidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Delete_AddressRanges_Record(Nullable<int> recid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Delete_AddressRanges_Record", recidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Delete_AssociatedRoads_And_Child_Records(Nullable<int> recid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Delete_AssociatedRoads_And_Child_Records", recidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Delete_CommercialSites_And_Child_Records(Nullable<int> recid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Delete_CommercialSites_And_Child_Records", recidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Delete_MasterRoads_And_Child_Records(Nullable<int> recid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Delete_MasterRoads_And_Child_Records", recidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Delete_MasterSubdiv_And_Child_Records(Nullable<int> recid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Delete_MasterSubdiv_And_Child_Records", recidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Delete_RightOfWay_Record(Nullable<int> recid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Delete_RightOfWay_Record", recidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Delete_SubdivisionPlats_And_Child_Records(Nullable<int> recid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var recidParameter = recid.HasValue ?
                new ObjectParameter("recid", recid) :
                new ObjectParameter("recid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Delete_SubdivisionPlats_And_Child_Records", recidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_AddressRanges_Rec_Result> xp_usp_Read_AddressRanges_Rec(Nullable<int> addrrangeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var addrrangeidParameter = addrrangeid.HasValue ?
                new ObjectParameter("addrrangeid", addrrangeid) :
                new ObjectParameter("addrrangeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_AddressRanges_Rec_Result>("xp_usp_Read_AddressRanges_Rec", addrrangeidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUBOCDistricts_Rec_Result> xp_usp_Read_All_LUBOCDistricts_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUBOCDistricts_Rec_Result>("xp_usp_Read_All_LUBOCDistricts_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUBOCMembers_Rec_Result> xp_usp_Read_All_LUBOCMembers_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUBOCMembers_Rec_Result>("xp_usp_Read_All_LUBOCMembers_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUConsolTable_Rec_Result> xp_usp_Read_All_LUConsolTable_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUConsolTable_Rec_Result>("xp_usp_Read_All_LUConsolTable_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUConstInspectors_Rec_Result> xp_usp_Read_All_LUConstInspectors_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUConstInspectors_Rec_Result>("xp_usp_Read_All_LUConstInspectors_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUContractors_Rec_Result> xp_usp_Read_All_LUContractors_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUContractors_Rec_Result>("xp_usp_Read_All_LUContractors_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUDevelopers_Rec_Result> xp_usp_Read_All_LUDevelopers_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUDevelopers_Rec_Result>("xp_usp_Read_All_LUDevelopers_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUEngFirms_Rec_Result> xp_usp_Read_All_LUEngFirms_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUEngFirms_Rec_Result>("xp_usp_Read_All_LUEngFirms_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LURefTypes_Rec_Result> xp_usp_Read_All_LURefTypes_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LURefTypes_Rec_Result>("xp_usp_Read_All_LURefTypes_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LURoadDirections_Rec_Result> xp_usp_Read_All_LURoadDirections_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LURoadDirections_Rec_Result>("xp_usp_Read_All_LURoadDirections_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LURoadNameTypes_Rec_Result> xp_usp_Read_All_LURoadNameTypes_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LURoadNameTypes_Rec_Result>("xp_usp_Read_All_LURoadNameTypes_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUSWInspectors_Rec_Result> xp_usp_Read_All_LUSWInspectors_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUSWInspectors_Rec_Result>("xp_usp_Read_All_LUSWInspectors_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_All_LUTableList_Rec_Result> xp_usp_Read_All_LUTableList_Rec(ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_All_LUTableList_Rec_Result>("xp_usp_Read_All_LUTableList_Rec", spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_AssocCommZA_Rec_Result> xp_usp_Read_AssocCommZA_Rec(Nullable<int> assoczaid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var assoczaidParameter = assoczaid.HasValue ?
                new ObjectParameter("assoczaid", assoczaid) :
                new ObjectParameter("assoczaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_AssocCommZA_Rec_Result>("xp_usp_Read_AssocCommZA_Rec", assoczaidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_AssociatedRoads_Rec_Result> xp_usp_Read_AssociatedRoads_Rec(Nullable<int> assocroadid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var assocroadidParameter = assocroadid.HasValue ?
                new ObjectParameter("assocroadid", assocroadid) :
                new ObjectParameter("assocroadid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_AssociatedRoads_Rec_Result>("xp_usp_Read_AssociatedRoads_Rec", assocroadidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_BondComments_Rec_Result> xp_usp_Read_BondComments_Rec(Nullable<int> bondcommentid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bondcommentidParameter = bondcommentid.HasValue ?
                new ObjectParameter("bondcommentid", bondcommentid) :
                new ObjectParameter("bondcommentid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_BondComments_Rec_Result>("xp_usp_Read_BondComments_Rec", bondcommentidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_CommercialSites_Rec_Result> xp_usp_Read_CommercialSites_Rec(Nullable<int> commsiteid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_CommercialSites_Rec_Result>("xp_usp_Read_CommercialSites_Rec", commsiteidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_CSAliases_Rec_Result> xp_usp_Read_CSAliases_Rec(Nullable<int> csaliasid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var csaliasidParameter = csaliasid.HasValue ?
                new ObjectParameter("csaliasid", csaliasid) :
                new ObjectParameter("csaliasid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_CSAliases_Rec_Result>("xp_usp_Read_CSAliases_Rec", csaliasidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_CSAsBuilts_Rec_Result> xp_usp_Read_CSAsBuilts_Rec(Nullable<int> csabid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var csabidParameter = csabid.HasValue ?
                new ObjectParameter("csabid", csabid) :
                new ObjectParameter("csabid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_CSAsBuilts_Rec_Result>("xp_usp_Read_CSAsBuilts_Rec", csabidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_CSComments_Rec_Result> xp_usp_Read_CSComments_Rec(Nullable<int> cscommid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var cscommidParameter = cscommid.HasValue ?
                new ObjectParameter("cscommid", cscommid) :
                new ObjectParameter("cscommid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_CSComments_Rec_Result>("xp_usp_Read_CSComments_Rec", cscommidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_CulDeSacs_Rec_Result> xp_usp_Read_CulDeSacs_Rec(Nullable<int> culdesacid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var culdesacidParameter = culdesacid.HasValue ?
                new ObjectParameter("culdesacid", culdesacid) :
                new ObjectParameter("culdesacid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_CulDeSacs_Rec_Result>("xp_usp_Read_CulDeSacs_Rec", culdesacidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_EngSubComments_Rec_Result> xp_usp_Read_EngSubComments_Rec(Nullable<int> engsubcommid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engsubcommidParameter = engsubcommid.HasValue ?
                new ObjectParameter("engsubcommid", engsubcommid) :
                new ObjectParameter("engsubcommid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_EngSubComments_Rec_Result>("xp_usp_Read_EngSubComments_Rec", engsubcommidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_EngSubmittals_Rec_Result> xp_usp_Read_EngSubmittals_Rec(Nullable<int> engsubmitid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engsubmitidParameter = engsubmitid.HasValue ?
                new ObjectParameter("engsubmitid", engsubmitid) :
                new ObjectParameter("engsubmitid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_EngSubmittals_Rec_Result>("xp_usp_Read_EngSubmittals_Rec", engsubmitidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUBOCDistricts_Rec_Result> xp_usp_Read_LUBOCDistricts_Rec(Nullable<int> bocdistrictid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUBOCDistricts_Rec_Result>("xp_usp_Read_LUBOCDistricts_Rec", bocdistrictidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUBOCMembers_Rec_Result> xp_usp_Read_LUBOCMembers_Rec(Nullable<int> bocmemberid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocmemberidParameter = bocmemberid.HasValue ?
                new ObjectParameter("bocmemberid", bocmemberid) :
                new ObjectParameter("bocmemberid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUBOCMembers_Rec_Result>("xp_usp_Read_LUBOCMembers_Rec", bocmemberidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUConsolTable_Rec_Result> xp_usp_Read_LUConsolTable_Rec(Nullable<int> consolid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var consolidParameter = consolid.HasValue ?
                new ObjectParameter("consolid", consolid) :
                new ObjectParameter("consolid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUConsolTable_Rec_Result>("xp_usp_Read_LUConsolTable_Rec", consolidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUConstInspectors_Rec_Result> xp_usp_Read_LUConstInspectors_Rec(Nullable<int> constinspid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUConstInspectors_Rec_Result>("xp_usp_Read_LUConstInspectors_Rec", constinspidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUContractors_Rec_Result> xp_usp_Read_LUContractors_Rec(Nullable<int> contractorid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("contractorid", contractorid) :
                new ObjectParameter("contractorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUContractors_Rec_Result>("xp_usp_Read_LUContractors_Rec", contractoridParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUDevelopers_Rec_Result> xp_usp_Read_LUDevelopers_Rec(Nullable<int> developerid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUDevelopers_Rec_Result>("xp_usp_Read_LUDevelopers_Rec", developeridParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUEngFirms_Rec_Result> xp_usp_Read_LUEngFirms_Rec(Nullable<int> engfirmid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engfirmidParameter = engfirmid.HasValue ?
                new ObjectParameter("engfirmid", engfirmid) :
                new ObjectParameter("engfirmid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUEngFirms_Rec_Result>("xp_usp_Read_LUEngFirms_Rec", engfirmidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LURefTypes_Rec_Result> xp_usp_Read_LURefTypes_Rec(Nullable<int> reftypeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeidParameter = reftypeid.HasValue ?
                new ObjectParameter("reftypeid", reftypeid) :
                new ObjectParameter("reftypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LURefTypes_Rec_Result>("xp_usp_Read_LURefTypes_Rec", reftypeidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LURoadDirections_Rec_Result> xp_usp_Read_LURoadDirections_Rec(Nullable<int> roaddirid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roaddiridParameter = roaddirid.HasValue ?
                new ObjectParameter("roaddirid", roaddirid) :
                new ObjectParameter("roaddirid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LURoadDirections_Rec_Result>("xp_usp_Read_LURoadDirections_Rec", roaddiridParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LURoadNameTypes_Rec_Result> xp_usp_Read_LURoadNameTypes_Rec(Nullable<int> roadnametypeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadnametypeidParameter = roadnametypeid.HasValue ?
                new ObjectParameter("roadnametypeid", roadnametypeid) :
                new ObjectParameter("roadnametypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LURoadNameTypes_Rec_Result>("xp_usp_Read_LURoadNameTypes_Rec", roadnametypeidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUSWInspectors_Rec_Result> xp_usp_Read_LUSWInspectors_Rec(Nullable<int> swinspid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var swinspidParameter = swinspid.HasValue ?
                new ObjectParameter("swinspid", swinspid) :
                new ObjectParameter("swinspid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUSWInspectors_Rec_Result>("xp_usp_Read_LUSWInspectors_Rec", swinspidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_LUTableList_Rec_Result> xp_usp_Read_LUTableList_Rec(Nullable<int> tablelistid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var tablelistidParameter = tablelistid.HasValue ?
                new ObjectParameter("tablelistid", tablelistid) :
                new ObjectParameter("tablelistid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_LUTableList_Rec_Result>("xp_usp_Read_LUTableList_Rec", tablelistidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_MasterBonds_Rec_Result> xp_usp_Read_MasterBonds_Rec(Nullable<int> bondid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bondidParameter = bondid.HasValue ?
                new ObjectParameter("bondid", bondid) :
                new ObjectParameter("bondid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_MasterBonds_Rec_Result>("xp_usp_Read_MasterBonds_Rec", bondidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_MasterRoads_Rec_Result> xp_usp_Read_MasterRoads_Rec(Nullable<int> roadid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_MasterRoads_Rec_Result>("xp_usp_Read_MasterRoads_Rec", roadidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_MasterSubAliases_Rec_Result> xp_usp_Read_MasterSubAliases_Rec(Nullable<int> subaliasid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subaliasidParameter = subaliasid.HasValue ?
                new ObjectParameter("subaliasid", subaliasid) :
                new ObjectParameter("subaliasid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_MasterSubAliases_Rec_Result>("xp_usp_Read_MasterSubAliases_Rec", subaliasidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_MasterSubComments_Rec_Result> xp_usp_Read_MasterSubComments_Rec(Nullable<int> mastersubcommid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubcommidParameter = mastersubcommid.HasValue ?
                new ObjectParameter("mastersubcommid", mastersubcommid) :
                new ObjectParameter("mastersubcommid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_MasterSubComments_Rec_Result>("xp_usp_Read_MasterSubComments_Rec", mastersubcommidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_MasterSubdiv_Rec_Result> xp_usp_Read_MasterSubdiv_Rec(Nullable<int> mastersubid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_MasterSubdiv_Rec_Result>("xp_usp_Read_MasterSubdiv_Rec", mastersubidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_MasterSubdivZA_Rec_Result> xp_usp_Read_MasterSubdivZA_Rec(Nullable<int> mastersubdivzaid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubdivzaidParameter = mastersubdivzaid.HasValue ?
                new ObjectParameter("mastersubdivzaid", mastersubdivzaid) :
                new ObjectParameter("mastersubdivzaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_MasterSubdivZA_Rec_Result>("xp_usp_Read_MasterSubdivZA_Rec", mastersubdivzaidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_MiscValues_Rec_Result> xp_usp_Read_MiscValues_Rec(Nullable<int> miscid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var miscidParameter = miscid.HasValue ?
                new ObjectParameter("miscid", miscid) :
                new ObjectParameter("miscid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_MiscValues_Rec_Result>("xp_usp_Read_MiscValues_Rec", miscidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_PlatAliases_Rec_Result> xp_usp_Read_PlatAliases_Rec(Nullable<int> plataliasid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var plataliasidParameter = plataliasid.HasValue ?
                new ObjectParameter("plataliasid", plataliasid) :
                new ObjectParameter("plataliasid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_PlatAliases_Rec_Result>("xp_usp_Read_PlatAliases_Rec", plataliasidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_PlatComments_Rec_Result> xp_usp_Read_PlatComments_Rec(Nullable<int> platcommid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var platcommidParameter = platcommid.HasValue ?
                new ObjectParameter("platcommid", platcommid) :
                new ObjectParameter("platcommid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_PlatComments_Rec_Result>("xp_usp_Read_PlatComments_Rec", platcommidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_Ratings_Rec_Result> xp_usp_Read_Ratings_Rec(Nullable<int> ratingid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var ratingidParameter = ratingid.HasValue ?
                new ObjectParameter("ratingid", ratingid) :
                new ObjectParameter("ratingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_Ratings_Rec_Result>("xp_usp_Read_Ratings_Rec", ratingidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_RespondingAgency_Rec_Result> xp_usp_Read_RespondingAgency_Rec(Nullable<int> respagencyid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var respagencyidParameter = respagencyid.HasValue ?
                new ObjectParameter("respagencyid", respagencyid) :
                new ObjectParameter("respagencyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_RespondingAgency_Rec_Result>("xp_usp_Read_RespondingAgency_Rec", respagencyidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_Resurfacing_Rec_Result> xp_usp_Read_Resurfacing_Rec(Nullable<int> resurfid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var resurfidParameter = resurfid.HasValue ?
                new ObjectParameter("resurfid", resurfid) :
                new ObjectParameter("resurfid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_Resurfacing_Rec_Result>("xp_usp_Read_Resurfacing_Rec", resurfidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_RightOfWay_Rec_Result> xp_usp_Read_RightOfWay_Rec(Nullable<int> rightofwayid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var rightofwayidParameter = rightofwayid.HasValue ?
                new ObjectParameter("rightofwayid", rightofwayid) :
                new ObjectParameter("rightofwayid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_RightOfWay_Rec_Result>("xp_usp_Read_RightOfWay_Rec", rightofwayidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_RoadAliases_Rec_Result> xp_usp_Read_RoadAliases_Rec(Nullable<int> aliasid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var aliasidParameter = aliasid.HasValue ?
                new ObjectParameter("aliasid", aliasid) :
                new ObjectParameter("aliasid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_RoadAliases_Rec_Result>("xp_usp_Read_RoadAliases_Rec", aliasidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_RoadComments_Rec_Result> xp_usp_Read_RoadComments_Rec(Nullable<int> commentid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commentidParameter = commentid.HasValue ?
                new ObjectParameter("commentid", commentid) :
                new ObjectParameter("commentid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_RoadComments_Rec_Result>("xp_usp_Read_RoadComments_Rec", commentidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_RoadDistricts_Rec_Result> xp_usp_Read_RoadDistricts_Rec(Nullable<int> roaddistid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roaddistidParameter = roaddistid.HasValue ?
                new ObjectParameter("roaddistid", roaddistid) :
                new ObjectParameter("roaddistid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_RoadDistricts_Rec_Result>("xp_usp_Read_RoadDistricts_Rec", roaddistidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_SpeedLimits_Rec_Result> xp_usp_Read_SpeedLimits_Rec(Nullable<int> speedlimitid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var speedlimitidParameter = speedlimitid.HasValue ?
                new ObjectParameter("speedlimitid", speedlimitid) :
                new ObjectParameter("speedlimitid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_SpeedLimits_Rec_Result>("xp_usp_Read_SpeedLimits_Rec", speedlimitidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_StorageRequests_Rec_Result> xp_usp_Read_StorageRequests_Rec(Nullable<int> storreqid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var storreqidParameter = storreqid.HasValue ?
                new ObjectParameter("storreqid", storreqid) :
                new ObjectParameter("storreqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_StorageRequests_Rec_Result>("xp_usp_Read_StorageRequests_Rec", storreqidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_Striping_Rec_Result> xp_usp_Read_Striping_Rec(Nullable<int> stripeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var stripeidParameter = stripeid.HasValue ?
                new ObjectParameter("stripeid", stripeid) :
                new ObjectParameter("stripeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_Striping_Rec_Result>("xp_usp_Read_Striping_Rec", stripeidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_SubdivFees_Rec_Result> xp_usp_Read_SubdivFees_Rec(Nullable<int> subdivfeeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subdivfeeidParameter = subdivfeeid.HasValue ?
                new ObjectParameter("subdivfeeid", subdivfeeid) :
                new ObjectParameter("subdivfeeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_SubdivFees_Rec_Result>("xp_usp_Read_SubdivFees_Rec", subdivfeeidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_SubdivisionPlats_Rec_Result> xp_usp_Read_SubdivisionPlats_Rec(Nullable<int> masterplatid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var masterplatidParameter = masterplatid.HasValue ?
                new ObjectParameter("masterplatid", masterplatid) :
                new ObjectParameter("masterplatid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_SubdivisionPlats_Rec_Result>("xp_usp_Read_SubdivisionPlats_Rec", masterplatidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_SubdivPermits_Rec_Result> xp_usp_Read_SubdivPermits_Rec(Nullable<int> subdivpermitid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subdivpermitidParameter = subdivpermitid.HasValue ?
                new ObjectParameter("subdivpermitid", subdivpermitid) :
                new ObjectParameter("subdivpermitid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_SubdivPermits_Rec_Result>("xp_usp_Read_SubdivPermits_Rec", subdivpermitidParameter, spstat, errmsg, recn);
        }
    
        public virtual ObjectResult<xp_usp_Read_SubDivZA_Rec_Result> xp_usp_Read_SubDivZA_Rec(Nullable<int> subdivzaid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subdivzaidParameter = subdivzaid.HasValue ?
                new ObjectParameter("subdivzaid", subdivzaid) :
                new ObjectParameter("subdivzaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_usp_Read_SubDivZA_Rec_Result>("xp_usp_Read_SubDivZA_Rec", subdivzaidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_AddressRanges_Rec(Nullable<int> addrrangeid, Nullable<int> assocroadid, Nullable<int> lowerlimit, Nullable<int> upperlimit, string addrrngcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var addrrangeidParameter = addrrangeid.HasValue ?
                new ObjectParameter("addrrangeid", addrrangeid) :
                new ObjectParameter("addrrangeid", typeof(int));
    
            var assocroadidParameter = assocroadid.HasValue ?
                new ObjectParameter("assocroadid", assocroadid) :
                new ObjectParameter("assocroadid", typeof(int));
    
            var lowerlimitParameter = lowerlimit.HasValue ?
                new ObjectParameter("lowerlimit", lowerlimit) :
                new ObjectParameter("lowerlimit", typeof(int));
    
            var upperlimitParameter = upperlimit.HasValue ?
                new ObjectParameter("upperlimit", upperlimit) :
                new ObjectParameter("upperlimit", typeof(int));
    
            var addrrngcommentParameter = addrrngcomment != null ?
                new ObjectParameter("addrrngcomment", addrrngcomment) :
                new ObjectParameter("addrrngcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_AddressRanges_Rec", addrrangeidParameter, assocroadidParameter, lowerlimitParameter, upperlimitParameter, addrrngcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_AssocCommZA_Rec(Nullable<int> assoczaid, Nullable<int> commsiteid, string zoningappno, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var assoczaidParameter = assoczaid.HasValue ?
                new ObjectParameter("assoczaid", assoczaid) :
                new ObjectParameter("assoczaid", typeof(int));
    
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var zoningappnoParameter = zoningappno != null ?
                new ObjectParameter("zoningappno", zoningappno) :
                new ObjectParameter("zoningappno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_AssocCommZA_Rec", assoczaidParameter, commsiteidParameter, zoningappnoParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_AssociatedRoads_Rec(Nullable<int> assocroadid, string reftype, Nullable<int> refid, Nullable<int> roadid, Nullable<decimal> measurefrom, Nullable<decimal> measureto, Nullable<decimal> measurelength, Nullable<decimal> assocphaselength, Nullable<decimal> gislength, string fromtodesc, Nullable<int> mainttypeid, Nullable<System.DateTime> origsurfdate, Nullable<int> surftypeid, string surfcomment, Nullable<bool> curbgutter, Nullable<int> watersourceid, Nullable<int> sewerproviderid, string assocroadscomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var assocroadidParameter = assocroadid.HasValue ?
                new ObjectParameter("assocroadid", assocroadid) :
                new ObjectParameter("assocroadid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var measurefromParameter = measurefrom.HasValue ?
                new ObjectParameter("measurefrom", measurefrom) :
                new ObjectParameter("measurefrom", typeof(decimal));
    
            var measuretoParameter = measureto.HasValue ?
                new ObjectParameter("measureto", measureto) :
                new ObjectParameter("measureto", typeof(decimal));
    
            var measurelengthParameter = measurelength.HasValue ?
                new ObjectParameter("measurelength", measurelength) :
                new ObjectParameter("measurelength", typeof(decimal));
    
            var assocphaselengthParameter = assocphaselength.HasValue ?
                new ObjectParameter("assocphaselength", assocphaselength) :
                new ObjectParameter("assocphaselength", typeof(decimal));
    
            var gislengthParameter = gislength.HasValue ?
                new ObjectParameter("gislength", gislength) :
                new ObjectParameter("gislength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var mainttypeidParameter = mainttypeid.HasValue ?
                new ObjectParameter("mainttypeid", mainttypeid) :
                new ObjectParameter("mainttypeid", typeof(int));
    
            var origsurfdateParameter = origsurfdate.HasValue ?
                new ObjectParameter("origsurfdate", origsurfdate) :
                new ObjectParameter("origsurfdate", typeof(System.DateTime));
    
            var surftypeidParameter = surftypeid.HasValue ?
                new ObjectParameter("surftypeid", surftypeid) :
                new ObjectParameter("surftypeid", typeof(int));
    
            var surfcommentParameter = surfcomment != null ?
                new ObjectParameter("surfcomment", surfcomment) :
                new ObjectParameter("surfcomment", typeof(string));
    
            var curbgutterParameter = curbgutter.HasValue ?
                new ObjectParameter("curbgutter", curbgutter) :
                new ObjectParameter("curbgutter", typeof(bool));
    
            var watersourceidParameter = watersourceid.HasValue ?
                new ObjectParameter("watersourceid", watersourceid) :
                new ObjectParameter("watersourceid", typeof(int));
    
            var sewerprovideridParameter = sewerproviderid.HasValue ?
                new ObjectParameter("sewerproviderid", sewerproviderid) :
                new ObjectParameter("sewerproviderid", typeof(int));
    
            var assocroadscommentParameter = assocroadscomment != null ?
                new ObjectParameter("assocroadscomment", assocroadscomment) :
                new ObjectParameter("assocroadscomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_AssociatedRoads_Rec", assocroadidParameter, reftypeParameter, refidParameter, roadidParameter, measurefromParameter, measuretoParameter, measurelengthParameter, assocphaselengthParameter, gislengthParameter, fromtodescParameter, mainttypeidParameter, origsurfdateParameter, surftypeidParameter, surfcommentParameter, curbgutterParameter, watersourceidParameter, sewerprovideridParameter, assocroadscommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_BondComments_Rec(Nullable<int> bondcommentid, Nullable<int> bondid, string bondcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bondcommentidParameter = bondcommentid.HasValue ?
                new ObjectParameter("bondcommentid", bondcommentid) :
                new ObjectParameter("bondcommentid", typeof(int));
    
            var bondidParameter = bondid.HasValue ?
                new ObjectParameter("bondid", bondid) :
                new ObjectParameter("bondid", typeof(int));
    
            var bondcommentParameter = bondcomment != null ?
                new ObjectParameter("bondcomment", bondcomment) :
                new ObjectParameter("bondcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_BondComments_Rec", bondcommentidParameter, bondidParameter, bondcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_CommercialSites_ChangeParent(Nullable<int> commsiteid, Nullable<int> mastersubid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_CommercialSites_ChangeParent", commsiteidParameter, mastersubidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_CommercialSites_Rec(Nullable<int> commsiteid, Nullable<int> mastersubid, string sitename, Nullable<int> entranceroadid, Nullable<int> constinspid, Nullable<int> swinspid, Nullable<int> bocdistrictid, Nullable<System.DateTime> storagedate, string storageloc, Nullable<bool> swfacinspmaintcov, Nullable<decimal> acreage, Nullable<int> developerid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var sitenameParameter = sitename != null ?
                new ObjectParameter("sitename", sitename) :
                new ObjectParameter("sitename", typeof(string));
    
            var entranceroadidParameter = entranceroadid.HasValue ?
                new ObjectParameter("entranceroadid", entranceroadid) :
                new ObjectParameter("entranceroadid", typeof(int));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var swinspidParameter = swinspid.HasValue ?
                new ObjectParameter("swinspid", swinspid) :
                new ObjectParameter("swinspid", typeof(int));
    
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            var storagedateParameter = storagedate.HasValue ?
                new ObjectParameter("storagedate", storagedate) :
                new ObjectParameter("storagedate", typeof(System.DateTime));
    
            var storagelocParameter = storageloc != null ?
                new ObjectParameter("storageloc", storageloc) :
                new ObjectParameter("storageloc", typeof(string));
    
            var swfacinspmaintcovParameter = swfacinspmaintcov.HasValue ?
                new ObjectParameter("swfacinspmaintcov", swfacinspmaintcov) :
                new ObjectParameter("swfacinspmaintcov", typeof(bool));
    
            var acreageParameter = acreage.HasValue ?
                new ObjectParameter("acreage", acreage) :
                new ObjectParameter("acreage", typeof(decimal));
    
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_CommercialSites_Rec", commsiteidParameter, mastersubidParameter, sitenameParameter, entranceroadidParameter, constinspidParameter, swinspidParameter, bocdistrictidParameter, storagedateParameter, storagelocParameter, swfacinspmaintcovParameter, acreageParameter, developeridParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_CSAliases_Rec(Nullable<int> csaliasid, Nullable<int> commsiteid, string csaliasname, string csaliascomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var csaliasidParameter = csaliasid.HasValue ?
                new ObjectParameter("csaliasid", csaliasid) :
                new ObjectParameter("csaliasid", typeof(int));
    
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var csaliasnameParameter = csaliasname != null ?
                new ObjectParameter("csaliasname", csaliasname) :
                new ObjectParameter("csaliasname", typeof(string));
    
            var csaliascommentParameter = csaliascomment != null ?
                new ObjectParameter("csaliascomment", csaliascomment) :
                new ObjectParameter("csaliascomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_CSAliases_Rec", csaliasidParameter, commsiteidParameter, csaliasnameParameter, csaliascommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_CSAsBuilts_Rec(Nullable<int> csabid, Nullable<int> commsiteid, Nullable<System.DateTime> asbuiltrecvddate, Nullable<System.DateTime> asbuiltcommdate, Nullable<System.DateTime> asbuiltfinappvldate, string structuredesc, Nullable<System.DateTime> storagedate, string storageloc, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var csabidParameter = csabid.HasValue ?
                new ObjectParameter("csabid", csabid) :
                new ObjectParameter("csabid", typeof(int));
    
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var asbuiltrecvddateParameter = asbuiltrecvddate.HasValue ?
                new ObjectParameter("asbuiltrecvddate", asbuiltrecvddate) :
                new ObjectParameter("asbuiltrecvddate", typeof(System.DateTime));
    
            var asbuiltcommdateParameter = asbuiltcommdate.HasValue ?
                new ObjectParameter("asbuiltcommdate", asbuiltcommdate) :
                new ObjectParameter("asbuiltcommdate", typeof(System.DateTime));
    
            var asbuiltfinappvldateParameter = asbuiltfinappvldate.HasValue ?
                new ObjectParameter("asbuiltfinappvldate", asbuiltfinappvldate) :
                new ObjectParameter("asbuiltfinappvldate", typeof(System.DateTime));
    
            var structuredescParameter = structuredesc != null ?
                new ObjectParameter("structuredesc", structuredesc) :
                new ObjectParameter("structuredesc", typeof(string));
    
            var storagedateParameter = storagedate.HasValue ?
                new ObjectParameter("storagedate", storagedate) :
                new ObjectParameter("storagedate", typeof(System.DateTime));
    
            var storagelocParameter = storageloc != null ?
                new ObjectParameter("storageloc", storageloc) :
                new ObjectParameter("storageloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_CSAsBuilts_Rec", csabidParameter, commsiteidParameter, asbuiltrecvddateParameter, asbuiltcommdateParameter, asbuiltfinappvldateParameter, structuredescParameter, storagedateParameter, storagelocParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_CSComments_Rec(Nullable<int> cscommid, Nullable<int> commsiteid, string cscomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var cscommidParameter = cscommid.HasValue ?
                new ObjectParameter("cscommid", cscommid) :
                new ObjectParameter("cscommid", typeof(int));
    
            var commsiteidParameter = commsiteid.HasValue ?
                new ObjectParameter("commsiteid", commsiteid) :
                new ObjectParameter("commsiteid", typeof(int));
    
            var cscommentParameter = cscomment != null ?
                new ObjectParameter("cscomment", cscomment) :
                new ObjectParameter("cscomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_CSComments_Rec", cscommidParameter, commsiteidParameter, cscommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_CulDeSacs_Rec(Nullable<int> culdesacid, Nullable<int> roadid, Nullable<int> radiusdimft, string culdesaccomm, Nullable<decimal> markpoint, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var culdesacidParameter = culdesacid.HasValue ?
                new ObjectParameter("culdesacid", culdesacid) :
                new ObjectParameter("culdesacid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var radiusdimftParameter = radiusdimft.HasValue ?
                new ObjectParameter("radiusdimft", radiusdimft) :
                new ObjectParameter("radiusdimft", typeof(int));
    
            var culdesaccommParameter = culdesaccomm != null ?
                new ObjectParameter("culdesaccomm", culdesaccomm) :
                new ObjectParameter("culdesaccomm", typeof(string));
    
            var markpointParameter = markpoint.HasValue ?
                new ObjectParameter("markpoint", markpoint) :
                new ObjectParameter("markpoint", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_CulDeSacs_Rec", culdesacidParameter, roadidParameter, radiusdimftParameter, culdesaccommParameter, markpointParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_EngSubComments_Rec(Nullable<int> engsubcommid, Nullable<int> engsubmitid, string engsubcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engsubcommidParameter = engsubcommid.HasValue ?
                new ObjectParameter("engsubcommid", engsubcommid) :
                new ObjectParameter("engsubcommid", typeof(int));
    
            var engsubmitidParameter = engsubmitid.HasValue ?
                new ObjectParameter("engsubmitid", engsubmitid) :
                new ObjectParameter("engsubmitid", typeof(int));
    
            var engsubcommentParameter = engsubcomment != null ?
                new ObjectParameter("engsubcomment", engsubcomment) :
                new ObjectParameter("engsubcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_EngSubComments_Rec", engsubcommidParameter, engsubmitidParameter, engsubcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_EngSubmittals_Rec(Nullable<int> engsubmitid, string reftype, Nullable<int> refid, string recvdby, string receivedfrom, Nullable<System.DateTime> recvddate, Nullable<int> submittaltypeid, string routedto, Nullable<System.DateTime> finalapprvdate, Nullable<int> engfirmid, string engcontactname, string engcontactphone, string engcontactfax, string engcontactemail, string projectname, string subaddr, string subcity, string subst, string subzip, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engsubmitidParameter = engsubmitid.HasValue ?
                new ObjectParameter("engsubmitid", engsubmitid) :
                new ObjectParameter("engsubmitid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var recvdbyParameter = recvdby != null ?
                new ObjectParameter("recvdby", recvdby) :
                new ObjectParameter("recvdby", typeof(string));
    
            var receivedfromParameter = receivedfrom != null ?
                new ObjectParameter("receivedfrom", receivedfrom) :
                new ObjectParameter("receivedfrom", typeof(string));
    
            var recvddateParameter = recvddate.HasValue ?
                new ObjectParameter("recvddate", recvddate) :
                new ObjectParameter("recvddate", typeof(System.DateTime));
    
            var submittaltypeidParameter = submittaltypeid.HasValue ?
                new ObjectParameter("submittaltypeid", submittaltypeid) :
                new ObjectParameter("submittaltypeid", typeof(int));
    
            var routedtoParameter = routedto != null ?
                new ObjectParameter("routedto", routedto) :
                new ObjectParameter("routedto", typeof(string));
    
            var finalapprvdateParameter = finalapprvdate.HasValue ?
                new ObjectParameter("finalapprvdate", finalapprvdate) :
                new ObjectParameter("finalapprvdate", typeof(System.DateTime));
    
            var engfirmidParameter = engfirmid.HasValue ?
                new ObjectParameter("engfirmid", engfirmid) :
                new ObjectParameter("engfirmid", typeof(int));
    
            var engcontactnameParameter = engcontactname != null ?
                new ObjectParameter("engcontactname", engcontactname) :
                new ObjectParameter("engcontactname", typeof(string));
    
            var engcontactphoneParameter = engcontactphone != null ?
                new ObjectParameter("engcontactphone", engcontactphone) :
                new ObjectParameter("engcontactphone", typeof(string));
    
            var engcontactfaxParameter = engcontactfax != null ?
                new ObjectParameter("engcontactfax", engcontactfax) :
                new ObjectParameter("engcontactfax", typeof(string));
    
            var engcontactemailParameter = engcontactemail != null ?
                new ObjectParameter("engcontactemail", engcontactemail) :
                new ObjectParameter("engcontactemail", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subaddrParameter = subaddr != null ?
                new ObjectParameter("subaddr", subaddr) :
                new ObjectParameter("subaddr", typeof(string));
    
            var subcityParameter = subcity != null ?
                new ObjectParameter("subcity", subcity) :
                new ObjectParameter("subcity", typeof(string));
    
            var substParameter = subst != null ?
                new ObjectParameter("subst", subst) :
                new ObjectParameter("subst", typeof(string));
    
            var subzipParameter = subzip != null ?
                new ObjectParameter("subzip", subzip) :
                new ObjectParameter("subzip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_EngSubmittals_Rec", engsubmitidParameter, reftypeParameter, refidParameter, recvdbyParameter, receivedfromParameter, recvddateParameter, submittaltypeidParameter, routedtoParameter, finalapprvdateParameter, engfirmidParameter, engcontactnameParameter, engcontactphoneParameter, engcontactfaxParameter, engcontactemailParameter, projectnameParameter, subaddrParameter, subcityParameter, substParameter, subzipParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUBOCDistricts_Rec(Nullable<int> bocdistrictid, string bocdistrictname, string bocdistrictdesc, Nullable<int> bocmemberid, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            var bocdistrictnameParameter = bocdistrictname != null ?
                new ObjectParameter("bocdistrictname", bocdistrictname) :
                new ObjectParameter("bocdistrictname", typeof(string));
    
            var bocdistrictdescParameter = bocdistrictdesc != null ?
                new ObjectParameter("bocdistrictdesc", bocdistrictdesc) :
                new ObjectParameter("bocdistrictdesc", typeof(string));
    
            var bocmemberidParameter = bocmemberid.HasValue ?
                new ObjectParameter("bocmemberid", bocmemberid) :
                new ObjectParameter("bocmemberid", typeof(int));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUBOCDistricts_Rec", bocdistrictidParameter, bocdistrictnameParameter, bocdistrictdescParameter, bocmemberidParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUBOCMembers_Rec(Nullable<int> bocmemberid, string bocmembername, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bocmemberidParameter = bocmemberid.HasValue ?
                new ObjectParameter("bocmemberid", bocmemberid) :
                new ObjectParameter("bocmemberid", typeof(int));
    
            var bocmembernameParameter = bocmembername != null ?
                new ObjectParameter("bocmembername", bocmembername) :
                new ObjectParameter("bocmembername", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUBOCMembers_Rec", bocmemberidParameter, bocmembernameParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUConsolTable_Rec(Nullable<int> consolid, Nullable<int> tablecatno, string consolname, string consoldesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var consolidParameter = consolid.HasValue ?
                new ObjectParameter("consolid", consolid) :
                new ObjectParameter("consolid", typeof(int));
    
            var tablecatnoParameter = tablecatno.HasValue ?
                new ObjectParameter("tablecatno", tablecatno) :
                new ObjectParameter("tablecatno", typeof(int));
    
            var consolnameParameter = consolname != null ?
                new ObjectParameter("consolname", consolname) :
                new ObjectParameter("consolname", typeof(string));
    
            var consoldescParameter = consoldesc != null ?
                new ObjectParameter("consoldesc", consoldesc) :
                new ObjectParameter("consoldesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUConsolTable_Rec", consolidParameter, tablecatnoParameter, consolnameParameter, consoldescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUConstInspectors_Rec(Nullable<int> constinspid, string constinspfirstname, string constinspmidname, string constinsplastname, string constinspcode, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var constinspfirstnameParameter = constinspfirstname != null ?
                new ObjectParameter("constinspfirstname", constinspfirstname) :
                new ObjectParameter("constinspfirstname", typeof(string));
    
            var constinspmidnameParameter = constinspmidname != null ?
                new ObjectParameter("constinspmidname", constinspmidname) :
                new ObjectParameter("constinspmidname", typeof(string));
    
            var constinsplastnameParameter = constinsplastname != null ?
                new ObjectParameter("constinsplastname", constinsplastname) :
                new ObjectParameter("constinsplastname", typeof(string));
    
            var constinspcodeParameter = constinspcode != null ?
                new ObjectParameter("constinspcode", constinspcode) :
                new ObjectParameter("constinspcode", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUConstInspectors_Rec", constinspidParameter, constinspfirstnameParameter, constinspmidnameParameter, constinsplastnameParameter, constinspcodeParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUContractors_Rec(Nullable<int> contractorid, Nullable<int> contstatusid, string contractorname, string contractoraddr, string contractorcity, string contractorst, string contractorzip, string contractorphone, Nullable<int> contractorext, string contractorfax, string contractoremail, string contractorcomment, string contactname, string contactaddr, string contactcity, string contactst, string contactzip, string contactphone, Nullable<int> contactext, string contactfax, string contactcell, string contactemail, string contactcomment, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("contractorid", contractorid) :
                new ObjectParameter("contractorid", typeof(int));
    
            var contstatusidParameter = contstatusid.HasValue ?
                new ObjectParameter("contstatusid", contstatusid) :
                new ObjectParameter("contstatusid", typeof(int));
    
            var contractornameParameter = contractorname != null ?
                new ObjectParameter("contractorname", contractorname) :
                new ObjectParameter("contractorname", typeof(string));
    
            var contractoraddrParameter = contractoraddr != null ?
                new ObjectParameter("contractoraddr", contractoraddr) :
                new ObjectParameter("contractoraddr", typeof(string));
    
            var contractorcityParameter = contractorcity != null ?
                new ObjectParameter("contractorcity", contractorcity) :
                new ObjectParameter("contractorcity", typeof(string));
    
            var contractorstParameter = contractorst != null ?
                new ObjectParameter("contractorst", contractorst) :
                new ObjectParameter("contractorst", typeof(string));
    
            var contractorzipParameter = contractorzip != null ?
                new ObjectParameter("contractorzip", contractorzip) :
                new ObjectParameter("contractorzip", typeof(string));
    
            var contractorphoneParameter = contractorphone != null ?
                new ObjectParameter("contractorphone", contractorphone) :
                new ObjectParameter("contractorphone", typeof(string));
    
            var contractorextParameter = contractorext.HasValue ?
                new ObjectParameter("contractorext", contractorext) :
                new ObjectParameter("contractorext", typeof(int));
    
            var contractorfaxParameter = contractorfax != null ?
                new ObjectParameter("contractorfax", contractorfax) :
                new ObjectParameter("contractorfax", typeof(string));
    
            var contractoremailParameter = contractoremail != null ?
                new ObjectParameter("contractoremail", contractoremail) :
                new ObjectParameter("contractoremail", typeof(string));
    
            var contractorcommentParameter = contractorcomment != null ?
                new ObjectParameter("contractorcomment", contractorcomment) :
                new ObjectParameter("contractorcomment", typeof(string));
    
            var contactnameParameter = contactname != null ?
                new ObjectParameter("contactname", contactname) :
                new ObjectParameter("contactname", typeof(string));
    
            var contactaddrParameter = contactaddr != null ?
                new ObjectParameter("contactaddr", contactaddr) :
                new ObjectParameter("contactaddr", typeof(string));
    
            var contactcityParameter = contactcity != null ?
                new ObjectParameter("contactcity", contactcity) :
                new ObjectParameter("contactcity", typeof(string));
    
            var contactstParameter = contactst != null ?
                new ObjectParameter("contactst", contactst) :
                new ObjectParameter("contactst", typeof(string));
    
            var contactzipParameter = contactzip != null ?
                new ObjectParameter("contactzip", contactzip) :
                new ObjectParameter("contactzip", typeof(string));
    
            var contactphoneParameter = contactphone != null ?
                new ObjectParameter("contactphone", contactphone) :
                new ObjectParameter("contactphone", typeof(string));
    
            var contactextParameter = contactext.HasValue ?
                new ObjectParameter("contactext", contactext) :
                new ObjectParameter("contactext", typeof(int));
    
            var contactfaxParameter = contactfax != null ?
                new ObjectParameter("contactfax", contactfax) :
                new ObjectParameter("contactfax", typeof(string));
    
            var contactcellParameter = contactcell != null ?
                new ObjectParameter("contactcell", contactcell) :
                new ObjectParameter("contactcell", typeof(string));
    
            var contactemailParameter = contactemail != null ?
                new ObjectParameter("contactemail", contactemail) :
                new ObjectParameter("contactemail", typeof(string));
    
            var contactcommentParameter = contactcomment != null ?
                new ObjectParameter("contactcomment", contactcomment) :
                new ObjectParameter("contactcomment", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUContractors_Rec", contractoridParameter, contstatusidParameter, contractornameParameter, contractoraddrParameter, contractorcityParameter, contractorstParameter, contractorzipParameter, contractorphoneParameter, contractorextParameter, contractorfaxParameter, contractoremailParameter, contractorcommentParameter, contactnameParameter, contactaddrParameter, contactcityParameter, contactstParameter, contactzipParameter, contactphoneParameter, contactextParameter, contactfaxParameter, contactcellParameter, contactemailParameter, contactcommentParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUDevelopers_Rec(Nullable<int> developerid, Nullable<int> devstatusid, string devname, string devaddr, string devcity, string devst, string devzip, string devfax, string devphone, Nullable<int> devext, string devemail, string devcomment, string devcontname, string devcontaddr, string devcontcity, string devcontst, string devcontzip, string devcontfax, string devcontphone, Nullable<int> devcontext, string devcontcell, string devcontemail, string devcontcomment, Nullable<bool> csdev, Nullable<bool> pdev, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            var devstatusidParameter = devstatusid.HasValue ?
                new ObjectParameter("devstatusid", devstatusid) :
                new ObjectParameter("devstatusid", typeof(int));
    
            var devnameParameter = devname != null ?
                new ObjectParameter("devname", devname) :
                new ObjectParameter("devname", typeof(string));
    
            var devaddrParameter = devaddr != null ?
                new ObjectParameter("devaddr", devaddr) :
                new ObjectParameter("devaddr", typeof(string));
    
            var devcityParameter = devcity != null ?
                new ObjectParameter("devcity", devcity) :
                new ObjectParameter("devcity", typeof(string));
    
            var devstParameter = devst != null ?
                new ObjectParameter("devst", devst) :
                new ObjectParameter("devst", typeof(string));
    
            var devzipParameter = devzip != null ?
                new ObjectParameter("devzip", devzip) :
                new ObjectParameter("devzip", typeof(string));
    
            var devfaxParameter = devfax != null ?
                new ObjectParameter("devfax", devfax) :
                new ObjectParameter("devfax", typeof(string));
    
            var devphoneParameter = devphone != null ?
                new ObjectParameter("devphone", devphone) :
                new ObjectParameter("devphone", typeof(string));
    
            var devextParameter = devext.HasValue ?
                new ObjectParameter("devext", devext) :
                new ObjectParameter("devext", typeof(int));
    
            var devemailParameter = devemail != null ?
                new ObjectParameter("devemail", devemail) :
                new ObjectParameter("devemail", typeof(string));
    
            var devcommentParameter = devcomment != null ?
                new ObjectParameter("devcomment", devcomment) :
                new ObjectParameter("devcomment", typeof(string));
    
            var devcontnameParameter = devcontname != null ?
                new ObjectParameter("devcontname", devcontname) :
                new ObjectParameter("devcontname", typeof(string));
    
            var devcontaddrParameter = devcontaddr != null ?
                new ObjectParameter("devcontaddr", devcontaddr) :
                new ObjectParameter("devcontaddr", typeof(string));
    
            var devcontcityParameter = devcontcity != null ?
                new ObjectParameter("devcontcity", devcontcity) :
                new ObjectParameter("devcontcity", typeof(string));
    
            var devcontstParameter = devcontst != null ?
                new ObjectParameter("devcontst", devcontst) :
                new ObjectParameter("devcontst", typeof(string));
    
            var devcontzipParameter = devcontzip != null ?
                new ObjectParameter("devcontzip", devcontzip) :
                new ObjectParameter("devcontzip", typeof(string));
    
            var devcontfaxParameter = devcontfax != null ?
                new ObjectParameter("devcontfax", devcontfax) :
                new ObjectParameter("devcontfax", typeof(string));
    
            var devcontphoneParameter = devcontphone != null ?
                new ObjectParameter("devcontphone", devcontphone) :
                new ObjectParameter("devcontphone", typeof(string));
    
            var devcontextParameter = devcontext.HasValue ?
                new ObjectParameter("devcontext", devcontext) :
                new ObjectParameter("devcontext", typeof(int));
    
            var devcontcellParameter = devcontcell != null ?
                new ObjectParameter("devcontcell", devcontcell) :
                new ObjectParameter("devcontcell", typeof(string));
    
            var devcontemailParameter = devcontemail != null ?
                new ObjectParameter("devcontemail", devcontemail) :
                new ObjectParameter("devcontemail", typeof(string));
    
            var devcontcommentParameter = devcontcomment != null ?
                new ObjectParameter("devcontcomment", devcontcomment) :
                new ObjectParameter("devcontcomment", typeof(string));
    
            var csdevParameter = csdev.HasValue ?
                new ObjectParameter("csdev", csdev) :
                new ObjectParameter("csdev", typeof(bool));
    
            var pdevParameter = pdev.HasValue ?
                new ObjectParameter("pdev", pdev) :
                new ObjectParameter("pdev", typeof(bool));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUDevelopers_Rec", developeridParameter, devstatusidParameter, devnameParameter, devaddrParameter, devcityParameter, devstParameter, devzipParameter, devfaxParameter, devphoneParameter, devextParameter, devemailParameter, devcommentParameter, devcontnameParameter, devcontaddrParameter, devcontcityParameter, devcontstParameter, devcontzipParameter, devcontfaxParameter, devcontphoneParameter, devcontextParameter, devcontcellParameter, devcontemailParameter, devcontcommentParameter, csdevParameter, pdevParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUEngFirms_Rec(Nullable<int> engfirmid, string engfirmname, string engfirmaddr1, string engfirmaddr2, string engfirmcity, string engfirmst, string engfirmzip, string engfirmphone, string engfirmfax, string engfirmwebsite, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var engfirmidParameter = engfirmid.HasValue ?
                new ObjectParameter("engfirmid", engfirmid) :
                new ObjectParameter("engfirmid", typeof(int));
    
            var engfirmnameParameter = engfirmname != null ?
                new ObjectParameter("engfirmname", engfirmname) :
                new ObjectParameter("engfirmname", typeof(string));
    
            var engfirmaddr1Parameter = engfirmaddr1 != null ?
                new ObjectParameter("engfirmaddr1", engfirmaddr1) :
                new ObjectParameter("engfirmaddr1", typeof(string));
    
            var engfirmaddr2Parameter = engfirmaddr2 != null ?
                new ObjectParameter("engfirmaddr2", engfirmaddr2) :
                new ObjectParameter("engfirmaddr2", typeof(string));
    
            var engfirmcityParameter = engfirmcity != null ?
                new ObjectParameter("engfirmcity", engfirmcity) :
                new ObjectParameter("engfirmcity", typeof(string));
    
            var engfirmstParameter = engfirmst != null ?
                new ObjectParameter("engfirmst", engfirmst) :
                new ObjectParameter("engfirmst", typeof(string));
    
            var engfirmzipParameter = engfirmzip != null ?
                new ObjectParameter("engfirmzip", engfirmzip) :
                new ObjectParameter("engfirmzip", typeof(string));
    
            var engfirmphoneParameter = engfirmphone != null ?
                new ObjectParameter("engfirmphone", engfirmphone) :
                new ObjectParameter("engfirmphone", typeof(string));
    
            var engfirmfaxParameter = engfirmfax != null ?
                new ObjectParameter("engfirmfax", engfirmfax) :
                new ObjectParameter("engfirmfax", typeof(string));
    
            var engfirmwebsiteParameter = engfirmwebsite != null ?
                new ObjectParameter("engfirmwebsite", engfirmwebsite) :
                new ObjectParameter("engfirmwebsite", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUEngFirms_Rec", engfirmidParameter, engfirmnameParameter, engfirmaddr1Parameter, engfirmaddr2Parameter, engfirmcityParameter, engfirmstParameter, engfirmzipParameter, engfirmphoneParameter, engfirmfaxParameter, engfirmwebsiteParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LURefTypes_Rec(Nullable<int> reftypeid, string reftypename, string reftypedesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var reftypeidParameter = reftypeid.HasValue ?
                new ObjectParameter("reftypeid", reftypeid) :
                new ObjectParameter("reftypeid", typeof(int));
    
            var reftypenameParameter = reftypename != null ?
                new ObjectParameter("reftypename", reftypename) :
                new ObjectParameter("reftypename", typeof(string));
    
            var reftypedescParameter = reftypedesc != null ?
                new ObjectParameter("reftypedesc", reftypedesc) :
                new ObjectParameter("reftypedesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LURefTypes_Rec", reftypeidParameter, reftypenameParameter, reftypedescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LURoadDirections_Rec(Nullable<int> roaddirid, string roaddirname, string roaddirdesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roaddiridParameter = roaddirid.HasValue ?
                new ObjectParameter("roaddirid", roaddirid) :
                new ObjectParameter("roaddirid", typeof(int));
    
            var roaddirnameParameter = roaddirname != null ?
                new ObjectParameter("roaddirname", roaddirname) :
                new ObjectParameter("roaddirname", typeof(string));
    
            var roaddirdescParameter = roaddirdesc != null ?
                new ObjectParameter("roaddirdesc", roaddirdesc) :
                new ObjectParameter("roaddirdesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LURoadDirections_Rec", roaddiridParameter, roaddirnameParameter, roaddirdescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LURoadNameTypes_Rec(Nullable<int> roadnametypeid, string roadtypename, string roadtypedesc, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadnametypeidParameter = roadnametypeid.HasValue ?
                new ObjectParameter("roadnametypeid", roadnametypeid) :
                new ObjectParameter("roadnametypeid", typeof(int));
    
            var roadtypenameParameter = roadtypename != null ?
                new ObjectParameter("roadtypename", roadtypename) :
                new ObjectParameter("roadtypename", typeof(string));
    
            var roadtypedescParameter = roadtypedesc != null ?
                new ObjectParameter("roadtypedesc", roadtypedesc) :
                new ObjectParameter("roadtypedesc", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LURoadNameTypes_Rec", roadnametypeidParameter, roadtypenameParameter, roadtypedescParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUSWInspectors_Rec(Nullable<int> swinspid, string swinspfirstname, string swinspmidname, string swinsplastname, string swinspcode, Nullable<bool> currrec, Nullable<int> sortorder, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var swinspidParameter = swinspid.HasValue ?
                new ObjectParameter("swinspid", swinspid) :
                new ObjectParameter("swinspid", typeof(int));
    
            var swinspfirstnameParameter = swinspfirstname != null ?
                new ObjectParameter("swinspfirstname", swinspfirstname) :
                new ObjectParameter("swinspfirstname", typeof(string));
    
            var swinspmidnameParameter = swinspmidname != null ?
                new ObjectParameter("swinspmidname", swinspmidname) :
                new ObjectParameter("swinspmidname", typeof(string));
    
            var swinsplastnameParameter = swinsplastname != null ?
                new ObjectParameter("swinsplastname", swinsplastname) :
                new ObjectParameter("swinsplastname", typeof(string));
    
            var swinspcodeParameter = swinspcode != null ?
                new ObjectParameter("swinspcode", swinspcode) :
                new ObjectParameter("swinspcode", typeof(string));
    
            var currrecParameter = currrec.HasValue ?
                new ObjectParameter("currrec", currrec) :
                new ObjectParameter("currrec", typeof(bool));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUSWInspectors_Rec", swinspidParameter, swinspfirstnameParameter, swinspmidnameParameter, swinsplastnameParameter, swinspcodeParameter, currrecParameter, sortorderParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_LUTableList_Rec(Nullable<int> tablelistid, string tablename, Nullable<int> tablecatno, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var tablelistidParameter = tablelistid.HasValue ?
                new ObjectParameter("tablelistid", tablelistid) :
                new ObjectParameter("tablelistid", typeof(int));
    
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            var tablecatnoParameter = tablecatno.HasValue ?
                new ObjectParameter("tablecatno", tablecatno) :
                new ObjectParameter("tablecatno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_LUTableList_Rec", tablelistidParameter, tablenameParameter, tablecatnoParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MasterBonds_Rec(Nullable<int> bondid, string reftype, Nullable<int> refid, string bondno, Nullable<int> bondtypeid, Nullable<int> constinspid, Nullable<int> bonddescid, Nullable<decimal> bondamt, Nullable<System.DateTime> bondbegdate, Nullable<System.DateTime> bondexpiredate, Nullable<int> bondstatusid, Nullable<System.DateTime> bondstatusdate, Nullable<int> developerid, Nullable<System.DateTime> punchlistdate90, Nullable<System.DateTime> punchlistdate60, Nullable<System.DateTime> punchlistdate30, Nullable<System.DateTime> punchlistdate10, Nullable<System.DateTime> releaseddate, Nullable<System.DateTime> coreapprdate, Nullable<bool> addtopreq, Nullable<System.DateTime> topletterdate, string bankname, string bankaddr1, string bankaddr2, string bankcity, string bankst, string bankzip, string bankphone, string bankcontact, string bankcontactph, Nullable<int> bankcontactext, string bankcontactfax, string bankcontactemail, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var bondidParameter = bondid.HasValue ?
                new ObjectParameter("bondid", bondid) :
                new ObjectParameter("bondid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var bondnoParameter = bondno != null ?
                new ObjectParameter("bondno", bondno) :
                new ObjectParameter("bondno", typeof(string));
    
            var bondtypeidParameter = bondtypeid.HasValue ?
                new ObjectParameter("bondtypeid", bondtypeid) :
                new ObjectParameter("bondtypeid", typeof(int));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var bonddescidParameter = bonddescid.HasValue ?
                new ObjectParameter("bonddescid", bonddescid) :
                new ObjectParameter("bonddescid", typeof(int));
    
            var bondamtParameter = bondamt.HasValue ?
                new ObjectParameter("bondamt", bondamt) :
                new ObjectParameter("bondamt", typeof(decimal));
    
            var bondbegdateParameter = bondbegdate.HasValue ?
                new ObjectParameter("bondbegdate", bondbegdate) :
                new ObjectParameter("bondbegdate", typeof(System.DateTime));
    
            var bondexpiredateParameter = bondexpiredate.HasValue ?
                new ObjectParameter("bondexpiredate", bondexpiredate) :
                new ObjectParameter("bondexpiredate", typeof(System.DateTime));
    
            var bondstatusidParameter = bondstatusid.HasValue ?
                new ObjectParameter("bondstatusid", bondstatusid) :
                new ObjectParameter("bondstatusid", typeof(int));
    
            var bondstatusdateParameter = bondstatusdate.HasValue ?
                new ObjectParameter("bondstatusdate", bondstatusdate) :
                new ObjectParameter("bondstatusdate", typeof(System.DateTime));
    
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            var punchlistdate90Parameter = punchlistdate90.HasValue ?
                new ObjectParameter("punchlistdate90", punchlistdate90) :
                new ObjectParameter("punchlistdate90", typeof(System.DateTime));
    
            var punchlistdate60Parameter = punchlistdate60.HasValue ?
                new ObjectParameter("punchlistdate60", punchlistdate60) :
                new ObjectParameter("punchlistdate60", typeof(System.DateTime));
    
            var punchlistdate30Parameter = punchlistdate30.HasValue ?
                new ObjectParameter("punchlistdate30", punchlistdate30) :
                new ObjectParameter("punchlistdate30", typeof(System.DateTime));
    
            var punchlistdate10Parameter = punchlistdate10.HasValue ?
                new ObjectParameter("punchlistdate10", punchlistdate10) :
                new ObjectParameter("punchlistdate10", typeof(System.DateTime));
    
            var releaseddateParameter = releaseddate.HasValue ?
                new ObjectParameter("releaseddate", releaseddate) :
                new ObjectParameter("releaseddate", typeof(System.DateTime));
    
            var coreapprdateParameter = coreapprdate.HasValue ?
                new ObjectParameter("coreapprdate", coreapprdate) :
                new ObjectParameter("coreapprdate", typeof(System.DateTime));
    
            var addtopreqParameter = addtopreq.HasValue ?
                new ObjectParameter("addtopreq", addtopreq) :
                new ObjectParameter("addtopreq", typeof(bool));
    
            var topletterdateParameter = topletterdate.HasValue ?
                new ObjectParameter("topletterdate", topletterdate) :
                new ObjectParameter("topletterdate", typeof(System.DateTime));
    
            var banknameParameter = bankname != null ?
                new ObjectParameter("bankname", bankname) :
                new ObjectParameter("bankname", typeof(string));
    
            var bankaddr1Parameter = bankaddr1 != null ?
                new ObjectParameter("bankaddr1", bankaddr1) :
                new ObjectParameter("bankaddr1", typeof(string));
    
            var bankaddr2Parameter = bankaddr2 != null ?
                new ObjectParameter("bankaddr2", bankaddr2) :
                new ObjectParameter("bankaddr2", typeof(string));
    
            var bankcityParameter = bankcity != null ?
                new ObjectParameter("bankcity", bankcity) :
                new ObjectParameter("bankcity", typeof(string));
    
            var bankstParameter = bankst != null ?
                new ObjectParameter("bankst", bankst) :
                new ObjectParameter("bankst", typeof(string));
    
            var bankzipParameter = bankzip != null ?
                new ObjectParameter("bankzip", bankzip) :
                new ObjectParameter("bankzip", typeof(string));
    
            var bankphoneParameter = bankphone != null ?
                new ObjectParameter("bankphone", bankphone) :
                new ObjectParameter("bankphone", typeof(string));
    
            var bankcontactParameter = bankcontact != null ?
                new ObjectParameter("bankcontact", bankcontact) :
                new ObjectParameter("bankcontact", typeof(string));
    
            var bankcontactphParameter = bankcontactph != null ?
                new ObjectParameter("bankcontactph", bankcontactph) :
                new ObjectParameter("bankcontactph", typeof(string));
    
            var bankcontactextParameter = bankcontactext.HasValue ?
                new ObjectParameter("bankcontactext", bankcontactext) :
                new ObjectParameter("bankcontactext", typeof(int));
    
            var bankcontactfaxParameter = bankcontactfax != null ?
                new ObjectParameter("bankcontactfax", bankcontactfax) :
                new ObjectParameter("bankcontactfax", typeof(string));
    
            var bankcontactemailParameter = bankcontactemail != null ?
                new ObjectParameter("bankcontactemail", bankcontactemail) :
                new ObjectParameter("bankcontactemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MasterBonds_Rec", bondidParameter, reftypeParameter, refidParameter, bondnoParameter, bondtypeidParameter, constinspidParameter, bonddescidParameter, bondamtParameter, bondbegdateParameter, bondexpiredateParameter, bondstatusidParameter, bondstatusdateParameter, developeridParameter, punchlistdate90Parameter, punchlistdate60Parameter, punchlistdate30Parameter, punchlistdate10Parameter, releaseddateParameter, coreapprdateParameter, addtopreqParameter, topletterdateParameter, banknameParameter, bankaddr1Parameter, bankaddr2Parameter, bankcityParameter, bankstParameter, bankzipParameter, bankphoneParameter, bankcontactParameter, bankcontactphParameter, bankcontactextParameter, bankcontactfaxParameter, bankcontactemailParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MasterRoads_Rec(Nullable<int> roadid, string locindicator, Nullable<int> roadprefixtypeid, Nullable<int> roadprefixid, string roadname, Nullable<int> roadsuffixtypeid, Nullable<int> roadsuffixid, string fullroadname, Nullable<int> roadstatusid, Nullable<System.DateTime> roadstatusdate, Nullable<System.DateTime> complaintdate, string dotroadno, Nullable<int> avgwidthft, Nullable<System.DateTime> lradate, Nullable<bool> gas, Nullable<bool> telephone, Nullable<bool> cable, Nullable<bool> upower, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var locindicatorParameter = locindicator != null ?
                new ObjectParameter("locindicator", locindicator) :
                new ObjectParameter("locindicator", typeof(string));
    
            var roadprefixtypeidParameter = roadprefixtypeid.HasValue ?
                new ObjectParameter("roadprefixtypeid", roadprefixtypeid) :
                new ObjectParameter("roadprefixtypeid", typeof(int));
    
            var roadprefixidParameter = roadprefixid.HasValue ?
                new ObjectParameter("roadprefixid", roadprefixid) :
                new ObjectParameter("roadprefixid", typeof(int));
    
            var roadnameParameter = roadname != null ?
                new ObjectParameter("roadname", roadname) :
                new ObjectParameter("roadname", typeof(string));
    
            var roadsuffixtypeidParameter = roadsuffixtypeid.HasValue ?
                new ObjectParameter("roadsuffixtypeid", roadsuffixtypeid) :
                new ObjectParameter("roadsuffixtypeid", typeof(int));
    
            var roadsuffixidParameter = roadsuffixid.HasValue ?
                new ObjectParameter("roadsuffixid", roadsuffixid) :
                new ObjectParameter("roadsuffixid", typeof(int));
    
            var fullroadnameParameter = fullroadname != null ?
                new ObjectParameter("fullroadname", fullroadname) :
                new ObjectParameter("fullroadname", typeof(string));
    
            var roadstatusidParameter = roadstatusid.HasValue ?
                new ObjectParameter("roadstatusid", roadstatusid) :
                new ObjectParameter("roadstatusid", typeof(int));
    
            var roadstatusdateParameter = roadstatusdate.HasValue ?
                new ObjectParameter("roadstatusdate", roadstatusdate) :
                new ObjectParameter("roadstatusdate", typeof(System.DateTime));
    
            var complaintdateParameter = complaintdate.HasValue ?
                new ObjectParameter("complaintdate", complaintdate) :
                new ObjectParameter("complaintdate", typeof(System.DateTime));
    
            var dotroadnoParameter = dotroadno != null ?
                new ObjectParameter("dotroadno", dotroadno) :
                new ObjectParameter("dotroadno", typeof(string));
    
            var avgwidthftParameter = avgwidthft.HasValue ?
                new ObjectParameter("avgwidthft", avgwidthft) :
                new ObjectParameter("avgwidthft", typeof(int));
    
            var lradateParameter = lradate.HasValue ?
                new ObjectParameter("lradate", lradate) :
                new ObjectParameter("lradate", typeof(System.DateTime));
    
            var gasParameter = gas.HasValue ?
                new ObjectParameter("gas", gas) :
                new ObjectParameter("gas", typeof(bool));
    
            var telephoneParameter = telephone.HasValue ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(bool));
    
            var cableParameter = cable.HasValue ?
                new ObjectParameter("cable", cable) :
                new ObjectParameter("cable", typeof(bool));
    
            var upowerParameter = upower.HasValue ?
                new ObjectParameter("upower", upower) :
                new ObjectParameter("upower", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MasterRoads_Rec", roadidParameter, locindicatorParameter, roadprefixtypeidParameter, roadprefixidParameter, roadnameParameter, roadsuffixtypeidParameter, roadsuffixidParameter, fullroadnameParameter, roadstatusidParameter, roadstatusdateParameter, complaintdateParameter, dotroadnoParameter, avgwidthftParameter, lradateParameter, gasParameter, telephoneParameter, cableParameter, upowerParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MasterSubAliases_Rec(Nullable<int> subaliasid, Nullable<int> mastersubid, string subaliasname, string subaliascomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subaliasidParameter = subaliasid.HasValue ?
                new ObjectParameter("subaliasid", subaliasid) :
                new ObjectParameter("subaliasid", typeof(int));
    
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var subaliasnameParameter = subaliasname != null ?
                new ObjectParameter("subaliasname", subaliasname) :
                new ObjectParameter("subaliasname", typeof(string));
    
            var subaliascommentParameter = subaliascomment != null ?
                new ObjectParameter("subaliascomment", subaliascomment) :
                new ObjectParameter("subaliascomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MasterSubAliases_Rec", subaliasidParameter, mastersubidParameter, subaliasnameParameter, subaliascommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MasterSubComments_Rec(Nullable<int> mastersubcommid, Nullable<int> mastersubid, string subcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubcommidParameter = mastersubcommid.HasValue ?
                new ObjectParameter("mastersubcommid", mastersubcommid) :
                new ObjectParameter("mastersubcommid", typeof(int));
    
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var subcommentParameter = subcomment != null ?
                new ObjectParameter("subcomment", subcomment) :
                new ObjectParameter("subcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MasterSubComments_Rec", mastersubcommidParameter, mastersubidParameter, subcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MasterSubdiv_ChangeParent(Nullable<int> mastersubid, Nullable<int> entranceroadid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var entranceroadidParameter = entranceroadid.HasValue ?
                new ObjectParameter("entranceroadid", entranceroadid) :
                new ObjectParameter("entranceroadid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MasterSubdiv_ChangeParent", mastersubidParameter, entranceroadidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MasterSubdiv_Rec(Nullable<int> mastersubid, string locindicator, string mastersubname, Nullable<int> entranceroadid, Nullable<int> substatusid, Nullable<System.DateTime> substatusdate, string landdistpermno, Nullable<int> constinspid, Nullable<bool> sidewalksreq, Nullable<System.DateTime> cleargradpermdate, Nullable<decimal> totpropacreage, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var locindicatorParameter = locindicator != null ?
                new ObjectParameter("locindicator", locindicator) :
                new ObjectParameter("locindicator", typeof(string));
    
            var mastersubnameParameter = mastersubname != null ?
                new ObjectParameter("mastersubname", mastersubname) :
                new ObjectParameter("mastersubname", typeof(string));
    
            var entranceroadidParameter = entranceroadid.HasValue ?
                new ObjectParameter("entranceroadid", entranceroadid) :
                new ObjectParameter("entranceroadid", typeof(int));
    
            var substatusidParameter = substatusid.HasValue ?
                new ObjectParameter("substatusid", substatusid) :
                new ObjectParameter("substatusid", typeof(int));
    
            var substatusdateParameter = substatusdate.HasValue ?
                new ObjectParameter("substatusdate", substatusdate) :
                new ObjectParameter("substatusdate", typeof(System.DateTime));
    
            var landdistpermnoParameter = landdistpermno != null ?
                new ObjectParameter("landdistpermno", landdistpermno) :
                new ObjectParameter("landdistpermno", typeof(string));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var sidewalksreqParameter = sidewalksreq.HasValue ?
                new ObjectParameter("sidewalksreq", sidewalksreq) :
                new ObjectParameter("sidewalksreq", typeof(bool));
    
            var cleargradpermdateParameter = cleargradpermdate.HasValue ?
                new ObjectParameter("cleargradpermdate", cleargradpermdate) :
                new ObjectParameter("cleargradpermdate", typeof(System.DateTime));
    
            var totpropacreageParameter = totpropacreage.HasValue ?
                new ObjectParameter("totpropacreage", totpropacreage) :
                new ObjectParameter("totpropacreage", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MasterSubdiv_Rec", mastersubidParameter, locindicatorParameter, mastersubnameParameter, entranceroadidParameter, substatusidParameter, substatusdateParameter, landdistpermnoParameter, constinspidParameter, sidewalksreqParameter, cleargradpermdateParameter, totpropacreageParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MasterSubdivZA_Rec(Nullable<int> mastersubdivzaid, Nullable<int> mastersubid, string zoningappno, Nullable<System.DateTime> zoningappdate, string zoningappcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var mastersubdivzaidParameter = mastersubdivzaid.HasValue ?
                new ObjectParameter("mastersubdivzaid", mastersubdivzaid) :
                new ObjectParameter("mastersubdivzaid", typeof(int));
    
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var zoningappnoParameter = zoningappno != null ?
                new ObjectParameter("zoningappno", zoningappno) :
                new ObjectParameter("zoningappno", typeof(string));
    
            var zoningappdateParameter = zoningappdate.HasValue ?
                new ObjectParameter("zoningappdate", zoningappdate) :
                new ObjectParameter("zoningappdate", typeof(System.DateTime));
    
            var zoningappcommentParameter = zoningappcomment != null ?
                new ObjectParameter("zoningappcomment", zoningappcomment) :
                new ObjectParameter("zoningappcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MasterSubdivZA_Rec", mastersubdivzaidParameter, mastersubidParameter, zoningappnoParameter, zoningappdateParameter, zoningappcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_MiscValues_Rec(Nullable<int> miscid, string miscdesc, string miscvalue, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var miscidParameter = miscid.HasValue ?
                new ObjectParameter("miscid", miscid) :
                new ObjectParameter("miscid", typeof(int));
    
            var miscdescParameter = miscdesc != null ?
                new ObjectParameter("miscdesc", miscdesc) :
                new ObjectParameter("miscdesc", typeof(string));
    
            var miscvalueParameter = miscvalue != null ?
                new ObjectParameter("miscvalue", miscvalue) :
                new ObjectParameter("miscvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_MiscValues_Rec", miscidParameter, miscdescParameter, miscvalueParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_PlatAliases_Rec(Nullable<int> plataliasid, Nullable<int> masterplatid, string plataliasname, string plataliascomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var plataliasidParameter = plataliasid.HasValue ?
                new ObjectParameter("plataliasid", plataliasid) :
                new ObjectParameter("plataliasid", typeof(int));
    
            var masterplatidParameter = masterplatid.HasValue ?
                new ObjectParameter("masterplatid", masterplatid) :
                new ObjectParameter("masterplatid", typeof(int));
    
            var plataliasnameParameter = plataliasname != null ?
                new ObjectParameter("plataliasname", plataliasname) :
                new ObjectParameter("plataliasname", typeof(string));
    
            var plataliascommentParameter = plataliascomment != null ?
                new ObjectParameter("plataliascomment", plataliascomment) :
                new ObjectParameter("plataliascomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_PlatAliases_Rec", plataliasidParameter, masterplatidParameter, plataliasnameParameter, plataliascommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_PlatComments_Rec(Nullable<int> platcommid, Nullable<int> masterplatid, string platcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var platcommidParameter = platcommid.HasValue ?
                new ObjectParameter("platcommid", platcommid) :
                new ObjectParameter("platcommid", typeof(int));
    
            var masterplatidParameter = masterplatid.HasValue ?
                new ObjectParameter("masterplatid", masterplatid) :
                new ObjectParameter("masterplatid", typeof(int));
    
            var platcommentParameter = platcomment != null ?
                new ObjectParameter("platcomment", platcomment) :
                new ObjectParameter("platcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_PlatComments_Rec", platcommidParameter, masterplatidParameter, platcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_Ratings_Rec(Nullable<int> ratingid, Nullable<int> roadid, Nullable<decimal> ratefrom, Nullable<decimal> rateto, Nullable<decimal> ratelength, string fromtodesc, Nullable<int> rating, Nullable<System.DateTime> ratingdate, string ratingcomment, Nullable<int> routeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var ratingidParameter = ratingid.HasValue ?
                new ObjectParameter("ratingid", ratingid) :
                new ObjectParameter("ratingid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var ratefromParameter = ratefrom.HasValue ?
                new ObjectParameter("ratefrom", ratefrom) :
                new ObjectParameter("ratefrom", typeof(decimal));
    
            var ratetoParameter = rateto.HasValue ?
                new ObjectParameter("rateto", rateto) :
                new ObjectParameter("rateto", typeof(decimal));
    
            var ratelengthParameter = ratelength.HasValue ?
                new ObjectParameter("ratelength", ratelength) :
                new ObjectParameter("ratelength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            var ratingdateParameter = ratingdate.HasValue ?
                new ObjectParameter("ratingdate", ratingdate) :
                new ObjectParameter("ratingdate", typeof(System.DateTime));
    
            var ratingcommentParameter = ratingcomment != null ?
                new ObjectParameter("ratingcomment", ratingcomment) :
                new ObjectParameter("ratingcomment", typeof(string));
    
            var routeidParameter = routeid.HasValue ?
                new ObjectParameter("routeid", routeid) :
                new ObjectParameter("routeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_Ratings_Rec", ratingidParameter, roadidParameter, ratefromParameter, ratetoParameter, ratelengthParameter, fromtodescParameter, ratingParameter, ratingdateParameter, ratingcommentParameter, routeidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_RespondingAgency_Rec(Nullable<int> respagencyid, Nullable<int> roadid, Nullable<decimal> respfrom, Nullable<decimal> respto, Nullable<decimal> resplength, string fromtodesc, Nullable<int> agencyid, string respcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var respagencyidParameter = respagencyid.HasValue ?
                new ObjectParameter("respagencyid", respagencyid) :
                new ObjectParameter("respagencyid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var respfromParameter = respfrom.HasValue ?
                new ObjectParameter("respfrom", respfrom) :
                new ObjectParameter("respfrom", typeof(decimal));
    
            var resptoParameter = respto.HasValue ?
                new ObjectParameter("respto", respto) :
                new ObjectParameter("respto", typeof(decimal));
    
            var resplengthParameter = resplength.HasValue ?
                new ObjectParameter("resplength", resplength) :
                new ObjectParameter("resplength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var agencyidParameter = agencyid.HasValue ?
                new ObjectParameter("agencyid", agencyid) :
                new ObjectParameter("agencyid", typeof(int));
    
            var respcommentParameter = respcomment != null ?
                new ObjectParameter("respcomment", respcomment) :
                new ObjectParameter("respcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_RespondingAgency_Rec", respagencyidParameter, roadidParameter, respfromParameter, resptoParameter, resplengthParameter, fromtodescParameter, agencyidParameter, respcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_Resurfacing_Rec(Nullable<int> resurfid, Nullable<int> roadid, Nullable<decimal> resurffrom, Nullable<decimal> resurfto, Nullable<decimal> resurflength, string fromtodesc, Nullable<int> resurfstatusid, Nullable<int> resurffundbyid, Nullable<int> contractorid, Nullable<System.DateTime> resurfdatecomp, string resurfcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var resurfidParameter = resurfid.HasValue ?
                new ObjectParameter("resurfid", resurfid) :
                new ObjectParameter("resurfid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var resurffromParameter = resurffrom.HasValue ?
                new ObjectParameter("resurffrom", resurffrom) :
                new ObjectParameter("resurffrom", typeof(decimal));
    
            var resurftoParameter = resurfto.HasValue ?
                new ObjectParameter("resurfto", resurfto) :
                new ObjectParameter("resurfto", typeof(decimal));
    
            var resurflengthParameter = resurflength.HasValue ?
                new ObjectParameter("resurflength", resurflength) :
                new ObjectParameter("resurflength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var resurfstatusidParameter = resurfstatusid.HasValue ?
                new ObjectParameter("resurfstatusid", resurfstatusid) :
                new ObjectParameter("resurfstatusid", typeof(int));
    
            var resurffundbyidParameter = resurffundbyid.HasValue ?
                new ObjectParameter("resurffundbyid", resurffundbyid) :
                new ObjectParameter("resurffundbyid", typeof(int));
    
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("contractorid", contractorid) :
                new ObjectParameter("contractorid", typeof(int));
    
            var resurfdatecompParameter = resurfdatecomp.HasValue ?
                new ObjectParameter("resurfdatecomp", resurfdatecomp) :
                new ObjectParameter("resurfdatecomp", typeof(System.DateTime));
    
            var resurfcommentParameter = resurfcomment != null ?
                new ObjectParameter("resurfcomment", resurfcomment) :
                new ObjectParameter("resurfcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_Resurfacing_Rec", resurfidParameter, roadidParameter, resurffromParameter, resurftoParameter, resurflengthParameter, fromtodescParameter, resurfstatusidParameter, resurffundbyidParameter, contractoridParameter, resurfdatecompParameter, resurfcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_RightOfWay_Rec(Nullable<int> rightofwayid, string reftype, Nullable<int> refid, Nullable<int> rowtypeid, Nullable<int> rowwidth, Nullable<decimal> rowfrom, Nullable<decimal> rowto, Nullable<decimal> rowlength, string fromtodesc, string rowcomment, Nullable<System.DateTime> deedrecorddate, string deedbook, string deedpage, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var rightofwayidParameter = rightofwayid.HasValue ?
                new ObjectParameter("rightofwayid", rightofwayid) :
                new ObjectParameter("rightofwayid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var rowtypeidParameter = rowtypeid.HasValue ?
                new ObjectParameter("rowtypeid", rowtypeid) :
                new ObjectParameter("rowtypeid", typeof(int));
    
            var rowwidthParameter = rowwidth.HasValue ?
                new ObjectParameter("rowwidth", rowwidth) :
                new ObjectParameter("rowwidth", typeof(int));
    
            var rowfromParameter = rowfrom.HasValue ?
                new ObjectParameter("rowfrom", rowfrom) :
                new ObjectParameter("rowfrom", typeof(decimal));
    
            var rowtoParameter = rowto.HasValue ?
                new ObjectParameter("rowto", rowto) :
                new ObjectParameter("rowto", typeof(decimal));
    
            var rowlengthParameter = rowlength.HasValue ?
                new ObjectParameter("rowlength", rowlength) :
                new ObjectParameter("rowlength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var rowcommentParameter = rowcomment != null ?
                new ObjectParameter("rowcomment", rowcomment) :
                new ObjectParameter("rowcomment", typeof(string));
    
            var deedrecorddateParameter = deedrecorddate.HasValue ?
                new ObjectParameter("deedrecorddate", deedrecorddate) :
                new ObjectParameter("deedrecorddate", typeof(System.DateTime));
    
            var deedbookParameter = deedbook != null ?
                new ObjectParameter("deedbook", deedbook) :
                new ObjectParameter("deedbook", typeof(string));
    
            var deedpageParameter = deedpage != null ?
                new ObjectParameter("deedpage", deedpage) :
                new ObjectParameter("deedpage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_RightOfWay_Rec", rightofwayidParameter, reftypeParameter, refidParameter, rowtypeidParameter, rowwidthParameter, rowfromParameter, rowtoParameter, rowlengthParameter, fromtodescParameter, rowcommentParameter, deedrecorddateParameter, deedbookParameter, deedpageParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_RoadAliases_Rec(Nullable<int> aliasid, Nullable<int> roadid, string aliasname, Nullable<int> aliastypeid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var aliasidParameter = aliasid.HasValue ?
                new ObjectParameter("aliasid", aliasid) :
                new ObjectParameter("aliasid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var aliasnameParameter = aliasname != null ?
                new ObjectParameter("aliasname", aliasname) :
                new ObjectParameter("aliasname", typeof(string));
    
            var aliastypeidParameter = aliastypeid.HasValue ?
                new ObjectParameter("aliastypeid", aliastypeid) :
                new ObjectParameter("aliastypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_RoadAliases_Rec", aliasidParameter, roadidParameter, aliasnameParameter, aliastypeidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_RoadComments_Rec(Nullable<int> commentid, Nullable<int> roadid, Nullable<System.DateTime> roadcommdate, string roadcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var commentidParameter = commentid.HasValue ?
                new ObjectParameter("commentid", commentid) :
                new ObjectParameter("commentid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var roadcommdateParameter = roadcommdate.HasValue ?
                new ObjectParameter("roadcommdate", roadcommdate) :
                new ObjectParameter("roadcommdate", typeof(System.DateTime));
    
            var roadcommentParameter = roadcomment != null ?
                new ObjectParameter("roadcomment", roadcomment) :
                new ObjectParameter("roadcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_RoadComments_Rec", commentidParameter, roadidParameter, roadcommdateParameter, roadcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_RoadDistricts_Rec(Nullable<int> roaddistid, Nullable<int> roadid, Nullable<int> bocdistrictid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var roaddistidParameter = roaddistid.HasValue ?
                new ObjectParameter("roaddistid", roaddistid) :
                new ObjectParameter("roaddistid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_RoadDistricts_Rec", roaddistidParameter, roadidParameter, bocdistrictidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_SpeedLimits_Rec(Nullable<int> speedlimitid, Nullable<int> roadid, Nullable<decimal> slfrom, Nullable<decimal> slto, Nullable<decimal> sllength, string fromtodesc, Nullable<int> mph, string slcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var speedlimitidParameter = speedlimitid.HasValue ?
                new ObjectParameter("speedlimitid", speedlimitid) :
                new ObjectParameter("speedlimitid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var slfromParameter = slfrom.HasValue ?
                new ObjectParameter("slfrom", slfrom) :
                new ObjectParameter("slfrom", typeof(decimal));
    
            var sltoParameter = slto.HasValue ?
                new ObjectParameter("slto", slto) :
                new ObjectParameter("slto", typeof(decimal));
    
            var sllengthParameter = sllength.HasValue ?
                new ObjectParameter("sllength", sllength) :
                new ObjectParameter("sllength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var mphParameter = mph.HasValue ?
                new ObjectParameter("mph", mph) :
                new ObjectParameter("mph", typeof(int));
    
            var slcommentParameter = slcomment != null ?
                new ObjectParameter("slcomment", slcomment) :
                new ObjectParameter("slcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_SpeedLimits_Rec", speedlimitidParameter, roadidParameter, slfromParameter, sltoParameter, sllengthParameter, fromtodescParameter, mphParameter, slcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_StorageRequests_Rec(Nullable<int> storreqid, string reftype, Nullable<int> refid, string storereqby, Nullable<System.DateTime> storereqdate, string storetaketoloc, string storerecvfromloc, string storecomment, string storecompletedby, Nullable<System.DateTime> storecompleteddate, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var storreqidParameter = storreqid.HasValue ?
                new ObjectParameter("storreqid", storreqid) :
                new ObjectParameter("storreqid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var storereqbyParameter = storereqby != null ?
                new ObjectParameter("storereqby", storereqby) :
                new ObjectParameter("storereqby", typeof(string));
    
            var storereqdateParameter = storereqdate.HasValue ?
                new ObjectParameter("storereqdate", storereqdate) :
                new ObjectParameter("storereqdate", typeof(System.DateTime));
    
            var storetaketolocParameter = storetaketoloc != null ?
                new ObjectParameter("storetaketoloc", storetaketoloc) :
                new ObjectParameter("storetaketoloc", typeof(string));
    
            var storerecvfromlocParameter = storerecvfromloc != null ?
                new ObjectParameter("storerecvfromloc", storerecvfromloc) :
                new ObjectParameter("storerecvfromloc", typeof(string));
    
            var storecommentParameter = storecomment != null ?
                new ObjectParameter("storecomment", storecomment) :
                new ObjectParameter("storecomment", typeof(string));
    
            var storecompletedbyParameter = storecompletedby != null ?
                new ObjectParameter("storecompletedby", storecompletedby) :
                new ObjectParameter("storecompletedby", typeof(string));
    
            var storecompleteddateParameter = storecompleteddate.HasValue ?
                new ObjectParameter("storecompleteddate", storecompleteddate) :
                new ObjectParameter("storecompleteddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_StorageRequests_Rec", storreqidParameter, reftypeParameter, refidParameter, storereqbyParameter, storereqdateParameter, storetaketolocParameter, storerecvfromlocParameter, storecommentParameter, storecompletedbyParameter, storecompleteddateParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_Striping_Rec(Nullable<int> stripeid, Nullable<int> roadid, Nullable<decimal> stripefrom, Nullable<decimal> stripeto, Nullable<decimal> stripelength, string fromtodesc, Nullable<int> stripestatusid, Nullable<int> contractorid, Nullable<System.DateTime> stripedatecomp, Nullable<int> stripematerialid, Nullable<int> stripetypeid, string stripecomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var stripeidParameter = stripeid.HasValue ?
                new ObjectParameter("stripeid", stripeid) :
                new ObjectParameter("stripeid", typeof(int));
    
            var roadidParameter = roadid.HasValue ?
                new ObjectParameter("roadid", roadid) :
                new ObjectParameter("roadid", typeof(int));
    
            var stripefromParameter = stripefrom.HasValue ?
                new ObjectParameter("stripefrom", stripefrom) :
                new ObjectParameter("stripefrom", typeof(decimal));
    
            var stripetoParameter = stripeto.HasValue ?
                new ObjectParameter("stripeto", stripeto) :
                new ObjectParameter("stripeto", typeof(decimal));
    
            var stripelengthParameter = stripelength.HasValue ?
                new ObjectParameter("stripelength", stripelength) :
                new ObjectParameter("stripelength", typeof(decimal));
    
            var fromtodescParameter = fromtodesc != null ?
                new ObjectParameter("fromtodesc", fromtodesc) :
                new ObjectParameter("fromtodesc", typeof(string));
    
            var stripestatusidParameter = stripestatusid.HasValue ?
                new ObjectParameter("stripestatusid", stripestatusid) :
                new ObjectParameter("stripestatusid", typeof(int));
    
            var contractoridParameter = contractorid.HasValue ?
                new ObjectParameter("contractorid", contractorid) :
                new ObjectParameter("contractorid", typeof(int));
    
            var stripedatecompParameter = stripedatecomp.HasValue ?
                new ObjectParameter("stripedatecomp", stripedatecomp) :
                new ObjectParameter("stripedatecomp", typeof(System.DateTime));
    
            var stripematerialidParameter = stripematerialid.HasValue ?
                new ObjectParameter("stripematerialid", stripematerialid) :
                new ObjectParameter("stripematerialid", typeof(int));
    
            var stripetypeidParameter = stripetypeid.HasValue ?
                new ObjectParameter("stripetypeid", stripetypeid) :
                new ObjectParameter("stripetypeid", typeof(int));
    
            var stripecommentParameter = stripecomment != null ?
                new ObjectParameter("stripecomment", stripecomment) :
                new ObjectParameter("stripecomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_Striping_Rec", stripeidParameter, roadidParameter, stripefromParameter, stripetoParameter, stripelengthParameter, fromtodescParameter, stripestatusidParameter, contractoridParameter, stripedatecompParameter, stripematerialidParameter, stripetypeidParameter, stripecommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_SubdivFees_Rec(Nullable<int> subdivfeeid, string reftype, Nullable<int> refid, Nullable<int> feetypeid, Nullable<decimal> feeamt, Nullable<System.DateTime> feecollecteddate, string feecollectedby, Nullable<int> checkno, string feecomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subdivfeeidParameter = subdivfeeid.HasValue ?
                new ObjectParameter("subdivfeeid", subdivfeeid) :
                new ObjectParameter("subdivfeeid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var feetypeidParameter = feetypeid.HasValue ?
                new ObjectParameter("feetypeid", feetypeid) :
                new ObjectParameter("feetypeid", typeof(int));
    
            var feeamtParameter = feeamt.HasValue ?
                new ObjectParameter("feeamt", feeamt) :
                new ObjectParameter("feeamt", typeof(decimal));
    
            var feecollecteddateParameter = feecollecteddate.HasValue ?
                new ObjectParameter("feecollecteddate", feecollecteddate) :
                new ObjectParameter("feecollecteddate", typeof(System.DateTime));
    
            var feecollectedbyParameter = feecollectedby != null ?
                new ObjectParameter("feecollectedby", feecollectedby) :
                new ObjectParameter("feecollectedby", typeof(string));
    
            var checknoParameter = checkno.HasValue ?
                new ObjectParameter("checkno", checkno) :
                new ObjectParameter("checkno", typeof(int));
    
            var feecommentParameter = feecomment != null ?
                new ObjectParameter("feecomment", feecomment) :
                new ObjectParameter("feecomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_SubdivFees_Rec", subdivfeeidParameter, reftypeParameter, refidParameter, feetypeidParameter, feeamtParameter, feecollecteddateParameter, feecollectedbyParameter, checknoParameter, feecommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_SubdivisionPlats_ChangeParent(Nullable<int> masterplatid, Nullable<int> mastersubid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var masterplatidParameter = masterplatid.HasValue ?
                new ObjectParameter("masterplatid", masterplatid) :
                new ObjectParameter("masterplatid", typeof(int));
    
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_SubdivisionPlats_ChangeParent", masterplatidParameter, mastersubidParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_SubdivisionPlats_Rec(Nullable<int> masterplatid, Nullable<int> mastersubid, string subdivplatname, Nullable<int> mainttypeid, Nullable<int> entranceroadid, Nullable<int> constinspid, Nullable<int> swinspid, Nullable<decimal> acreage, Nullable<int> bocdistrictid, Nullable<decimal> platlength, Nullable<System.DateTime> rdconstpermitdate, Nullable<int> planlocid, Nullable<System.DateTime> finalplatdate, Nullable<System.DateTime> bocacceptdate, string clerkofctbook, string clerkofctpage, Nullable<int> platstatusid, Nullable<bool> rowwarrdeed, Nullable<bool> quitclaimdeed, Nullable<bool> attorneystitle, Nullable<bool> performancebond, Nullable<bool> maintenancebond, Nullable<bool> powercoletter, Nullable<bool> streetsignpurchverif, Nullable<bool> proptaxpmtverif, Nullable<bool> indemnmaintagreement, Nullable<bool> swfacinspmaintcov, Nullable<bool> pt61, Nullable<bool> setsofplans10, Nullable<bool> fcroutesheet, Nullable<bool> hydrostudyneeded, Nullable<bool> bondcalcreq, Nullable<bool> coreresults, Nullable<System.DateTime> legalsentdate, Nullable<System.DateTime> devsentdate, Nullable<System.DateTime> storagedate, string storageloc, string subnumid, Nullable<int> developerid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var masterplatidParameter = masterplatid.HasValue ?
                new ObjectParameter("masterplatid", masterplatid) :
                new ObjectParameter("masterplatid", typeof(int));
    
            var mastersubidParameter = mastersubid.HasValue ?
                new ObjectParameter("mastersubid", mastersubid) :
                new ObjectParameter("mastersubid", typeof(int));
    
            var subdivplatnameParameter = subdivplatname != null ?
                new ObjectParameter("subdivplatname", subdivplatname) :
                new ObjectParameter("subdivplatname", typeof(string));
    
            var mainttypeidParameter = mainttypeid.HasValue ?
                new ObjectParameter("mainttypeid", mainttypeid) :
                new ObjectParameter("mainttypeid", typeof(int));
    
            var entranceroadidParameter = entranceroadid.HasValue ?
                new ObjectParameter("entranceroadid", entranceroadid) :
                new ObjectParameter("entranceroadid", typeof(int));
    
            var constinspidParameter = constinspid.HasValue ?
                new ObjectParameter("constinspid", constinspid) :
                new ObjectParameter("constinspid", typeof(int));
    
            var swinspidParameter = swinspid.HasValue ?
                new ObjectParameter("swinspid", swinspid) :
                new ObjectParameter("swinspid", typeof(int));
    
            var acreageParameter = acreage.HasValue ?
                new ObjectParameter("acreage", acreage) :
                new ObjectParameter("acreage", typeof(decimal));
    
            var bocdistrictidParameter = bocdistrictid.HasValue ?
                new ObjectParameter("bocdistrictid", bocdistrictid) :
                new ObjectParameter("bocdistrictid", typeof(int));
    
            var platlengthParameter = platlength.HasValue ?
                new ObjectParameter("platlength", platlength) :
                new ObjectParameter("platlength", typeof(decimal));
    
            var rdconstpermitdateParameter = rdconstpermitdate.HasValue ?
                new ObjectParameter("rdconstpermitdate", rdconstpermitdate) :
                new ObjectParameter("rdconstpermitdate", typeof(System.DateTime));
    
            var planlocidParameter = planlocid.HasValue ?
                new ObjectParameter("planlocid", planlocid) :
                new ObjectParameter("planlocid", typeof(int));
    
            var finalplatdateParameter = finalplatdate.HasValue ?
                new ObjectParameter("finalplatdate", finalplatdate) :
                new ObjectParameter("finalplatdate", typeof(System.DateTime));
    
            var bocacceptdateParameter = bocacceptdate.HasValue ?
                new ObjectParameter("bocacceptdate", bocacceptdate) :
                new ObjectParameter("bocacceptdate", typeof(System.DateTime));
    
            var clerkofctbookParameter = clerkofctbook != null ?
                new ObjectParameter("clerkofctbook", clerkofctbook) :
                new ObjectParameter("clerkofctbook", typeof(string));
    
            var clerkofctpageParameter = clerkofctpage != null ?
                new ObjectParameter("clerkofctpage", clerkofctpage) :
                new ObjectParameter("clerkofctpage", typeof(string));
    
            var platstatusidParameter = platstatusid.HasValue ?
                new ObjectParameter("platstatusid", platstatusid) :
                new ObjectParameter("platstatusid", typeof(int));
    
            var rowwarrdeedParameter = rowwarrdeed.HasValue ?
                new ObjectParameter("rowwarrdeed", rowwarrdeed) :
                new ObjectParameter("rowwarrdeed", typeof(bool));
    
            var quitclaimdeedParameter = quitclaimdeed.HasValue ?
                new ObjectParameter("quitclaimdeed", quitclaimdeed) :
                new ObjectParameter("quitclaimdeed", typeof(bool));
    
            var attorneystitleParameter = attorneystitle.HasValue ?
                new ObjectParameter("attorneystitle", attorneystitle) :
                new ObjectParameter("attorneystitle", typeof(bool));
    
            var performancebondParameter = performancebond.HasValue ?
                new ObjectParameter("performancebond", performancebond) :
                new ObjectParameter("performancebond", typeof(bool));
    
            var maintenancebondParameter = maintenancebond.HasValue ?
                new ObjectParameter("maintenancebond", maintenancebond) :
                new ObjectParameter("maintenancebond", typeof(bool));
    
            var powercoletterParameter = powercoletter.HasValue ?
                new ObjectParameter("powercoletter", powercoletter) :
                new ObjectParameter("powercoletter", typeof(bool));
    
            var streetsignpurchverifParameter = streetsignpurchverif.HasValue ?
                new ObjectParameter("streetsignpurchverif", streetsignpurchverif) :
                new ObjectParameter("streetsignpurchverif", typeof(bool));
    
            var proptaxpmtverifParameter = proptaxpmtverif.HasValue ?
                new ObjectParameter("proptaxpmtverif", proptaxpmtverif) :
                new ObjectParameter("proptaxpmtverif", typeof(bool));
    
            var indemnmaintagreementParameter = indemnmaintagreement.HasValue ?
                new ObjectParameter("indemnmaintagreement", indemnmaintagreement) :
                new ObjectParameter("indemnmaintagreement", typeof(bool));
    
            var swfacinspmaintcovParameter = swfacinspmaintcov.HasValue ?
                new ObjectParameter("swfacinspmaintcov", swfacinspmaintcov) :
                new ObjectParameter("swfacinspmaintcov", typeof(bool));
    
            var pt61Parameter = pt61.HasValue ?
                new ObjectParameter("pt61", pt61) :
                new ObjectParameter("pt61", typeof(bool));
    
            var setsofplans10Parameter = setsofplans10.HasValue ?
                new ObjectParameter("setsofplans10", setsofplans10) :
                new ObjectParameter("setsofplans10", typeof(bool));
    
            var fcroutesheetParameter = fcroutesheet.HasValue ?
                new ObjectParameter("fcroutesheet", fcroutesheet) :
                new ObjectParameter("fcroutesheet", typeof(bool));
    
            var hydrostudyneededParameter = hydrostudyneeded.HasValue ?
                new ObjectParameter("hydrostudyneeded", hydrostudyneeded) :
                new ObjectParameter("hydrostudyneeded", typeof(bool));
    
            var bondcalcreqParameter = bondcalcreq.HasValue ?
                new ObjectParameter("bondcalcreq", bondcalcreq) :
                new ObjectParameter("bondcalcreq", typeof(bool));
    
            var coreresultsParameter = coreresults.HasValue ?
                new ObjectParameter("coreresults", coreresults) :
                new ObjectParameter("coreresults", typeof(bool));
    
            var legalsentdateParameter = legalsentdate.HasValue ?
                new ObjectParameter("legalsentdate", legalsentdate) :
                new ObjectParameter("legalsentdate", typeof(System.DateTime));
    
            var devsentdateParameter = devsentdate.HasValue ?
                new ObjectParameter("devsentdate", devsentdate) :
                new ObjectParameter("devsentdate", typeof(System.DateTime));
    
            var storagedateParameter = storagedate.HasValue ?
                new ObjectParameter("storagedate", storagedate) :
                new ObjectParameter("storagedate", typeof(System.DateTime));
    
            var storagelocParameter = storageloc != null ?
                new ObjectParameter("storageloc", storageloc) :
                new ObjectParameter("storageloc", typeof(string));
    
            var subnumidParameter = subnumid != null ?
                new ObjectParameter("subnumid", subnumid) :
                new ObjectParameter("subnumid", typeof(string));
    
            var developeridParameter = developerid.HasValue ?
                new ObjectParameter("developerid", developerid) :
                new ObjectParameter("developerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_SubdivisionPlats_Rec", masterplatidParameter, mastersubidParameter, subdivplatnameParameter, mainttypeidParameter, entranceroadidParameter, constinspidParameter, swinspidParameter, acreageParameter, bocdistrictidParameter, platlengthParameter, rdconstpermitdateParameter, planlocidParameter, finalplatdateParameter, bocacceptdateParameter, clerkofctbookParameter, clerkofctpageParameter, platstatusidParameter, rowwarrdeedParameter, quitclaimdeedParameter, attorneystitleParameter, performancebondParameter, maintenancebondParameter, powercoletterParameter, streetsignpurchverifParameter, proptaxpmtverifParameter, indemnmaintagreementParameter, swfacinspmaintcovParameter, pt61Parameter, setsofplans10Parameter, fcroutesheetParameter, hydrostudyneededParameter, bondcalcreqParameter, coreresultsParameter, legalsentdateParameter, devsentdateParameter, storagedateParameter, storagelocParameter, subnumidParameter, developeridParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_SubdivPermits_Rec(Nullable<int> subdivpermitid, string reftype, Nullable<int> refid, string permitno, Nullable<int> pmttypeid, Nullable<System.DateTime> permitdate, Nullable<System.DateTime> permitexpiredate, string permitcomment, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subdivpermitidParameter = subdivpermitid.HasValue ?
                new ObjectParameter("subdivpermitid", subdivpermitid) :
                new ObjectParameter("subdivpermitid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var permitnoParameter = permitno != null ?
                new ObjectParameter("permitno", permitno) :
                new ObjectParameter("permitno", typeof(string));
    
            var pmttypeidParameter = pmttypeid.HasValue ?
                new ObjectParameter("pmttypeid", pmttypeid) :
                new ObjectParameter("pmttypeid", typeof(int));
    
            var permitdateParameter = permitdate.HasValue ?
                new ObjectParameter("permitdate", permitdate) :
                new ObjectParameter("permitdate", typeof(System.DateTime));
    
            var permitexpiredateParameter = permitexpiredate.HasValue ?
                new ObjectParameter("permitexpiredate", permitexpiredate) :
                new ObjectParameter("permitexpiredate", typeof(System.DateTime));
    
            var permitcommentParameter = permitcomment != null ?
                new ObjectParameter("permitcomment", permitcomment) :
                new ObjectParameter("permitcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_SubdivPermits_Rec", subdivpermitidParameter, reftypeParameter, refidParameter, permitnoParameter, pmttypeidParameter, permitdateParameter, permitexpiredateParameter, permitcommentParameter, spstat, errmsg, recn);
        }
    
        public virtual int xp_usp_Update_SubDivZA_Rec(Nullable<int> subdivzaid, string reftype, Nullable<int> refid, Nullable<int> mastersubdivzaid, ObjectParameter spstat, ObjectParameter errmsg, ObjectParameter recn)
        {
            var subdivzaidParameter = subdivzaid.HasValue ?
                new ObjectParameter("subdivzaid", subdivzaid) :
                new ObjectParameter("subdivzaid", typeof(int));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var refidParameter = refid.HasValue ?
                new ObjectParameter("refid", refid) :
                new ObjectParameter("refid", typeof(int));
    
            var mastersubdivzaidParameter = mastersubdivzaid.HasValue ?
                new ObjectParameter("mastersubdivzaid", mastersubdivzaid) :
                new ObjectParameter("mastersubdivzaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xp_usp_Update_SubDivZA_Rec", subdivzaidParameter, reftypeParameter, refidParameter, mastersubdivzaidParameter, spstat, errmsg, recn);
        }
    }
}
